{
  "version": 3,
  "sources": ["../../betautilities/wordler.ts"],
  "sourcesContent": ["const fs = require('fs')\nexport let todayWordID = 0;\nlet FILEDATA:any;\nexport let todayLeetCODE:string[] = [];\nlet charSet = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nexport let allWords:string[] = [];\nexport let validWords:string[] = [];\nimport {uDB} from '../consts';\n\nfs.readFile('betautilities/wordfile.txt', (err:ErrorEvent, data:any) => {\n  if (err) throw err;\n  FILEDATA = data;\n  refreshCodes()\n})\n\nfunction refreshCodes() {\n\n  validWords = FILEDATA.toString().split(\"\\n\");\n  let DATE = new Date(Date.now());\n  const str = DATE.getHours()+\"/\"+DATE.toLocaleDateString();\n  todayWordID = Math.abs(hashCode(str))%validWords.length;\n  \n  for (let i=0; i<5; i++) {\n    todayLeetCODE[i] = charSet[Math.floor((Math.abs(hashCode(str))%Math.pow(10, 5))/Math.pow(10, i))%charSet.length];\n  } // for(i)\n}\n\nfs.readFile('betautilities/allwords.txt', (err:ErrorEvent, data:any) => {\n    if (err) throw err;\n \n  allWords = data.toString().split(\"\\n\");\n})\n\n\n\nfunction hashCode(str:string) {\n  var seed = 0;\n  let h1 = 0xdeadbeef ^ seed, h2 = 0x41c6ce57 ^ seed;\n  for(let i = 0, ch; i < str.length; i++) {\n      ch = str.charCodeAt(i);\n      h1 = Math.imul(h1 ^ ch, 2654435761);\n      h2 = Math.imul(h2 ^ ch, 1597334677);\n  }\n  h1  = Math.imul(h1 ^ (h1 >>> 16), 2246822507);\n  h1 ^= Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n  h2  = Math.imul(h2 ^ (h2 >>> 16), 2246822507);\n  h2 ^= Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n\n  return 4294967296 * (2097151 & h2) + (h1 >>> 0);\n}\n\nlet STARTTIME = Date.now();\nexport async function serverUpdate() {\n  setTimeout(serverUpdate, 1000);\n  if (FILEDATA) refreshCodes()\n  let offsetTime = Date.now()-STARTTIME;\n  STARTTIME = Date.now();\n  await uDB.updateOne({fieldName:\"UPTIME\"}, {$inc:{uptime:offsetTime}}, {upsert:true});\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,oBAAkB;AAPlB,MAAM,KAAK,QAAQ,IAAI;AAChB,IAAI,cAAc;AACzB,IAAI;AACG,IAAI,gBAAyB,CAAC;AACrC,IAAI,UAAU;AACP,IAAI,WAAoB,CAAC;AACzB,IAAI,aAAsB,CAAC;AAGlC,GAAG,SAAS,8BAA8B,CAAC,KAAgB,SAAa;AACtE,MAAI;AAAK,UAAM;AACf,aAAW;AACX,eAAa;AACf,CAAC;AAED,SAAS,eAAe;AAEtB,eAAa,SAAS,SAAS,EAAE,MAAM,IAAI;AAC3C,MAAI,OAAO,IAAI,KAAK,KAAK,IAAI,CAAC;AAC9B,QAAM,MAAM,KAAK,SAAS,IAAE,MAAI,KAAK,mBAAmB;AACxD,gBAAc,KAAK,IAAI,SAAS,GAAG,CAAC,IAAE,WAAW;AAEjD,WAAS,IAAE,GAAG,IAAE,GAAG,KAAK;AACtB,kBAAc,KAAK,QAAQ,KAAK,MAAO,KAAK,IAAI,SAAS,GAAG,CAAC,IAAE,KAAK,IAAI,IAAI,CAAC,IAAG,KAAK,IAAI,IAAI,CAAC,CAAC,IAAE,QAAQ;AAAA,EAC3G;AACF;AAEA,GAAG,SAAS,8BAA8B,CAAC,KAAgB,SAAa;AACpE,MAAI;AAAK,UAAM;AAEjB,aAAW,KAAK,SAAS,EAAE,MAAM,IAAI;AACvC,CAAC;AAID,SAAS,SAAS,KAAY;AAC5B,MAAI,OAAO;AACX,MAAI,KAAK,aAAa,MAAM,KAAK,aAAa;AAC9C,WAAQ,IAAI,GAAG,IAAI,IAAI,IAAI,QAAQ,KAAK;AACpC,SAAK,IAAI,WAAW,CAAC;AACrB,SAAK,KAAK,KAAK,KAAK,IAAI,UAAU;AAClC,SAAK,KAAK,KAAK,KAAK,IAAI,UAAU;AAAA,EACtC;AACA,OAAM,KAAK,KAAK,KAAM,OAAO,IAAK,UAAU;AAC5C,QAAM,KAAK,KAAK,KAAM,OAAO,IAAK,UAAU;AAC5C,OAAM,KAAK,KAAK,KAAM,OAAO,IAAK,UAAU;AAC5C,QAAM,KAAK,KAAK,KAAM,OAAO,IAAK,UAAU;AAE5C,SAAO,cAAc,UAAU,OAAO,OAAO;AAC/C;AAEA,IAAI,YAAY,KAAK,IAAI;AACzB,eAAsB,eAAe;AACnC,aAAW,cAAc,GAAI;AAC7B,MAAI;AAAU,iBAAa;AAC3B,MAAI,aAAa,KAAK,IAAI,IAAE;AAC5B,cAAY,KAAK,IAAI;AACrB,QAAM,kBAAI,UAAU,EAAC,WAAU,SAAQ,GAAG,EAAC,MAAK,EAAC,QAAO,WAAU,EAAC,GAAG,EAAC,QAAO,KAAI,CAAC;AACrF;",
  "names": []
}
