{
  "version": 3,
  "sources": ["../../smallsubway/drawutils.js"],
  "sourcesContent": ["// https://stackoverflow.com/questions/3768565/drawing-an-svg-file-on-a-html5-canvas\n\nlet imagesReady = new Set();\n\nfunction drawSVG(imageID, hgt, width, x, y) {\n  if (imagesReady.has(imageID)) \n    ctx.drawImage(byId(imageID+\"svg_betaosreserved\"), x, y, width, hgt)\n}\nfunction prepSVG(imageID, clr) {\n  let img = document.createElement(\"img\");\n  img.id = imageID+\"svg_betaosreserved\";\n  img.style.display=\"none\";\n  document.body.appendChild(img);\n  let svg = byId(imageID);\n  svg.querySelector(\"path\").setAttribute(\"fill\",clr);\n  // svg.height = hgt;\n  // svg.width = width;\n  var xml = new XMLSerializer().serializeToString(svg);\n\n  // make it base64\n  var svg64 = btoa(xml);\n  var b64Start = 'data:image/svg+xml;base64,';\n\n  // prepend a \"header\"\n  var image64 = b64Start + svg64;\n\n  // set it as the source of the img element\n  img.onload = function() {\n      // draw the image onto the canvas\n    imagesReady.add(imageID);\n    // ctx.drawImage(img, x, y);\n  }\n  img.src = image64;\n}\n\n\nfunction handleOffset(connection) {\n  let angBtw = Math.atan2(connection.to.y - connection.from.y,\n    connection.to.x - connection.from.x);\n  // angBtw += K.PI;\n  let info = parallelConnections(connection);\n  let offsetR = (K.LINEWIDTH/2)*(2*info.idx+1-info.ct) //+ stopSz;\n  let newAng = info.flipped?(angBtw+Math.PI):angBtw;\n  return {x:offsetR*Math.cos(newAng+Math.PI/2), y: offsetR*Math.sin(newAng+Math.PI/2)}\n}\n\n\nfunction parallelConnections(cmp) {\n  let ct = 0;\n  let idx = -1;\n  let flipped = 0;\n  for (let i=0; i<connections.length; i++) {\n    let cnn= connections[i];\n    if (samePt(cnn.from, cmp.from) && samePt(cnn.to, cmp.to)\n       || samePt(cnn.from, cmp.to) && samePt(cnn.to, cmp.from)) {\n      if (cmp == cnn && idx == -1) {  \n        idx=ct;\n      }\n      if (samePt(cnn.from, cmp.to) && flipped == 0) flipped=1; // ONLY SET THIS ONCE\n      else if (flipped == 0) flipped = 2;\n      ct++;\n    }\n  }\n  return {idx:idx, flipped:flipped==1, ct:ct};\n}\n\nfunction registerMaximisingCanvas(id, widthPc, heightPc, redrawFcn) { // (id:string, widthPc:number, heightPc:number, redrawFcn:()=>any) {\n  //let canv = byId(id)// as HTMLCanvasElement;\n  window.addEventListener(\"resize\", (ev) => {\n    canv.width = window.innerWidth * widthPc;\n    canv.height = window.innerHeight * heightPc;\n    // everything is gone - restore it!\n    applyTransfm();\n    redrawFcn();\n  })\n  // canv.style.height = 100 * heightPc + \"vh\";\n  // canv.style.width = 100 * widthPc + \"vw\";\n  canv.width = window.innerWidth * widthPc;\n  canv.height = window.innerHeight * heightPc;\n  redrawFcn();\n}\n\nfunction nearestConnection(x, y) {\n  let bestDist = K.INF;\n  let bestConn = null;\n  for (let i=0; i<connections.length; i++) {\n    let cn = connections[i];\n    let off = handleOffset(cn);\n    // let tOff = handleOffset(cn.to);\n    let currDist = pDist(x, y, cn.from.x+off.x, cn.from.y+off.y, cn.to.x+off.x, cn.to.y+off.y);\n    if (currDist < bestDist) {\n      bestDist = currDist;\n      bestConn = cn;\n    }\n  }\n  // return bestConn;\n  return bestDist < K.LINEACCEPTDIST?bestConn:null;\n}\n\n// thanks https://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment#1501725\n// love not writing my own code\nfunction pDist(x, y, x1, y1, x2, y2) { // dist between line SEGMENT and pt\n\n  var A = x - x1;\n  var B = y - y1;\n  var C = x2 - x1;\n  var D = y2 - y1;\n\n  var dot = A * C + B * D;\n  var len_sq = C * C + D * D;\n  var param = -1;\n  if (len_sq != 0) //in case of 0 length line\n      param = dot / len_sq;\n\n  var xx, yy;\n\n  if (param < 0) {\n    xx = x1;\n    yy = y1;\n  }\n  else if (param > 1) {\n    xx = x2;\n    yy = y2;\n  }\n  else {\n    xx = x1 + param * C;\n    yy = y1 + param * D;\n  }\n\n  var dx = x - xx;\n  var dy = y - yy;\n  return Math.sqrt(dx * dx + dy * dy);\n}"],
  "mappings": ";AAEA,IAAI,cAAc,oBAAI,IAAI;AAE1B,SAAS,QAAQ,SAAS,KAAK,OAAO,GAAG,GAAG;AAC1C,MAAI,YAAY,IAAI,OAAO;AACzB,QAAI,UAAU,KAAK,UAAQ,oBAAoB,GAAG,GAAG,GAAG,OAAO,GAAG;AACtE;AACA,SAAS,QAAQ,SAAS,KAAK;AAC7B,MAAI,MAAM,SAAS,cAAc,KAAK;AACtC,MAAI,KAAK,UAAQ;AACjB,MAAI,MAAM,UAAQ;AAClB,WAAS,KAAK,YAAY,GAAG;AAC7B,MAAI,MAAM,KAAK,OAAO;AACtB,MAAI,cAAc,MAAM,EAAE,aAAa,QAAO,GAAG;AAGjD,MAAI,MAAM,IAAI,cAAc,EAAE,kBAAkB,GAAG;AAGnD,MAAI,QAAQ,KAAK,GAAG;AACpB,MAAI,WAAW;AAGf,MAAI,UAAU,WAAW;AAGzB,MAAI,SAAS,WAAW;AAEtB,gBAAY,IAAI,OAAO;AAAA,EAEzB;AACA,MAAI,MAAM;AACZ;AAGA,SAAS,aAAa,YAAY;AAChC,MAAI,SAAS,KAAK;AAAA,IAAM,WAAW,GAAG,IAAI,WAAW,KAAK;AAAA,IACxD,WAAW,GAAG,IAAI,WAAW,KAAK;AAAA,EAAC;AAErC,MAAI,OAAO,oBAAoB,UAAU;AACzC,MAAI,UAAW,EAAE,YAAU,KAAI,IAAE,KAAK,MAAI,IAAE,KAAK;AACjD,MAAI,SAAS,KAAK,UAAS,SAAO,KAAK,KAAI;AAC3C,SAAO,EAAC,GAAE,UAAQ,KAAK,IAAI,SAAO,KAAK,KAAG,CAAC,GAAG,GAAG,UAAQ,KAAK,IAAI,SAAO,KAAK,KAAG,CAAC,EAAC;AACrF;AAGA,SAAS,oBAAoB,KAAK;AAChC,MAAI,KAAK;AACT,MAAI,MAAM;AACV,MAAI,UAAU;AACd,WAAS,IAAE,GAAG,IAAE,YAAY,QAAQ,KAAK;AACvC,QAAI,MAAK,YAAY;AACrB,QAAI,OAAO,IAAI,MAAM,IAAI,IAAI,KAAK,OAAO,IAAI,IAAI,IAAI,EAAE,KACjD,OAAO,IAAI,MAAM,IAAI,EAAE,KAAK,OAAO,IAAI,IAAI,IAAI,IAAI,GAAG;AAC1D,UAAI,OAAO,OAAO,OAAO,IAAI;AAC3B,cAAI;AAAA,MACN;AACA,UAAI,OAAO,IAAI,MAAM,IAAI,EAAE,KAAK,WAAW;AAAG,kBAAQ;AAAA,eAC7C,WAAW;AAAG,kBAAU;AACjC;AAAA,IACF;AAAA,EACF;AACA,SAAO,EAAC,KAAS,SAAQ,WAAS,GAAG,GAAK;AAC5C;AAEA,SAAS,yBAAyB,IAAI,SAAS,UAAU,WAAW;AAElE,SAAO,iBAAiB,UAAU,CAAC,OAAO;AACxC,SAAK,QAAQ,OAAO,aAAa;AACjC,SAAK,SAAS,OAAO,cAAc;AAEnC,iBAAa;AACb,cAAU;AAAA,EACZ,CAAC;AAGD,OAAK,QAAQ,OAAO,aAAa;AACjC,OAAK,SAAS,OAAO,cAAc;AACnC,YAAU;AACZ;AAEA,SAAS,kBAAkB,GAAG,GAAG;AAC/B,MAAI,WAAW,EAAE;AACjB,MAAI,WAAW;AACf,WAAS,IAAE,GAAG,IAAE,YAAY,QAAQ,KAAK;AACvC,QAAI,KAAK,YAAY;AACrB,QAAI,MAAM,aAAa,EAAE;AAEzB,QAAI,WAAW,MAAM,GAAG,GAAG,GAAG,KAAK,IAAE,IAAI,GAAG,GAAG,KAAK,IAAE,IAAI,GAAG,GAAG,GAAG,IAAE,IAAI,GAAG,GAAG,GAAG,IAAE,IAAI,CAAC;AACzF,QAAI,WAAW,UAAU;AACvB,iBAAW;AACX,iBAAW;AAAA,IACb;AAAA,EACF;AAEA,SAAO,WAAW,EAAE,iBAAe,WAAS;AAC9C;AAIA,SAAS,MAAM,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI;AAEnC,MAAI,IAAI,IAAI;AACZ,MAAI,IAAI,IAAI;AACZ,MAAI,IAAI,KAAK;AACb,MAAI,IAAI,KAAK;AAEb,MAAI,MAAM,IAAI,IAAI,IAAI;AACtB,MAAI,SAAS,IAAI,IAAI,IAAI;AACzB,MAAI,QAAQ;AACZ,MAAI,UAAU;AACV,YAAQ,MAAM;AAElB,MAAI,IAAI;AAER,MAAI,QAAQ,GAAG;AACb,SAAK;AACL,SAAK;AAAA,EACP,WACS,QAAQ,GAAG;AAClB,SAAK;AACL,SAAK;AAAA,EACP,OACK;AACH,SAAK,KAAK,QAAQ;AAClB,SAAK,KAAK,QAAQ;AAAA,EACpB;AAEA,MAAI,KAAK,IAAI;AACb,MAAI,KAAK,IAAI;AACb,SAAO,KAAK,KAAK,KAAK,KAAK,KAAK,EAAE;AACpC;",
  "names": []
}
