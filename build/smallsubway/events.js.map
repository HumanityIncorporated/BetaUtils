{
  "version": 3,
  "sources": ["../../smallsubway/events.js"],
  "sourcesContent": ["// https://stackoverflow.com/questions/19519535/detect-if-browser-tab-is-active-or-user-has-switched-away\nvar vis = (function(){\n    var stateKey, eventKey, keys = {\n        hidden: \"visibilitychange\",\n        webkitHidden: \"webkitvisibilitychange\",\n        mozHidden: \"mozvisibilitychange\",\n        msHidden: \"msvisibilitychange\"\n    };\n    for (stateKey in keys) {\n        if (stateKey in document) {\n            eventKey = keys[stateKey];\n            break;\n        }\n    }\n    return function(c) {\n        if (c) document.addEventListener(eventKey, c);\n        return !document[stateKey];\n    }\n})();\n\n\nfunction onmove(ev) {\n  // if (ev.shiftKey) {\n  //   document.body.style.cursor = \"grabbing\";\n  // }\n  // if (paused) return;\n  hovering = null;\n  let rmSettings = true;\n  hoveringConn = null;\n  currPos_canv = fromCanvPos(ev.clientX, ev.clientY);\n  // let \n  if (holdState == K.HOLD) {// && ev.shiftKey) {\n    translate(ev.movementX, ev.movementY);\n    redraw();\n  }\n  let actualPos = fromCanvPos(ev.clientX, ev.clientY);\n  let nConn = nearestConnection(actualPos.x, actualPos.y);\n  let nStop = nearestStop(actualPos, acceptRadius);\n  if (holdState == K.HOLD_NEWLINE) {\n\n    let lastStop = currPath[currPath.length - 1];\n    // if (!nStop) // \n    //   currPath.pop();\n    if (nStop) {\n      let canAdd = true;\n      for (let i = 0; i < currPath.length && canAdd; i++) {\n        if (samePt(currPath[i], nStop)) canAdd = false;\n      }\n      let newConn = {from:lastStop, to:nStop};\n      if (parallelConnections(newConn).ct >= 3) canAdd = false;\n      else if (!canAdd && currPath.length > 2\n        && samePt(nStop, currPath[0]) && !samePt(nStop, lastStop)) {\n        currPath.push(nStop);\n        routeConfirm();\n        // holdState = K.NOHOLD;\n      }\n      if (canAdd) {\n        currPath.push(nStop);\n      }\n    }\n    redraw();\n  }\n  else if (holdState == K.HOLD_CONNECTION) {\n    if (nStop) {\n      let currLine = lines[modifyingConn.lineID];\n      // \n      let newConn = {from:modifyingConn.from, to:nStop, \n         lineID:modifyingConn.lineID, \n         colour:modifyingConn.colour};\n      let newConn2 = {from:nStop, to:modifyingConn.to, \n          lineID:modifyingConn.lineID, \n          colour:modifyingConn.colour};\n      if (parallelConnections(newConn).ct < 3 && parallelConnections(newConn2).ct < 3\n      &&  !lines[modifyingConn.lineID].stops.has(nStop)) {\n        // now we can modify the connection\n        for (affectedTrain of currLine.trains) {\n          if (getAssociatedConnection(affectedTrain) == modifyingConn) {\n            modifyingConn.pendingRemove = true;\n            break;\n          }\n        }\n        currLine.stops.add(nStop);\n        // modifyingConn.pendingUpdateTo = nStop;\n\n        connections.push(newConn);\n        connections.push(newConn2);\n        if (!modifyingConn.pendingRemove) {\n          modifyingConn.pendingRemove = true;\n           updateToNow(currLine, modifyingConn); \n        }\n        typesOnLine[modifyingConn.lineID].add(nStop.type)\n        nStop.linesServed.add(modifyingConn.lineID);\n        for (let pass of passengers)\n          handlePassenger(pass);\n        let idx = currLine.path.indexOf(modifyingConn.from);\n        currLine.path.splice(idx+1, 0, nStop);\n\n        // if (!modifyingConn.pendingRemoval) \n        holdState = K.NOHOLD;\n        routeConfirm(); \n      }\n\n    }\n  }\n  else if (holdState == K.HOLD_EXTEND && nStop) {\n    let currLine = extendInfo.line\n    if (!currLine.stops.has(nStop) \n     || (nStop == currLine.path[0] && extendInfo.stop == currLine.path[currLine.path.length-1]\n         || nStop == currLine.path[currLine.path.length-1] && extendInfo.stop == currLine.path[0])\n        && currLine.path.length > 2 && !currLine.loopingQ) {\n      let newConn = {from:extendInfo.stop, to:nStop, \n           lineID:currLine.lineID, \n           colour:currLine.colour};\n      connections.push(newConn);\n      typesOnLine[currLine.lineID].add(nStop.type);\n      nStop.linesServed.add(currLine.lineID);\n      currLine.stops.add(nStop);\n      if (currLine.path[currLine.path.length-1] == extendInfo.stop) \n        currLine.path.push(nStop);\n      else currLine.path.splice(0, 0, nStop)\n      if (currLine.path[0] == currLine.path[currLine.path.length-1]) {\n        currLine.loopingQ = true;\n        extendInfo = null;\n        routeConfirm();\n      }\n      // extendInfo = null;\n      for (let pass of passengers)\n        handlePassenger(pass);\n      if (extendInfo) extendInfo.stop = nStop;\n      // routeConfirm();\n\n    } // extend successful \n  }\n  else if (nStop) {\n    let terms = terminals(nStop);\n    if (terms && holdState == K.NOHOLD && (!activeSettingsDialog || activeSettingsDialog.stop != nStop)) {\n      activeSettingsDialog = {\n        stop:nStop, time:Date.now()+50,\n        hgt:K.SETTINGSHEIGHT*terms.length, lines:terms, selected:null};\n      redraw();\n    }\n    if (terms) rmSettings = false;\n    hovering = nStop;\n    if (activeSettingsDialog) activeSettingsDialog.selected = null;\n    document.body.style.cursor = \"pointer\";\n  }\n  else {\n    let setSelected = false;\n    for (let stop of stops) {\n      if (activeSettingsDialog && \n          currPos_canv.x < stop.x+acceptRadius && currPos_canv.x > stop.x-acceptRadius\n         && currPos_canv.y < stop.y+acceptRadius && currPos_canv.y > stop.y-activeSettingsDialog.hgt-acceptRadius) {\n        rmSettings = false;\n        let dy = (currPos_canv.y-(stop.y-acceptRadius-activeSettingsDialog.hgt))/K.SETTINGSHEIGHT;\n        let activeSel = activeSettingsDialog.lines.length-Math.floor(dy)-1;\n        activeSettingsDialog.selected = (activeSel<0?null:activeSettingsDialog.lines[activeSel].lineID);\n        if (activeSettingsDialog.selected != null) setSelected = true;\n        // hovering = stop;\n        document.body.style.cursor = \"pointer\";\n        // redraw();\n        // break;  \n      }\n    }\n    if (!setSelected && activeSettingsDialog) activeSettingsDialog.selected = null;\n    // else if (activeSettingsDialog && currPos_canv.x < )\n    if (rmSettings && nConn && holdState == K.NOHOLD) {\n      hoveringConn = nConn;\n      document.body.style.cursor = \"pointer\";\n    }\n    else if (rmSettings && holdState == K.NOHOLD) document.body.style.cursor = \"\";\n  }\n  if (rmSettings) {\n    activeSettingsDialog = null;\n  }\n  redraw();\n} //onmove\n\nfunction routeConfirm(ev) {\n  holdState = K.NOHOLD;\n  extendInfo = null;\n  document.body.style.cursor = holdState == K.HOLD ? \"grab\" : \"\";\n  if (currPath.length > 1) {\n    let currCol = getCSSProp(\"--system-\" + colours[0]);\n    colours.shift();\n    // lines.push({path:currPath, \n    // colour:getCSSProp(\"--system-\"+colours[lines.length])});\n    for (let i = 1; i < currPath.length; i++) {\n      connections.push({\n        from: currPath[i - 1], to: currPath[i],\n        colour: currCol, lineID: lineCt\n      });\n    }\n    // run dijkstra?\n    let currLine = [];\n    let stopsOnLine = new Set();\n    for (const e of currPath) {\n      currLine.push(e);\n      stopsOnLine.add(e);\n      // stopsOnLine.add(e);\n    }\n\n    let currLine2 = {\n        lineID:lineCt, \n        path:currLine, \n        colour:currCol,\n        stops:stopsOnLine, \n        loopingQ:(currPath[0] == currPath[currPath.length-1]),\n        trains:[]};\n    lines.push(currLine2);\n\n    let supportedTypes = new Set();\n    for (let i = 0; i < currPath.length; i++) {\n      supportedTypes.add(currPath[i].type);\n      currPath[i].linesServed.add(lineCt);\n    }\n    typesOnLine.push(supportedTypes);\n    // for ()\n    /// now every passenger route will be affected\n    // for (let currP of passengers) {\n    // if (currP.status != K.WAITING) continue;\n    adj = [];\n    for (let i = 0; i < typesOnLine.length; i++) {\n      let row = [];\n      for (let j = 0; j < typesOnLine.length; j++) {\n        row.push({ route:[], val: K.INF });\n      }\n      adj.push(row);\n    }\n    for (let i = 0; i < stops.length; i++) {\n      let served = Array.from(stops[i].linesServed);\n      for (let j = 0; j < served.length; j++) {\n        for (let k = 0; k < served.length; k++) {\n          adj[served[j]][served[k]].val = 1;\n          adj[served[j]][served[k]].route = [served[k]];\n          adj[served[k]][served[j]].val = 1;\n          adj[served[k]][served[j]].route = [served[j]];\n        }\n      }\n      for (let j=0; j<served.length; j++) {\n        adj[served[j]][served[j]].val = 0;\n        adj[served[j]][served[j]].route = [];\n      }\n    }\n    for (let k = 0; k < adj.length; k++) {\n      for (let j = 0; j < adj.length; j++) {\n        for (let i = 0; i < adj.length; i++) {\n          if (i == k || j == k) continue;\n          let newCost = adj[i][k].val+adj[k][j].val;\n          if (newCost < adj[i][j].val) {\n            adj[i][j].val = newCost;\n            adj[i][j].route = [];\n\n            // let replaceIdx = adj[i][j].indexOf(i);\n            for (let n=0; n<adj[i][k].route.length; n++) \n              adj[i][j].route.push(adj[i][k].route[n])\n            for (let n=0; n<adj[k][j].route.length; n++) \n              adj[i][j].route.push(adj[k][j].route[n])\n          }\n          // adj[i][j].val = Math.min(adj[i][j].val, adj[i][k].val + adj[k][j].val);\n        }\n      }\n\n    }\n    console.log(\"==== RECALCULATION SUCCESS ====\")\n    for (pass of passengers) {\n      handlePassenger(pass);\n    }\n    let t1 = {\n        x: currPath[0].x, y: currPath[0].y,\n        from: currPath[0], to: currPath[1],\n        lineID: lineCt, colour: currCol, startT: timeNow(),\n        status: K.MOVING, passengers: [], cap:6, revDir:false, \n        //toAdd:[], toRemove:[], onCompletion:0\n      };\n    let t2 = {\n        x: currPath[0].x, y: currPath[0].y,\n        from: currPath[currPath.length-1], to: currPath[currPath.length-2],\n        lineID: lineCt, colour: currCol, startT: timeNow(),\n        status: K.MOVING, passengers: [], cap:6, revDir:true,//, toAdd:[], toRemove:[], \n        //onCompletion:0\n      };\n    trains.push(t1);\n    trains.push(t2);\n    currLine2.trains = [t1, t2];\n    lineCt++;\n  }\n  currPath = [];\n  redraw();\n  if (!ev || !downPt || distBtw({ x: ev.clientX, y: ev.clientY }, downPt) > 10) return;\n  // check for is it actually a click ^\n  ctx.beginPath();\n  // let actualPos = fromCanvPos(ev.clientX, ev.clientY);\n  // ctx.moveTo(actualPos.x - 0.5, actualPos.y - 0.5);\n  // ctx.lineTo(actualPos.x + 0.5, actualPos.y + 0.5);\n  // ctx.stroke();\n} // routeConfirm (pointerUp)\n\n\nfunction onWheel(ev) {\n  // larger -ve deltaY: \n  // ctx.\n  // let sclFac = (ev.deltaY<0?Math.pow(10, -ev.deltaY/750):Math.pow(10, -ev.deltaY/400))\n  let sclFac = (ev.deltaY < 0 ? 1.15 : 1 / 1.15)\n  if (sclFac * totalScaleFac > maxSclFac)\n    sclFac = maxSclFac / totalScaleFac;\n  if (sclFac * totalScaleFac < minSclFac)\n    sclFac = minSclFac / totalScaleFac;\n  translate(-ev.clientX, -ev.clientY);\n  scale(sclFac);\n  translate(ev.clientX, ev.clientY);\n  totalScaleFac *= sclFac;\n  redraw();\n} // onwheel\n\nfunction pointerdown(ev) {\n  // if (paused) return;\n  if (event.button != 0) return;\n  holdState = K.HOLD;\n  downPt = { x: ev.clientX, y: ev.clientY };\n  let actualPos = fromCanvPos(ev.clientX, ev.clientY);\n  let nStop = nearestStop(actualPos, acceptRadius);\n  let nConn = nearestConnection(actualPos.x, actualPos.y);\n  if (nStop && colours.length > 0) {\n    holdState = K.HOLD_NEWLINE;\n    activeSettingsDialog = null;\n    currPath = [nStop];\n    redraw();\n  }\n  else if (activeSettingsDialog && activeSettingsDialog.selected != null) {\n    let sel = activeSettingsDialog.selected;\n    holdState = K.HOLD_EXTEND;\n    extendInfo = {line:lines[sel], stop: activeSettingsDialog.stop};\n    activeSettingsDialog = null;\n  }\n  else if (nConn) {\n    holdState = K.HOLD_CONNECTION;\n    modifyingConn = nConn;\n  }\n  if (holdState == K.HOLD || holdState == K.HOLD_CONNECTION) {\n    document.body.style.cursor = \"grabbing\";\n  }\n} // pointerDown"],
  "mappings": "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",
  "names": ["pass"]
}
