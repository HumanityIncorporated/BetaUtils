{
  "version": 3,
  "sources": ["../tasks.ts"],
  "sourcesContent": ["import {authDB} from './consts';\nimport {userRequest} from './userRequest';\nexport async function addTask(token:string) {\n  let uInfo = await userRequest(token);\n  if (uInfo.status != \"SUCCESS\") {\n    return uInfo;\n  }\n  else {\n    if (uInfo.data.tasks) uInfo.data.tasks.push(\"\");\n    await authDB.updateOne({user:uInfo.data.user, fieldName:\"UserData\"}, {\n      $set: {tasks: uInfo.data.tasks??[]}\n    }, {upsert: true})\n    return {status:\"SUCCESS\", data:null, token:token};\n  }\n}\n\nexport async function getTasks(token:string) {\n  let uInfo = await userRequest(token);\n  if (uInfo.status != \"SUCCESS\") {\n    return uInfo;\n  }\n  else {\n    return {status:\"SUCCESS\", data:{tasks:uInfo.data.tasks}, token:token};\n  }\n}\n\nexport async function updateTask(token:string, id:string, updated:string) {\n  let uInfo = await userRequest(token);\n  if (uInfo.status != \"SUCCESS\") {\n    return uInfo;\n  }\n  else {\n    if (uInfo.data.tasks && uInfo.data.tasks.length > id) uInfo.data.tasks[id] = updated;\n    await authDB.updateOne({user:uInfo.data.user, fieldName:\"UserData\"}, {\n      $set: {tasks: uInfo.data.tasks??[]}\n    }, {upsert: true})\n    return {status:\"SUCCESS\", data:null, token:token};\n  }\n}\n\nexport async function deleteTask(token:string, id:string, completedQ:boolean=false) {\n  let uInfo = await userRequest(token);\n  if (uInfo.status != \"SUCCESS\") {\n    return uInfo;\n  }\n  else {\n    if (uInfo.data.tasks && uInfo.data.tasks.length > id) uInfo.data.tasks.splice(id, 1)\n    await authDB.updateOne({user:uInfo.data.user, fieldName:\"UserData\"}, {\n      $set: {tasks: uInfo.data.tasks??[]},\n      $inc: {tasksCompleted:(completedQ?1:0)}\n    }, {upsert: true})\n    return {status:\"SUCCESS\", data:null, token:token};\n  }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAqB;AACrB,yBAA0B;AAC1B,eAAsB,QAAQ,OAAc;AAC1C,MAAI,QAAQ,UAAM,gCAAY,KAAK;AACnC,MAAI,MAAM,UAAU,WAAW;AAC7B,WAAO;AAAA,EACT,OACK;AACH,QAAI,MAAM,KAAK;AAAO,YAAM,KAAK,MAAM,KAAK,EAAE;AAC9C,UAAM,qBAAO,UAAU,EAAC,MAAK,MAAM,KAAK,MAAM,WAAU,WAAU,GAAG;AAAA,MACnE,MAAM,EAAC,OAAO,MAAM,KAAK,SAAO,CAAC,EAAC;AAAA,IACpC,GAAG,EAAC,QAAQ,KAAI,CAAC;AACjB,WAAO,EAAC,QAAO,WAAW,MAAK,MAAM,MAAW;AAAA,EAClD;AACF;AAEA,eAAsB,SAAS,OAAc;AAC3C,MAAI,QAAQ,UAAM,gCAAY,KAAK;AACnC,MAAI,MAAM,UAAU,WAAW;AAC7B,WAAO;AAAA,EACT,OACK;AACH,WAAO,EAAC,QAAO,WAAW,MAAK,EAAC,OAAM,MAAM,KAAK,MAAK,GAAG,MAAW;AAAA,EACtE;AACF;AAEA,eAAsB,WAAW,OAAc,IAAW,SAAgB;AACxE,MAAI,QAAQ,UAAM,gCAAY,KAAK;AACnC,MAAI,MAAM,UAAU,WAAW;AAC7B,WAAO;AAAA,EACT,OACK;AACH,QAAI,MAAM,KAAK,SAAS,MAAM,KAAK,MAAM,SAAS;AAAI,YAAM,KAAK,MAAM,MAAM;AAC7E,UAAM,qBAAO,UAAU,EAAC,MAAK,MAAM,KAAK,MAAM,WAAU,WAAU,GAAG;AAAA,MACnE,MAAM,EAAC,OAAO,MAAM,KAAK,SAAO,CAAC,EAAC;AAAA,IACpC,GAAG,EAAC,QAAQ,KAAI,CAAC;AACjB,WAAO,EAAC,QAAO,WAAW,MAAK,MAAM,MAAW;AAAA,EAClD;AACF;AAEA,eAAsB,WAAW,OAAc,IAAW,aAAmB,OAAO;AAClF,MAAI,QAAQ,UAAM,gCAAY,KAAK;AACnC,MAAI,MAAM,UAAU,WAAW;AAC7B,WAAO;AAAA,EACT,OACK;AACH,QAAI,MAAM,KAAK,SAAS,MAAM,KAAK,MAAM,SAAS;AAAI,YAAM,KAAK,MAAM,OAAO,IAAI,CAAC;AACnF,UAAM,qBAAO,UAAU,EAAC,MAAK,MAAM,KAAK,MAAM,WAAU,WAAU,GAAG;AAAA,MACnE,MAAM,EAAC,OAAO,MAAM,KAAK,SAAO,CAAC,EAAC;AAAA,MAClC,MAAM,EAAC,gBAAgB,aAAW,IAAE,EAAE;AAAA,IACxC,GAAG,EAAC,QAAQ,KAAI,CAAC;AACjB,WAAO,EAAC,QAAO,WAAW,MAAK,MAAM,MAAW;AAAA,EAClD;AACF;",
  "names": []
}
