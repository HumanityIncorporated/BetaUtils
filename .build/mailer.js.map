{
  "version": 3,
  "sources": ["../mailer.ts"],
  "sourcesContent": ["var nodemailer = require('nodemailer');\nlet fs = require('fs');\n// Create the transporter with the required configuration for Outlook\n// change the user and pass !\nexport function sendMail() {\n  // var transporter = nodemailer.createTransport({\n  //     host: \"smtp.office365.com\", // hostname\n  //     secureConnection: true, // TLS requires secureConnection to be false\n  //     port: 587, // port for secure SMTP\n  //     // tls: {\n  //        // ciphers:'SSLv3'\n  //     // },\n  //     auth: {\n  //         user: 'outlook_6F821D19C58C4CEF@outlook.com',\n  //         pass: process.env['emlpwd']\n  //     }\n  // });\n  // var transporter = nodemailer.createTransport({\n  //   service: \"gmail\",\n  //   auth: {\n  //       user: \"betaos.services@gmail.com\",\n  //       pass: process.env['emlpwd']\n  //   }\n  // });\n\n  let transporter = nodemailer.createTransport({\n    pool: true,\n    host: \"smtp.gmail.com\",\n    port: 587,\n    secure: true, // use TLS\n    auth: {\n      user: \"betaos.services@gmail.com\",\n      pass: process.env['emlpwd'],\n    },\n  });\n\n  \n  // setup e-mail data, even with unicode symbols\n  var mailOptions = {\n      from: '\"BetaOS System AutoMailer\" <betaos.services@gmail.com>', // sender address (who sends)\n      to: 'betatester1025@protonmail.com', // list of receivers (who receives)\n      subject: 'This is a test.', // Subject line\n      text: 'Testing.', // plaintext body\n      html: fs.readFileSync('./mailtemplate.html') // html body\n  };\n  \n  // send mail with defined transport object\n  transporter.sendMail(mailOptions, function(error:any, info:any){\n      if(error){\n          return console.log(error);\n      }\n  \n      console.log('Message sent: ' + info.response);\n  });\n} "],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAI,aAAa,QAAQ,YAAY;AACrC,IAAI,KAAK,QAAQ,IAAI;AAGd,SAAS,WAAW;AAqBzB,MAAI,cAAc,WAAW,gBAAgB;AAAA,IAC3C,MAAM;AAAA,IACN,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,MAAM,QAAQ,IAAI;AAAA,IACpB;AAAA,EACF,CAAC;AAID,MAAI,cAAc;AAAA,IACd,MAAM;AAAA,IACN,IAAI;AAAA,IACJ,SAAS;AAAA,IACT,MAAM;AAAA,IACN,MAAM,GAAG,aAAa,qBAAqB;AAAA,EAC/C;AAGA,cAAY,SAAS,aAAa,SAAS,OAAW,MAAS;AAC3D,QAAG,OAAM;AACL,aAAO,QAAQ,IAAI,KAAK;AAAA,IAC5B;AAEA,YAAQ,IAAI,mBAAmB,KAAK,QAAQ;AAAA,EAChD,CAAC;AACH;",
  "names": []
}
