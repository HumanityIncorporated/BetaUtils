{
  "version": 3,
  "sources": ["../accessControl.ts"],
  "sourcesContent": ["\nimport { WS } from \"./wsHandler\";\nvar escape = require('escape-html');\nimport {webHandlers, sysRooms, hidRooms} from './initialiser';\n// import { hashSync, compareSync} from \nvar bcrypt = require(\"bcrypt\");\nconst linkifyHtml = require(\"linkify-html\");\nconst path = require('path');\nimport { updateUser } from \"./updateuser\";\nimport {systemLog} from './misc';\nimport {replacements} from './replacements'\nconst fs = require(\"fs\");\nconst EXPIRY = 1000*60*60*24;\nimport { sendMsgAllRooms, users, hidUsers} from \"./server\";\nimport {database} from './database';\n  const DB = database.collection('SystemAUTH');\n  const DB2 = database.collection('SupportMessaging');\n  const DB3 = database.collection('BetaUtilities');\nimport { WebH } from \"./webHandler\";\n\nexport function validate(user:string, pwd:string, action:string, access:string, callback:any, token:string=\"\") {\n  if (action != \"refresh\" && action != \"refresh_log\"\n      && action != \"sendMsg\" && action != \"bMsg\" && \n     action != \"checkAccess_A\" && action != \"checkAccess\" &&\n      action != \"userReq\" && action != \"acquireTodo\" && \n     action != \"ROOMLISTING\") systemLog(\"Validating as \"+user+\" with action \"+action +\" (token \"+token+\")\");\n  if (!token || !token.match(\"[0-9]+\") || \n     (!user || user && action !=\"CMD\" && action !=\"sendMsg\" && !user.match(\"^[a-zA-Z0-9_]+$\")) || \n     (!pwd || action != \"CMD\" && pwd.length<=0)) \n  {\n    if (action == \"add\" || action == \"login\")\n    {\n      systemLog(\"Unknown error\")\n      callback.end(JSON.stringify(\"ERROR\"))\n      return;\n    } \n  }\n  if (action == \"ROOMLISTING\") {\n    callback.end(JSON.stringify(sysRooms))\n  }\n  if (action == \"bMsg\") {\n    DB2.insertOne({\n      fieldName: \"MSG\", \n      sender:\"BetaOS_System\", \n      data:user, \n      room: access,\n      permLevel:3, \n      expiry:Date.now()+EXPIRY});\n    sendMsgAllRooms(access, format({permLevel:3, data:user, sender:\"BetaOS_System\"}));\n    return;\n  }\n  if (action == \"whois\") {\n    // console.log(user);\n    DB.find({fieldName:\"UserData\", user:{$eq:user}}).toArray().then((obj:{alias:string}[])=>{\n      // callback.end(JSON.stringify(obj?obj.user:\"[None found]\"));\n      // console.log(obj, user)\n      let out = \"\";\n      if (obj)\n      for (let i=0; i<obj.length; i++) {\n        out += obj[i].alias?obj[i].alias:obj[i].user;\n      }\n      sendMessage(\"[WHOIS SERVICE]\", \"Aliases for \"+user+\": \"+(out?out:\"[NONE FOUND]\"), access, 3);\n    })\n    DB.find({fieldName:\"UserData\", alias:{$eq:user}}).toArray().then((obj:{user:string, permLevel:string}[])=>{\n      // callback.end(JSON.stringify(obj?obj.user:\"[None found]\"));\n      let out = \"\";\n      if (obj)\n      for (let i=0; i<obj.length; i++) {\n        out += obj[i].user+(obj[i].permLevel>2?\"[Super-admin]\":(obj[i].permLevel==2?\"[Admin]\":\"[User]\"));\n      }\n      sendMessage(\"[WHOIS SERVICE]\", \"BetaOS3 System Account for alias \"+user+\": \"+(out?out:\"[NONE FOUND]\"), access, 3);\n    })\n    return;\n  }\n   // data validation complete\n  if (action==\"logout\") {\n    systemLog(\"Logging out \"+token)\n    DB.deleteOne({fieldName:\"TOKEN\", token:{$eq:token}});\n    callback.end(JSON.stringify(\"SUCCESS\"));\n    return;\n  }\n\n  // attempt to add user or run commands or access support (REQUIRE PERMLEVELS)\n  let todoMatch = action.match(\"updateTODO([0-9]+)\");\n  let todoMatch2 = action.match(\"completeTODO([0-9]+)\");\n  let todoMatch3 = action.match(\"deleteTODO([0-9]+)\");\n  if (action==\"add\" || action==\"CMD\" || \n      action == \"checkAccess\" || action == \"sendMsg\"||\n     action == \"refresh\" || action == \"checkAccess_A\" || \n     action == \"refresh_log\" || action == \"userReq\" || \n     action == \"renick\" || action == \"delete\" || \n      action == \"acquireTodo\" ||todoMatch || \n      todoMatch2 || action == \"addTODO\" ||\n     action == \"newRoom\" || todoMatch3 || \n      action == \"delRoom\" || action == \"whois\" ||\n     action == \"refresh_users\") {\n    DB.findOne({fieldName: \"TOKEN\", token:{$eq:token}}).then(\n    (obj:{associatedUser:string, expiry:number})=>{\n      if (action == \"refresh\") {\n        let startime = Date.now();\n        DB2.find({fieldName:\"MSG\", room:{$eq:access}}).toArray().then((objs:{sender:string, data:string, permLevel:number}[])=>{\n          let out = \"\";\n          for (let i=0; i<objs.length; i++) {\n            out += format(objs[i]);\n          }\n          callback.end(JSON.stringify(out));\n        });\n        return;\n      } // fiiine. you can have your refreshy.\n      if (action == \"refresh_users\") {\n        let roomIdx = sysRooms.indexOf(\"OnlineSUPPORT|\"+access);\n        let roomIdx2 = hidRooms.indexOf(\"HIDDEN|\"+access);\n        if (roomIdx >= 0) callback.end(JSON.stringify(users[roomIdx]));\n        else if (roomIdx2 >= 0) callback.end(JSON.stringify(hidUsers[roomIdx2]));\n        else callback.end(JSON.stringify(\"ERROR\"));\n          return;\n      } // fiiine. you can have your refreshy.\n      \n      if (obj == null && action != \"sendMsg\") {\n        systemLog(\"No active session\");\n        if (action == \"checkAccess\" || action == \"checkAccess_A\") {\n          callback.sendFile(path.join( __dirname, '../frontend', '403.html' ));\n        }\n        else if (access == \"internal\" && action == \"userReq\") callback(\"ANON|ID\"+token%10000)\n        else callback.end(JSON.stringify(\"NOACTIVE\"));\n        return;\n      }\n      let expiryTime = obj?obj.expiry:9e99;\n      let tokenUser = obj?obj.associatedUser:\"\";\n      if (action != \"refresh\" && action != \"refresh_log\"\n         && action != \"sendMsg\" && action != \"checkAccess_A\" &&\n         action != \"userReq\" && action !=\"checkAccess\" && action != \"whois\"\n        ) systemLog(\"Logged in as \"+tokenUser+\" | Expiring in: \"+(expiryTime-Date.now()) + \" ms\");\n      if (expiryTime<Date.now()) {\n        systemLog(\"Token expired. Logged out user.\")\n        DB.deleteOne({fieldName:\"TOKEN\", token:{$eq:token}});\n        if (action == \"checkAccess\" || action == \"checkAccess_A\") \n          callback.sendFile(path.join( __dirname, '../frontend', '403.html' ));\n        else callback.end(JSON.stringify(\"EXPIRE\"));\n        return;\n      }\n      \n      DB.findOne({fieldName:\"UserData\", user:tokenUser}).then(\n      (obj2:{permLevel:number, alias:string|null, todo:string[]})=>{\n        if (!obj2 && action != \"sendMsg\") {callback.end(JSON.stringify(\"ERROR\")); return;}\n        let perms = obj2?obj2.permLevel:0;\n        if (action == \"renick\" && perms >= 1)\n        {\n          if (obj.associatedUser != \"betatester1024\" && \n              obj.associatedUser != \"betaos\" && \n              (user.toLowerCase() == \"betaos\" || \n               user.toLowerCase() == \"betatester1024\") || !user.match(\"^[a-zA-Z_0-9]+$\")) \n          {\n            callback.end(JSON.stringify(\"ERROR\"))\n            return;\n          }\n          DB.updateOne({fieldName:\"UserData\", user: obj.associatedUser}, {\n            $set: {\n              alias: user\n            },\n            $currentDate: { lastModified: true }\n          }, {upsert:true});\n          callback.end(JSON.stringify(escape(user)));\n          return;\n        } // renick \n        // console.log(action);\n        if (action == \"acquireTodo\" || todoMatch \n        || todoMatch2 || action == \"addTODO\" || todoMatch3) {\n          // if (pwd == process.env['TODOPwd']) {\n            // console.log(obj2.todo);\n            if (!obj2.todo) obj2.todo = [];\n            if (action == \"acquireTodo\") callback.end(JSON.stringify(obj2.todo?obj2.todo:\"\"));\n            else {\n              // console.log(user);\n              if (todoMatch) \n                if (todoMatch[1] < obj2.todo.length)\n                  obj2.todo[todoMatch[1]] = user;\n              if (todoMatch2 || todoMatch3) \n                if (obj2.todo.length > (todoMatch2?todoMatch2[1]:todoMatch3[1])) \n                  obj2.todo.splice(todoMatch2?todoMatch2[1]:todoMatch3[1], 1);\n              if (action == \"addTODO\") {\n                obj2.todo.push(user);\n              }\n              // console.log(obj2.todo);\n              DB.updateOne({fieldName:\"UserData\", user: obj.associatedUser}, {\n                $set: {\n                  todo:obj2.todo\n                },\n                $currentDate: { lastModified: true }\n              }, {upsert:true}).then(()=>{callback.end(JSON.stringify(\"SUCCESS\"));});\n              return;\n            }\n          // }\n          return;\n        }\n        if (action == \"userReq\") {\n          if (access == \"internal\") callback(obj.associatedUser)\n          else callback.end(JSON.stringify(obj.associatedUser+\" \"+obj2.permLevel));\n          return;\n        }\n        if (action==\"add\" || action == \"delete\") {\n          DB.findOne({fieldName:\"UserData\", user:{$eq:user}}).then(\n            (obj3: {permLevel:number}) => {\n              // console.log(obj3);\n              if (obj3 && obj3.permLevel>perms) {\n                systemLog(\"Trying to delete a higher-level user\");\n                callback.end(JSON.stringify(\"ACCESS\"));\n                return;\n              }\n              else if (action == \"delete\" && (perms >= 2||user == obj.associatedUser)) {\n                DB.findOneAndDelete({fieldName:\"UserData\", user:{$eq:user}})\n                  .then((res:any)=>{callback.end(JSON.stringify(escape(user)))});\n                systemLog(\"Deleted user \"+user);\n                return;\n              }\n              else if (action == \"delete\") {\n                systemLog(\"Insufficient access for deletion\")\n                callback.end(JSON.stringify(\"ACCESS\"));\n                return;\n              }\n              if (Number(perms)<2){\n                if (user == tokenUser && access == \"1\") {\n                  systemLog(\"Updating password\");\n                  updateUser(user, pwd);\n                  callback.end(JSON.stringify(\"SUCCESS\"))\n                  let exp = perms<3?(Date.now()+1000*60*60*24*30):(Date.now()+1000*300);\n                  systemLog(\"Logging user \"+user+\" with expiry \"+exp+\" (in \"+(exp-Date.now())+\" ms)\");\n                  DB.updateOne({fieldName:\"TOKEN\", token:{$eq:token}}, \n                  {\n                    $set: {\n                      associatedUser:user,\n                      expiry: exp\n                    },\n                    $currentDate: { lastModified: true }\n                  }, {upsert: true});\n                  return;\n                }\n                systemLog(\"Permissions insufficient.\")\n                callback.end(JSON.stringify(\"ACCESS\"));\n                return;\n              }\n              else if (Number(access) < 3) {\n                systemLog(\"Access granted; Token not expired. Adding \"+user+\" with permissions\"+access);\n                updateUser(user, pwd, Number(access));\n                callback.end(JSON.stringify(\"SUCCESS\"));\n                return;\n              }\n              else { // attempting to add a full site administrator user - forbidden!\n                systemLog(\"Invalid access-level granting:\")\n                callback.end(JSON.stringify(\"ACCESS\"))\n                return;\n              }\n            } // callback for searching user to be updated\n          );\n          return;\n        } // add\n        else if (action==\"CMD\" && perms == 3) {\n          // var DB = ;\n          // systemLog(\"Evaluating \"+user);\n          if (user == \"!killall\") {\n            WS.killall();\n            callback.end(JSON.stringify(\"SUCCESS\"));\n            return;\n          }\n          try {systemLog(eval(user));} catch(e:any) {systemLog(e);};\n          callback.end(JSON.stringify(\"SUCCESS\"));\n        }\n        else if (action == \"checkAccess\") {\n          systemLog(\"Support access granted!\")\n          callback.sendFile(path.join( __dirname, '../frontend', 'support.html' ));\n          return;\n        }\n        else if (action == \"checkAccess_A\" && perms>=2) {\n          // systemLog(\"SysLog access granted!\")\n          callback.sendFile(path.join( __dirname, '../frontend', 'sysLog.html' ));\n          return;\n        }\n        else if (action == \"sendMsg\") {\n          // console.log(\"sending message in room\"+access);\n          const snd = obj2?(obj2.alias?obj2.alias:obj.associatedUser):\"ANON|ID\"+token%10000;\n          sendMessage(snd, user, access, perms);\n          let match6 = user.match(\"^!whois @([0-9a-zA-Z_]+)\");\n          // console.log(match6);\n          if (match6) validate(match6[1], pwd, \"whois\", access, callback, token);\n          callback.end(JSON.stringify(\"SUCCESS\"));\n\n          \n          return;\n        }\n        \n        \n        else if (action == \"refresh_log\" && perms >=2 ) {\n          DB3.findOne({fieldName:\"SYSTEMLOG\"}).then((obj:{data:string})=> {\n            callback.end(JSON.stringify(obj.data.replaceAll(\"\\n\",\"<br>\")));\n          })\n          return;\n          // let msg = fs.readFileSync(\"./systemLog.txt\").toString();\n          // msg = msg.replaceAll(\"\\n\",\"<br>\")\n          // callback.end(JSON.stringify(msg));\n        }\n        else if (action == \"refresh_log\" || action == \"refresh\" || action == \"checkAccess_A\") {\n          callback.sendFile(path.join( __dirname, '../frontend', '403.html' ));\n          return;\n        }\n        else if ((action == \"newRoom\" || action == \"delRoom\") && perms >= 2) {\n          if (user.match(\"^[0-9a-zA-Z_\\\\-]{1,20}$\")) {\n            DB3.findOne({fieldName:\"ROOMS\"}).then((obj4:{rooms:string[]})=>{\n              let idx = obj4.rooms.indexOf(user);\n              if (action == \"newRoom\" && idx<0) {\n                obj4.rooms.push(user);\n                // now add betautilities to this room\n                webHandlers.push(new WebH(user));\n                // sysRooms.push(user);\n\n              }\n              else if (action == \"delRoom\" && idx>=0) {\n                if (idx>=0) obj4.rooms.splice(idx, 1);\n              }\n              else callback.end(JSON.stringify(\"ERROR\"));\n              DB3.updateOne({fieldName:\"ROOMS\"}, {\n                $set: {\n                  rooms: obj4.rooms\n                },\n                $currentDate: { lastModified: true }\n              }, {upsert:true}).then(()=>{\n                if (action != \"delRoom\") callback.end(JSON.stringify(\"SUCCESS\"));\n              });\n              if (action == \"delRoom\" && idx >= 0) {\n                sysRooms.splice(sysRooms.indexOf(\"OnlineSUPPORT|\"+user), 1)\n                DB2.deleteMany({room: user}).then(()=>{\n                  console.log(\"DONE\")\n                  callback.end(JSON.stringify(\"SUCCESS\"))\n                });\n              }\n              // else callback.end(JSON.stringify(\"ERROR\"))\n            }) \n          }\n          else callback.end(JSON.stringify(\"ERROR\"))\n        }\n        else {\n          systemLog(\"No perms!\")\n          callback.end(JSON.stringify(\"ACCESS\"));\n          return;\n        }\n      }); // check permissions of token\n    });\n   return; \n  }\n  if (action==\"signup\" && user.match(\"^[0-9a-zA-Z_]+$\")) {\n    DB.findOne({fieldName:\"UserData\", user:user}).then((obj:any)=>{\n      if (obj != null) {\n        systemLog(user+\" was already registered\")\n        callback.end(JSON.stringify(\"TAKEN\"));\n        return;\n      }\n      else {\n        systemLog(\"Registered user \"+user +\"with pass: [REDACTED]\")\n        updateUser(user, pwd, 1);\n        let exp = (Date.now()+1000*60*60*24*30);\n        systemLog(\"Logging user \"+user+\" with expiry \"+exp+\" (in \"+(exp-Date.now())+\" ms)\");\n        DB.updateOne({fieldName:\"TOKEN\", token:{$eq:token}}, \n        {\n          $set: {\n            associatedUser:user,\n            expiry: exp\n          },\n          $currentDate: { lastModified: true }\n        }, {upsert: true});\n        callback.end(JSON.stringify(\"SUCCESS\"));\n        return;\n      }\n    })\n    return;    \n  }\n  // check password permissions\n  DB.findOne({fieldName:\"UserData\", user:{$eq:user}}).then(\n    (obj:{passHash:string, permLevel:number})=>{\n    // systemLog(\"Logged password hash:\" + value)\n    if (obj && bcrypt.compareSync(pwd, obj.passHash)) {// pwd validated. \n      let perm = obj.permLevel\n      systemLog(\"Password OK for user \"+user+\" | Perms: \"+perm)\n      callback.end(JSON.stringify(perm));  \n      let exp = perm<3?(Date.now()+1000*60*60*24*30):(Date.now()+1000*300);\n      systemLog(\"Logging user \"+user+\" with expiry \"+exp+\" (in \"+(exp-Date.now())+\" ms)\");\n      DB.updateOne({fieldName:\"TOKEN\", token:{$eq:token}}, \n      {\n        $set: {\n          associatedUser:user,\n          expiry: exp\n        },\n        $currentDate: { lastModified: true }\n      }, {upsert: true});\n    } // password/user not found\n    else {\n      systemLog(\"Invalid credentials.\")\n      let response = 0;\n      callback.end(JSON.stringify(response));\n    };\n    \n  }) // login\n} // account handler\n\nexport async function DBGarbageCollect() {\n  DB2.find({fieldName:\"MSG\"}).toArray().then(\n  (objs:{expiry:number}[])=>{\n    for (let i=0; i<objs.length; i++) {\n      if (Date.now()>objs[i].expiry || objs[i].expiry == null) \n        DB2.deleteOne({fieldName:\"MSG\",expiry:objs[i].expiry})\n    }\n  });\n  DB3.find({fieldName:\"TIMER\"}).toArray().then(\n  (objs:{expiry:number, notifyingUser:string, msg:string}[])=>{\n    for (let i=0; i<objs.length; i++) {\n      if (Date.now()>objs[i].expiry || objs[i].expiry == null) {\n        DB3.deleteOne({fieldName:\"TIMER\",expiry:objs[i].expiry})\n        WS.notifRoom.socket.send(WS.toSendInfo(\"!tell @\"+objs[i].notifyingUser+\" You are reminded of: \"+\n                                               objs[i].msg.replaceAll(/\\\\/gm, \"\\\\\\\\\").replaceAll(/\"/gm, \"\\\\\\\"\")));\n      }\n    }\n  });\n  \n}\n\nfunction format(obj:{permLevel:number, data:string, sender:string}) {\n  let cls_n=\"\", extraText = \"\";\n  switch (obj.permLevel) {\n    case 2: cls_n=\"admin\"; extraText = \" [ADMIN]\"; break;\n    case 3: cls_n=\"beta\"; extraText = \" [SYSTEM]\"; break;\n  }\n  let data = obj.data;\n\n\n  data = data.replaceAll(\"&\", \"&amp;\");\n  data = data.replaceAll(\">\", \"&gt;\");\n  data = data.replaceAll(\"<\", \"&lt;\");\n  data = data.replaceAll(\"\\\\n\", \"<br>\");\n  data = data.replaceAll(/(.+\\.(jpg|jpeg|png|gif|mp4))(\\?.*)?$/gm, (match:string, p1:string)=>\n  {\n      match = match.replaceAll(\"'\", \"\\\\'\")\n      match = match.replaceAll(\"\\\"\", \"\\\\\\\"\");\n      match = match.replaceAll(\"&amp;\", \"&\");\n      // console.log(\"<img onclick='window.open(\\\"\"+encodeURI(match)+\"\\\")'src='\"+encodeURI(match)+\"'></img>\");\n      return \"<img onclick='window.open(\\\"\"+encodeURI(match)+\"\\\")'src='\"+encodeURI(match)+\"'></img>\";\n  });\n  data = data.replaceAll(/\\&amp;([0-9a-zA-Z]+)/gm, (match:string, p1:string)=>{return \"<a href='https://euphoria.io/room/\"+p1+\"'>\"+match+\"</a>\"});\n  data = data.replaceAll(/#([0-9a-zA-Z_\\-]{1,20})/gm, (match:string, p1:string)=>{return \"<a href='/support?room=\"+p1+\"'>\"+match+\"</a>\"});\n  \n  data = linkifyHtml(data, {\n    target: {\n      url: \"_blank\",\n    },\n  });\n  // data = data.replaceAll(/([-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/igmu, \n    // (match:string, p1:string)=>{return \"<a href='https://\"+match+\"'>\"+match+\"</a>\"})\n  \n  for (let i=0; i<replacements.length; i++){\n    data = data.replaceAll(replacements[i].from, \"<span class='material-symbols-outlined'>\"+replacements[i].to+\"</span>\")\n  }\n  let cls_w = \"\"\n  let slashMe = false;\n  if (data.match(\"^/me\")){\n    slashMe = true;\n    cls_w += \" slashMe\"\n    data = data.replace(\"/me\", \"\"); \n  }\n  // if (obj.sender.toLowerCase() == \"betaos\") {\n    // cls_n+=\" beta\";\n    // extraText = \" [SYSTEM]\";\n  // }\n  cls_w += \" \"+cls_n;\n  return `<p class=\\\"${cls_w}\\\"\"><b class='${cls_n}'>${obj.sender}${extraText}${slashMe?\"\":\":\"}</b> ${data} </p><br>`;\n}\n\nfunction findHandler(name:string)\n{\n  for (let i=0; i<webHandlers.length; i++) {\n    if (webHandlers[i].roomName == name) return webHandlers[i];\n  }\n  return null;\n}\n\nfunction sendMessage(snd:string, user:string, access:string, perms:number) {\n  DB2.insertOne({\n    fieldName: \"MSG\", \n    sender:snd, \n    data:user, \n    room: access,\n    permLevel:perms?perms:0, \n    expiry:Date.now()+EXPIRY})\n  \n  // console.log(\"Sending message:\"+user);\n  sendMsgAllRooms(access, format({permLevel:perms, data:user, sender:snd}));\n  let handler = findHandler(\"OnlineSUPPORT|\"+access);\n  if (handler) {\n    handler.onMessage(user, snd);\n    // console.log(\"Message received?\")\n  }\n  else {\n    handler = findHandler(\"HIDDEN|\"+access);\n    if (handler) {\n      handler.onMessage(user, snd);\n    }\n    else console.log(\"ROOMINVALID\")\n  }\n}"],
  "mappings": "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",
  "names": ["obj", "user", "access", "perms"]
}
