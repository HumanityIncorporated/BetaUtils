{
  "version": 3,
  "sources": ["../accessControl.ts"],
  "sourcesContent": ["import { WS } from \"./wsHandler\";\nimport {currHandler} from './initialiser';\n// import { hashSync, compareSync} from \nvar bcrypt = require(\"bcrypt\");\nconst path = require('path');\nimport { updateUser } from \"./updateuser\";\nimport {systemLog} from './misc';\nimport {replacements} from './replacements'\nconst fs = require(\"fs\");\nimport {database} from './database';\nconst DB = database.collection('SystemAUTH');\nconst DB2 = database.collection('SupportMessaging');\n\nexport function validate(user:string, pwd:string, action:string, access:string, callback:any, token:string=\"\") {\n  if (action != \"refresh\" && action != \"refresh_log\"\n      && action != \"sendMsg\" && action != \"bMsg\") systemLog(\"Validating as \"+user+\" with action \"+action +\" (token \"+token+\")\");\n  if (!token || !token.match(\"[0-9]+\") || \n     (!user || user && action !=\"CMD\" && action !=\"sendMsg\" && !user.match(\"^[a-zA-Z0-9_]+$\")) || \n     (!pwd || action != \"CMD\" && pwd.length<=0)) \n  {\n    if (action == \"add\" || action == \"login\")\n    {\n      systemLog(\"Unknown error\")\n      callback.end(JSON.stringify(\"ERROR\"))\n      return;\n    } \n  }\n\n  if (action == \"bMsg\") {\n    DB2.insertOne({\n      fieldName: \"MSG\", \n      sender:\"BetaOS_System\", \n      data:user, \n      permLevel:3, \n      expiry:Date.now()+1000*60*60});\n    return;\n  }\n   // data validation complete\n  if (action==\"logout\") {\n    systemLog(\"Logging out \"+token)\n    DB.deleteOne({fieldName:\"TOKEN\", token:token});\n    callback.end(JSON.stringify(\"SUCCESS\"));\n    return;\n  }\n\n  // attempt to add user or run commands or access support (REQUIRE PERMLEVELS)\n  if (action==\"add\" || action==\"CMD\" || \n      action == \"checkAccess\" || action == \"sendMsg\"||\n     action == \"refresh\" || action == \"checkAccess_A\" || \n     action == \"refresh_log\" || action == \"userReq\" || \n     action == \"renick\") {\n    DB.findOne({fieldName: \"TOKEN\", token:token}).then(\n    (obj:{associatedUser:string, expiry:number})=>{\n      if (obj == null) {\n        systemLog(\"No active session\");\n        if (action == \"checkAccess\" || action == \"checkAccess_A\") {\n          callback.sendFile(path.join( __dirname, '../frontend', '403.html' ));\n        }\n        else callback.end(JSON.stringify(\"NOACTIVE\"));\n        return;\n      }\n      let expiryTime = obj.expiry;\n      let tokenUser = obj.associatedUser;\n      if (action != \"refresh\" && action != \"refresh_log\"\n         && action != \"sendMsg\") systemLog(\"Logged in as \"+tokenUser+\" | Expiring in: \"+(expiryTime-Date.now()) + \" ms\");\n      if (expiryTime<Date.now()) {\n        systemLog(\"Token expired. Logged out user.\")\n        DB.deleteOne({fieldName:\"TOKEN\", token:token});\n        if (action == \"checkAccess\" || action == \"checkAccess_A\") \n          callback.sendFile(path.join( __dirname, '../frontend', '403.html' ));\n        else callback.end(JSON.stringify(\"EXPIRE\"));\n        return;\n      }\n      if (action == \"userReq\") {\n        if (!obj) callback.end(JSON.stringify(\"NOACTIVE\"));\n        else callback.end(JSON.stringify(obj.associatedUser));\n        return;\n      }\n      DB.findOne({fieldName:\"UserData\", user:obj.associatedUser}).then(\n      (obj2:{permLevel:number, alias:string|null})=>{\n        let perms = obj2.permLevel;\n        if (action == \"renick\" && perms >= 1)\n        {\n          if (obj.associatedUser != \"betatester1024\" && \n              obj.associatedUser != \"betaos\" && \n              (user.toLowerCase() == \"betaos\" || \n               user.toLowerCase() == \"betatester1024\")) \n          {\n            callback.end(JSON.stringify(\"ERROR\"))\n            return;\n          }\n          DB.updateOne({fieldName:\"UserData\", user: obj.associatedUser}, {\n            $set: {\n              alias: user\n            },\n            $currentDate: { lastModified: true }\n          }, {upsert:true});\n          callback.end(JSON.stringify(user));\n          return;\n        } // renick \n        if (action==\"add\") {\n          if (Number(perms)<2){\n            if (user == tokenUser && access == \"1\") {\n              systemLog(\"Updating password\");\n              updateUser(user, pwd);\n              callback.end(JSON.stringify(\"SUCCESS\"))\n              return;\n            }\n            systemLog(\"Permissions insufficient.\")\n            callback.end(JSON.stringify(\"ACCESS\"));\n            return;\n          }\n          else if (Number(access) < 3) {\n            systemLog(\"Access granted; Token not expired. Adding \"+user+\" with permissions\"+access);\n            updateUser(user, pwd, Number(access));\n            callback.end(JSON.stringify(\"SUCCESS\"));\n            return;\n          }\n          else { // attempting to add a full site administrator user - forbidden!\n            systemLog(\"Invalid access-level granting:\")\n            callback.end(JSON.stringify(\"ACCESS\"))\n            return;\n          }\n        } // add\n        else if (action==\"CMD\" && perms == 3) {\n          // var DB = ;\n          systemLog(\"Evaluating \"+user);\n          try {systemLog(eval(user));} catch(e:any) {systemLog(e);};\n          callback.end(JSON.stringify(\"SUCCESS\"));\n        }\n        else if (action == \"checkAccess\") {\n          systemLog(\"Support access granted!\")\n          callback.sendFile(path.join( __dirname, '../frontend', 'support.html' ));\n          return;\n        }\n        else if (action == \"checkAccess_A\" && perms>=2) {\n          systemLog(\"SysLog access granted!\")\n          callback.sendFile(path.join( __dirname, '../frontend', 'sysLog.html' ));\n          return;\n        }\n        else if (action == \"sendMsg\" && perms >= 1) {\n          // systemLog(\"adding message: \"+user);\n          DB2.insertOne({\n            fieldName: \"MSG\", \n            sender:obj2.alias?obj2.alias:obj.associatedUser, \n            data:user, \n            permLevel:perms, \n            expiry:Date.now()+1000*60*60})\n          callback.end(JSON.stringify(\"SUCCESS\"));\n          if (currHandler) currHandler.onMessage(user, obj2.alias?obj2.alias:obj.associatedUser);\n          return;\n        }\n        \n        else if (action == \"refresh\" && perms >= 1) {\n          \n          // let cursor = DB2.find({fieldName:\"MSG\"});\n          DB2.find({fieldName:\"MSG\"}).toArray().then((objs:{sender:string, data:string, permLevel:number}[])=>{\n            let out = \"\";\n            // console.log(objs)\n            for (let i=0; i<objs.length; i++) {\n              let cls_n=\"\", extraText = \"\";\n              switch (objs[i].permLevel) {\n                case 2: cls_n=\"admin\"; extraText = \" [ADMIN]\"; break;\n                case 3: cls_n=\"beta\"; extraText = \" [SYSTEM]\"; break;\n              }\n              let data = objs[i].data;\n              data = data.replaceAll(\"&\", \"&amp;\");\n              data = data.replaceAll(\">\", \"&gt;\");\n              data = data.replaceAll(\"<\", \"&lt;\");\n              data = data.replaceAll(\"\\\\n\", \"<br>\");\n              for (let i=0; i<replacements.length; i++){\n                data = data.replaceAll(replacements[i].from, \"<span class='material-symbols-outlined'>\"+replacements[i].to+\"</span>\")\n              }\n              let cls_w = \"\"\n              if (data.match(\"^/me\")){\n                cls_w += \" slashMe\"\n                data = data.replace(\"/me\", \"\"); \n              }\n              if (objs[i].sender.toLowerCase() == \"betaos\") {\n                cls_n+=\" beta\";\n                extraText = \" [SYSTEM]\";\n              }\n              cls_w += \" \"+cls_n;\n              out +=`<p class=\\\"${cls_w}\\\"\"><b class='${cls_n}'>\n              ${objs[i].sender}${extraText}:</b> ${data} </p><br>`;\n            }\n            callback.end(JSON.stringify(out));\n          });\n          return;\n        }\n        else if (action == \"refresh_log\" && perms >=2 ) {\n          let msg = fs.readFileSync(\"./systemLog.txt\").toString();\n          msg = msg.replaceAll(\"\\n\",\"<br>\")\n          callback.end(JSON.stringify(msg));\n        }\n        else if (action == \"refresh_log\" || action == \"refresh\" || action == \"checkAccess_A\") {\n          callback.sendFile(path.join( __dirname, '../frontend', '403.html' ));\n        }\n        else {\n          systemLog(\"No perms!\")\n          callback.end(JSON.stringify(\"ACCESS\"));\n          return;\n        }\n      }); // check permissions of token\n    });\n   return; \n  }\n  if (action==\"signup\") {\n    DB.findOne({fieldName:\"UserData\", user:user}).then((obj:any)=>{\n      if (obj != null) {\n        systemLog(user+\" was already registered\")\n        callback.end(JSON.stringify(\"TAKEN\"));\n        return;\n      }\n      else {\n        systemLog(\"Registered user \"+user +\"with pass: \"+pwd)\n        updateUser(user, pwd, 1);\n        validate(user, pwd, \"login\", \"\", callback, token);\n        // callback.end(JSON.stringify(\"SUCCESS\"));\n        return;\n      }\n    })\n    return;    \n  }\n  // check password permissions\n  DB.findOne({fieldName:\"UserData\", user:user}).then(\n    (obj:{passHash:string, permLevel:number})=>{\n    // systemLog(\"Logged password hash:\" + value)\n    if (obj && bcrypt.compareSync(pwd, obj.passHash)) {// pwd validated. \n      let perm = obj.permLevel\n      systemLog(\"Password OK for user \"+user+\" | Perms: \"+perm)\n      callback.end(JSON.stringify(perm));  \n      let exp = perm<3?(Date.now()+1000*60*60):(Date.now()+1000*60);\n      systemLog(\"Logging user \"+user+\" with expiry \"+exp+\" (in \"+(exp-Date.now())+\" ms)\");\n      DB.updateOne({fieldName:\"TOKEN\", token:token}, \n      {\n        $set: {\n          associatedUser:user,\n          expiry: exp\n        },\n        $currentDate: { lastModified: true }\n      }, {upsert: true});\n    } // password/user not found\n    else {\n      systemLog(\"Invalid credentials.\")\n      let response = 0;\n      callback.end(JSON.stringify(response));\n    };\n    \n  }) // login\n} // account handler\n\nexport async function DBGarbageCollect() {\n  DB2.find({fieldName:\"MSG\"}).toArray().then(\n  (objs:{expiry:number}[])=>{\n    for (let i=0; i<objs.length; i++) {\n      if (Date.now()>objs[i].expiry || objs[i].expiry == null) \n        DB2.deleteOne({fieldName:\"MSG\",expiry:objs[i].expiry})\n    }\n  });\n}"],
  "mappings": "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",
  "names": ["i", "obj"]
}
