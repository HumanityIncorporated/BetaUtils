{
  "version": 3,
  "sources": ["../accessControl.ts"],
  "sourcesContent": ["import { WS } from \"./wsHandler\";\n\n// import { hashSync, compareSync} from \nvar bcrypt = require(\"bcrypt\");\n\nexport function validate(user:string, pwd:string, action:string, access:string, callback:any, token:string=\"\") {\n  console.log(\"Validating as \"+user+\" with action \"+action +\" (token \"+token+\")\");\n  if (action==\"logout\") {\n    console.log(\"Logging out \"+token)\n    WS.db.delete(token);\n    callback.end(JSON.stringify(\"SUCCESS\"));\n    return;\n  }\n  if (action==\"add\" || action==\"CMD\") {\n    WS.db.get(token).then((data:string)=>{\n      if (data == null) {\n        console.log(\"No active session\");\n        callback.end(JSON.stringify(\"NOACTIVE\"));\n        return;\n      }\n      let expiryTime = Number(data.split(\" \")[1]);\n      let tokenUser = data.split(\" \")[0];\n      console.log(\"Logged in as \"+tokenUser+\" | Expiring in: \"+(expiryTime-Date.now()) + \" ms\");\n      if (expiryTime<Date.now()) {\n        console.log(\"Token expired. Logged out user.\")\n        WS.db.delete(token);\n        callback.end(JSON.stringify(\"EXPIRE\"));\n        return;\n      }\n      WS.db.get(tokenUser+\"^PERM\").then((perms:string)=> {\n        if (action==\"add\") {\n          if (Number(perms)<2){\n            if (user == tokenUser && access == \"1\") {\n              console.log(\"Updating password\");\n              WS.db.set(user, bcrypt.hashSync(pwd, 8));\n              callback.end(JSON.stringify(\"SUCCESS\"))\n            }\n            console.log(\"Permissions insufficient.\")\n            callback.end(JSON.stringify(\"ACCESS\"));\n          }\n          else if (access < 3) {\n            console.log(\"Access granted; Token not expired. Adding \"+user+\" with permissions\"+access);\n            WS.db.set(user, bcrypt.hashSync(pwd, 8));\n            WS.db.set(user+\"^PERM\", access);\n            callback.end(JSON.stringify(\"SUCCESS\"));\n          }\n          else {\n            callback.end(JSON.stringify(\"ACCESS\"))\n          }\n        } // add\n        else if (action==\"CMD\" && perms == \"3\") {\n          var DB = WS.db;\n          // eval(\"console.log(DB.list());\");\n          try {console.log(eval(user));} catch(e:any) {console.log(e);};\n          callback.end(JSON.stringify(\"SUCCESS\"));\n        }\n        else {\n          console.log(\"No perms!\")\n          callback.end(JSON.stringify(\"ACCESS\"));\n        }\n      }); // check permissions of token\n    });\n   return; \n  }\n  if (action==\"signup\") {\n    WS.db.list().then((keys:any)=>{\n      if (keys.indexOf(user)>=0) {\n        console.log(user+\" was already registered\")\n        callback.end(JSON.stringify(\"TAKEN\"));\n      }\n      else {\n        WS.db.set(user, bcrypt.hashSync(pwd, 8));\n        WS.db.set(user+\"^PERM\", \"1\");\n        callback.end(JSON.stringify(\"SUCCESS\"));\n      }\n    })\n    return;    \n  }\n  // check password permissions\n  WS.db.get(user).then((value:any)=>{\n    console.log(\"Logged password hash:\" + value)\n    if (value && bcrypt.compareSync(pwd, value)) {// pwd validated. \n      \n      WS.db.get(user+\"^PERM\").then((perm:any)=>{\n        console.log(\"Password OK for user \"+user+\" | Perms: \"+perm)\n        callback.end(JSON.stringify(perm));  \n        let exp = (Date.now()+1000*60*60);\n        console.log(\"Logging user \"+user+\" with expiry \"+exp+\" (in \"+(exp-Date.now())+\" ms)\");\n       WS.db.set(token, user+\" \"+exp);\n      })  \n    } // password/user not found\n    else {\n      console.log(\"Invalid credentials.\")\n      let response = 0;\n      callback.end(JSON.stringify(response));\n    };\n    \n  }) // login\n} // account handler"],
  "mappings": "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",
  "names": []
}
