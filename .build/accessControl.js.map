{
  "version": 3,
  "sources": ["../accessControl.ts"],
  "sourcesContent": ["import { WS } from \"./wsHandler\";\nvar escape = require('escape-html');\nimport {currHandler} from './initialiser';\n// import { hashSync, compareSync} from \nvar bcrypt = require(\"bcrypt\");\nconst path = require('path');\nimport { updateUser } from \"./updateuser\";\nimport {systemLog} from './misc';\nimport {replacements} from './replacements'\nconst fs = require(\"fs\");\nimport { sendMsgAllRooms } from \"./server\";\nimport {database} from './database';\n  const DB = database.collection('SystemAUTH');\n  const DB2 = database.collection('SupportMessaging');\n  const DB3 = database.collection('BetaUtilities');\n\nexport function validate(user:string, pwd:string, action:string, access:string, callback:any, token:string=\"\") {\n  if (action != \"refresh\" && action != \"refresh_log\"\n      && action != \"sendMsg\" && action != \"bMsg\" && \n     action != \"checkAccess_A\" && action != \"checkAccess\" &&\n      action != \"userReq\") systemLog(\"Validating as \"+user+\" with action \"+action +\" (token \"+token+\")\");\n  if (!token || !token.match(\"[0-9]+\") || \n     (!user || user && action !=\"CMD\" && action !=\"sendMsg\" && !user.match(\"^[a-zA-Z0-9_]+$\")) || \n     (!pwd || action != \"CMD\" && pwd.length<=0)) \n  {\n    if (action == \"add\" || action == \"login\")\n    {\n      systemLog(\"Unknown error\")\n      callback.end(JSON.stringify(\"ERROR\"))\n      return;\n    } \n  }\n\n  if (action == \"bMsg\") {\n    DB2.insertOne({\n      fieldName: \"MSG\", \n      sender:\"BetaOS_System\", \n      data:user, \n      permLevel:3, \n      expiry:Date.now()+1000*60*60});\n   \n    sendMsgAllRooms(format({permLevel:3, data:user, sender:\"BetaOS_System\"}));\n    return;\n  }\n   // data validation complete\n  if (action==\"logout\") {\n    systemLog(\"Logging out \"+token)\n    DB.deleteOne({fieldName:\"TOKEN\", token:{$eq:token}});\n    callback.end(JSON.stringify(\"SUCCESS\"));\n    return;\n  }\n\n  // attempt to add user or run commands or access support (REQUIRE PERMLEVELS)\n  if (action==\"add\" || action==\"CMD\" || \n      action == \"checkAccess\" || action == \"sendMsg\"||\n     action == \"refresh\" || action == \"checkAccess_A\" || \n     action == \"refresh_log\" || action == \"userReq\" || \n     action == \"renick\" || action == \"delete\") {\n    DB.findOne({fieldName: \"TOKEN\", token:{$eq:token}}).then(\n    (obj:{associatedUser:string, expiry:number})=>{\n      if (obj == null) {\n        systemLog(\"No active session\");\n        if (action == \"checkAccess\" || action == \"checkAccess_A\") {\n          callback.sendFile(path.join( __dirname, '../frontend', '403.html' ));\n        }\n        else callback.end(JSON.stringify(\"NOACTIVE\"));\n        return;\n      }\n      let expiryTime = obj.expiry;\n      let tokenUser = obj.associatedUser;\n      if (action != \"refresh\" && action != \"refresh_log\"\n         && action != \"sendMsg\" && action != \"checkAccess_A\" &&\n         action != \"userReq\" && action !=\"checkAccess\") systemLog(\"Logged in as \"+tokenUser+\" | Expiring in: \"+(expiryTime-Date.now()) + \" ms\");\n      if (expiryTime<Date.now()) {\n        systemLog(\"Token expired. Logged out user.\")\n        DB.deleteOne({fieldName:\"TOKEN\", token:{$eq:token}});\n        if (action == \"checkAccess\" || action == \"checkAccess_A\") \n          callback.sendFile(path.join( __dirname, '../frontend', '403.html' ));\n        else callback.end(JSON.stringify(\"EXPIRE\"));\n        return;\n      }\n      \n      DB.findOne({fieldName:\"UserData\", user:obj.associatedUser}).then(\n      (obj2:{permLevel:number, alias:string|null})=>{\n        if (!obj2) {callback.end(JSON.stringify(\"ERROR\")); return;}\n        let perms = obj2.permLevel;\n        if (action == \"renick\" && perms >= 1)\n        {\n          if (obj.associatedUser != \"betatester1024\" && \n              obj.associatedUser != \"betaos\" && \n              (user.toLowerCase() == \"betaos\" || \n               user.toLowerCase() == \"betatester1024\")) \n          {\n            callback.end(JSON.stringify(\"ERROR\"))\n            return;\n          }\n          DB.updateOne({fieldName:\"UserData\", user: obj.associatedUser}, {\n            $set: {\n              alias: user\n            },\n            $currentDate: { lastModified: true }\n          }, {upsert:true});\n          callback.end(JSON.stringify(escape(user)));\n          return;\n        } // renick \n        if (action == \"userReq\") {\n          callback.end(JSON.stringify(obj.associatedUser+\" \"+obj2.permLevel));\n          return;\n        }\n        if (action==\"add\" || action == \"delete\") {\n          DB.findOne({fieldName:\"UserData\", user:{$eq:user}}).then(\n            (obj3: {permLevel:number}) => {\n              // console.log(obj3);\n              if (obj3 && obj3.permLevel>perms) {\n                systemLog(\"Trying to delete a higher-level user\");\n                callback.end(JSON.stringify(\"ACCESS\"));\n                return;\n              }\n              else if (action == \"delete\" && (perms >= 2||user == obj.associatedUser)) {\n                DB.findOneAndDelete({fieldName:\"UserData\", user:{$eq:user}})\n                  .then((res:any)=>{callback.end(JSON.stringify(escape(user)))});\n                systemLog(\"Deleted user \"+user);\n                return;\n              }\n              else if (action == \"delete\") {\n                systemLog(\"Insufficient access for deletion\")\n                callback.end(JSON.stringify(\"ACCESS\"));\n                return;\n              }\n              if (Number(perms)<2){\n                if (user == tokenUser && access == \"1\") {\n                  systemLog(\"Updating password\");\n                  updateUser(user, pwd);\n                  callback.end(JSON.stringify(\"SUCCESS\"))\n                  let exp = perms<3?(Date.now()+1000*60*60):(Date.now()+1000*60);\n                  systemLog(\"Logging user \"+user+\" with expiry \"+exp+\" (in \"+(exp-Date.now())+\" ms)\");\n                  DB.updateOne({fieldName:\"TOKEN\", token:{$eq:token}}, \n                  {\n                    $set: {\n                      associatedUser:user,\n                      expiry: exp\n                    },\n                    $currentDate: { lastModified: true }\n                  }, {upsert: true});\n                  return;\n                }\n                systemLog(\"Permissions insufficient.\")\n                callback.end(JSON.stringify(\"ACCESS\"));\n                return;\n              }\n              else if (Number(access) < 3) {\n                systemLog(\"Access granted; Token not expired. Adding \"+user+\" with permissions\"+access);\n                updateUser(user, pwd, Number(access));\n                callback.end(JSON.stringify(\"SUCCESS\"));\n                return;\n              }\n              else { // attempting to add a full site administrator user - forbidden!\n                systemLog(\"Invalid access-level granting:\")\n                callback.end(JSON.stringify(\"ACCESS\"))\n                return;\n              }\n            } // callback for searching user to be updated\n          );\n          return;\n        } // add\n        else if (action==\"CMD\" && perms == 3) {\n          // var DB = ;\n          // systemLog(\"Evaluating \"+user);\n          if (user == \"!killall\") {\n            WS.killall();\n            callback.end(JSON.stringify(\"SUCCESS\"));\n            return;\n          }\n          try {systemLog(eval(user));} catch(e:any) {systemLog(e);};\n          callback.end(JSON.stringify(\"SUCCESS\"));\n        }\n        else if (action == \"checkAccess\") {\n          systemLog(\"Support access granted!\")\n          callback.sendFile(path.join( __dirname, '../frontend', 'support.html' ));\n          return;\n        }\n        else if (action == \"checkAccess_A\" && perms>=2) {\n          // systemLog(\"SysLog access granted!\")\n          callback.sendFile(path.join( __dirname, '../frontend', 'sysLog.html' ));\n          return;\n        }\n        else if (action == \"sendMsg\" && perms >= 1) {\n          // systemLog(\"adding message: \"+user);\n          const snd = obj2.alias?obj2.alias:obj.associatedUser;\n          DB2.insertOne({\n            fieldName: \"MSG\", \n            sender:snd, \n            data:user, \n            permLevel:perms, \n            expiry:Date.now()+1000*60*60})\n          callback.end(JSON.stringify(\"SUCCESS\"));\n          console.log(\"Sending message:\"+user);\n          sendMsgAllRooms(format({permLevel:perms, data:user, sender:snd}));\n          if (currHandler) currHandler.onMessage(user, snd);\n          return;\n        }\n        \n        else if (action == \"refresh\" && perms >= 1) {\n          \n          // let cursor = DB2.find({fieldName:\"MSG\"});\n          DB2.find({fieldName:\"MSG\"}).toArray().then((objs:{sender:string, data:string, permLevel:number}[])=>{\n            let out = \"\";\n            // console.log(objs)\n            for (let i=0; i<objs.length; i++) {\n              out += format(objs[i]);\n            }\n            callback.end(JSON.stringify(out));\n          });\n          return;\n        }\n        else if (action == \"refresh_log\" && perms >=2 ) {\n          let msg = fs.readFileSync(\"./systemLog.txt\").toString();\n          msg = msg.replaceAll(\"\\n\",\"<br>\")\n          callback.end(JSON.stringify(msg));\n        }\n        else if (action == \"refresh_log\" || action == \"refresh\" || action == \"checkAccess_A\") {\n          callback.sendFile(path.join( __dirname, '../frontend', '403.html' ));\n        }\n        \n        else {\n          systemLog(\"No perms!\")\n          callback.end(JSON.stringify(\"ACCESS\"));\n          return;\n        }\n      }); // check permissions of token\n    });\n   return; \n  }\n  if (action==\"signup\") {\n    DB.findOne({fieldName:\"UserData\", user:user}).then((obj:any)=>{\n      if (obj != null) {\n        systemLog(user+\" was already registered\")\n        callback.end(JSON.stringify(\"TAKEN\"));\n        return;\n      }\n      else {\n        systemLog(\"Registered user \"+user +\"with pass: [REDACTED]\")\n        updateUser(user, pwd, 1);\n        let exp = (Date.now()+1000*60*60);\n        systemLog(\"Logging user \"+user+\" with expiry \"+exp+\" (in \"+(exp-Date.now())+\" ms)\");\n        DB.updateOne({fieldName:\"TOKEN\", token:{$eq:token}}, \n        {\n          $set: {\n            associatedUser:user,\n            expiry: exp\n          },\n          $currentDate: { lastModified: true }\n        }, {upsert: true});\n        callback.end(JSON.stringify(\"SUCCESS\"));\n        return;\n      }\n    })\n    return;    \n  }\n  // check password permissions\n  DB.findOne({fieldName:\"UserData\", user:user}).then(\n    (obj:{passHash:string, permLevel:number})=>{\n    // systemLog(\"Logged password hash:\" + value)\n    if (obj && bcrypt.compareSync(pwd, obj.passHash)) {// pwd validated. \n      let perm = obj.permLevel\n      systemLog(\"Password OK for user \"+user+\" | Perms: \"+perm)\n      callback.end(JSON.stringify(perm));  \n      let exp = perm<3?(Date.now()+1000*60*60*24*30):(Date.now()+1000*300);\n      systemLog(\"Logging user \"+user+\" with expiry \"+exp+\" (in \"+(exp-Date.now())+\" ms)\");\n      DB.updateOne({fieldName:\"TOKEN\", token:{$eq:token}}, \n      {\n        $set: {\n          associatedUser:user,\n          expiry: exp\n        },\n        $currentDate: { lastModified: true }\n      }, {upsert: true});\n    } // password/user not found\n    else {\n      systemLog(\"Invalid credentials.\")\n      let response = 0;\n      callback.end(JSON.stringify(response));\n    };\n    \n  }) // login\n} // account handler\n\nexport async function DBGarbageCollect() {\n  DB2.find({fieldName:\"MSG\"}).toArray().then(\n  (objs:{expiry:number}[])=>{\n    for (let i=0; i<objs.length; i++) {\n      if (Date.now()>objs[i].expiry || objs[i].expiry == null) \n        DB2.deleteOne({fieldName:\"MSG\",expiry:objs[i].expiry})\n    }\n  });\n  DB3.find({fieldName:\"TIMER\"}).toArray().then(\n  (objs:{expiry:number, notifyingUser:string, msg:string}[])=>{\n    for (let i=0; i<objs.length; i++) {\n      if (Date.now()>objs[i].expiry || objs[i].expiry == null) {\n        DB3.deleteOne({fieldName:\"TIMER\",expiry:objs[i].expiry})\n        WS.notifRoom.socket.send(WS.toSendInfo(\"!tell @\"+objs[i].notifyingUser+\" You are reminded of: \"+\n                                               objs[i].msg.replaceAll(/\\\\/gm, \"\\\\\\\\\").replaceAll(/\"/gm, \"\\\\\\\"\")));\n      }\n    }\n  });\n  \n}\n\nfunction format(obj:{permLevel:number, data:string, sender:string}) {\n  let cls_n=\"\", extraText = \"\";\n  switch (obj.permLevel) {\n    case 2: cls_n=\"admin\"; extraText = \" [ADMIN]\"; break;\n    case 3: cls_n=\"beta\"; extraText = \" [SYSTEM]\"; break;\n  }\n  let data = obj.data;\n  data = data.replaceAll(\"&\", \"&amp;\");\n  data = data.replaceAll(\">\", \"&gt;\");\n  data = data.replaceAll(\"<\", \"&lt;\");\n  data = data.replaceAll(\"\\\\n\", \"<br>\");\n  data = data.replaceAll(\"&([0-9a-zA-Z]+)\", (match:string, p1:string)=>{return \"<a href='euphoria.io/room/\"+p1+\"'>\"+p1+\"</a>\"});\n  for (let i=0; i<replacements.length; i++){\n    data = data.replaceAll(replacements[i].from, \"<span class='material-symbols-outlined'>\"+replacements[i].to+\"</span>\")\n  }\n  let cls_w = \"\"\n  if (data.match(\"^/me\")){\n    cls_w += \" slashMe\"\n    data = data.replace(\"/me\", \"\"); \n  }\n  if (obj.sender.toLowerCase() == \"betaos\") {\n    cls_n+=\" beta\";\n    extraText = \" [SYSTEM]\";\n  }\n  cls_w += \" \"+cls_n;\n  return `<p class=\\\"${cls_w}\\\"\"><b class='${cls_n}'>${obj.sender}${extraText}:</b> ${data} </p><br>`;\n}"],
  "mappings": "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",
  "names": ["obj"]
}
