{
  "version": 3,
  "sources": ["../accessControl.ts"],
  "sourcesContent": ["import { WS } from \"./wsHandler\";\n\n// import { hashSync, compareSync} from \nvar bcrypt = require(\"bcrypt\");\nconst path = require('path');\nimport { updateUser } from \"./updateuser\";\nimport {systemLog} from './misc';\nimport {database} from './database';\nconst DB = database.collection('SystemAUTH');\n\nexport function validate(user:string, pwd:string, action:string, access:string, callback:any, token:string=\"\") {\n  systemLog(\"Validating as \"+user+\" with action \"+action +\" (token \"+token+\")\");\n  if (!token || !token.match(\"[0-9]+\") || \n     (!user || user && action !=\"CMD\" && !user.match(\"[a-zA-Z0-9_]+\")) || \n     (!pwd || action != \"CMD\" && pwd.length<=0)) \n  {\n    if (action!= \"checkAccess\" && action != \"logout\")\n    {\n      systemLog(\"Unknown error\")\n      callback.end(JSON.stringify(\"ERROR\"))\n      return;\n    } \n  }\n   // data validation complete\n  if (action==\"logout\") {\n    systemLog(\"Logging out \"+token)\n    DB.deleteOne({fieldName:\"TOKEN\", token:token});\n    callback.end(JSON.stringify(\"SUCCESS\"));\n    return;\n  }\n\n  // attempt to add user or run commands or access support (REQUIRE PERMLEVELS)\n  if (action==\"add\" || action==\"CMD\" || action == \"checkAccess\") {\n    DB.findOne({fieldName: \"TOKEN\", token:token}).then(\n    (obj:{associatedUser:string, expiry:number})=>{\n      if (obj == null) {\n        systemLog(\"No active session\");\n        if (action == \"checkAccess\") callback.sendFile(path.join( __dirname, '../frontend', '403.html' ));\n        else callback.end(JSON.stringify(\"NOACTIVE\"));\n        return;\n      }\n      let expiryTime = obj.expiry;\n      let tokenUser = obj.associatedUser;\n      systemLog(\"Logged in as \"+tokenUser+\" | Expiring in: \"+(expiryTime-Date.now()) + \" ms\");\n      if (expiryTime<Date.now()) {\n        systemLog(\"Token expired. Logged out user.\")\n        DB.deleteOne({fieldName:\"TOKEN\", token:token});\n        if (action == \"checkAccess\") callback.sendFile(path.join( __dirname, '../frontend', '403.html' ));\n        else callback.end(JSON.stringify(\"EXPIRE\"));\n        return;\n      }\n      DB.findOne({fieldName:\"UserData\", user:obj.associatedUser}).then(\n      (obj2:{permLevel:number})=>{\n        let perms = obj2.permLevel;\n        if (action==\"add\") {\n          if (Number(perms)<2){\n            if (user == tokenUser && access == \"1\") {\n              systemLog(\"Updating password\");\n              updateUser(user, pwd);\n              callback.end(JSON.stringify(\"SUCCESS\"))\n              return;\n            }\n            systemLog(\"Permissions insufficient.\")\n            callback.end(JSON.stringify(\"ACCESS\"));\n            return;\n          }\n          else if (Number(access) < 3) {\n            systemLog(\"Access granted; Token not expired. Adding \"+user+\" with permissions\"+access);\n            updateUser(user, pwd, Number(access));\n            callback.end(JSON.stringify(\"SUCCESS\"));\n            return;\n          }\n          else { // attempting to add a full site administrator user - forbidden!\n            systemLog(\"Invalid access-level granting:\")\n            callback.end(JSON.stringify(\"ACCESS\"))\n            return;\n          }\n        } // add\n        else if (action==\"CMD\" && perms == 3) {\n          // var DB = ;\n          systemLog(\"Evaluating \"+user);\n          try {systemLog(eval(user));} catch(e:any) {systemLog(e);};\n          callback.end(JSON.stringify(\"SUCCESS\"));\n        }\n        else if (action == \"checkAccess\") {\n          systemLog(\"Support access granted!\")\n          callback.sendFile(path.join( __dirname, '../frontend', 'support.html' ));\n          return;\n        }\n        else {\n          systemLog(\"No perms!\")\n          callback.end(JSON.stringify(\"ACCESS\"));\n          return;\n        }\n      }); // check permissions of token\n    });\n   return; \n  }\n  if (action==\"signup\") {\n    DB.findOne({fieldName:\"UserData\", user:user}).then((obj:any)=>{\n      if (obj != null) {\n        systemLog(user+\" was already registered\")\n        callback.end(JSON.stringify(\"TAKEN\"));\n        return;\n      }\n      else {\n        systemLog(\"Registered user \"+user)\n        updateUser(user, pwd, 1);\n        callback.end(JSON.stringify(\"SUCCESS\"));\n        return;\n      }\n    })\n    return;    \n  }\n  // check password permissions\n  DB.findOne({fieldName:\"UserData\", user:user}).then(\n    (obj:{passHash:string, permLevel:number})=>{\n    // systemLog(\"Logged password hash:\" + value)\n    if (obj && bcrypt.compareSync(pwd, obj.passHash)) {// pwd validated. \n      let perm = obj.permLevel\n      systemLog(\"Password OK for user \"+user+\" | Perms: \"+perm)\n      callback.end(JSON.stringify(perm));  \n      let exp = perm<3?(Date.now()+1000*60*60):(Date.now()+1000*60);\n      systemLog(\"Logging user \"+user+\" with expiry \"+exp+\" (in \"+(exp-Date.now())+\" ms)\");\n      DB.updateOne({fieldName:\"TOKEN\", token:token}, \n      {\n        $set: {\n          associatedUser:user,\n          expiry: exp\n        },\n        $currentDate: { lastModified: true }\n      }, {upsert: true});\n    } // password/user not found\n    else {\n      systemLog(\"Invalid credentials.\")\n      let response = 0;\n      callback.end(JSON.stringify(response));\n    };\n    \n  }) // login\n} // account handler"],
  "mappings": "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",
  "names": ["obj"]
}
