{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["import {initServer} from './server';\nimport {DBMaintenance, connectDB} from './database';\nimport {supportHandler, Room} from './supportRooms'\nimport {log} from './logging';\nimport {uDB} from './consts';\nimport {WS} from './wsHandler'\nlog(\"Systems restarted\");\n\ntry {\n  connectDB().then((thing:any)=>{\n    console.log(thing)\n    initServer();\n    DBMaintenance();\n    uDB.findOne({fieldName:\"ROOMS\"}).then((obj:{euphRooms:string[], rooms:string[], hidRooms:string[]})=>{\n      for (let i=0; i<obj.euphRooms.length; i++) {\n        supportHandler.addRoom(new Room(\"EUPH_ROOM\", obj.euphRooms[i]));\n        new WS(\"wss://euphoria.io/room/\" + obj.euphRooms[i] + \"/ws\", \"BetaUtilities\", obj.euphRooms[i], false)\n      }\n      for (let i=0; i<obj.rooms.length; i++) {\n        supportHandler.addRoom(new Room(\"ONLINE_SUPPORT\", obj.rooms[i]));\n      }\n      for (let i=0; i<obj.hidRooms.length; i++) {\n        supportHandler.addRoom(new Room(\"HIDDEN_SUPPORT\", obj.hidRooms[i]));\n      }\n    })\n  });\n} catch (e:any) {\n  console.log(e);\n}\n"],
  "mappings": ";AAAA,oBAAyB;AACzB,sBAAuC;AACvC,0BAAmC;AACnC,qBAAkB;AAClB,oBAAkB;AAClB,uBAAiB;AAAA,IACjB,oBAAI,mBAAmB;AAEvB,IAAI;AACF,iCAAU,EAAE,KAAK,CAAC,UAAY;AAC5B,YAAQ,IAAI,KAAK;AACjB,kCAAW;AACX,uCAAc;AACd,sBAAI,QAAQ,EAAC,WAAU,QAAO,CAAC,EAAE,KAAK,CAAC,QAA8D;AACnG,eAAS,IAAE,GAAG,IAAE,IAAI,UAAU,QAAQ,KAAK;AACzC,2CAAe,QAAQ,IAAI,yBAAK,aAAa,IAAI,UAAU,EAAE,CAAC;AAC9D,YAAI,oBAAG,4BAA4B,IAAI,UAAU,KAAK,OAAO,iBAAiB,IAAI,UAAU,IAAI,KAAK;AAAA,MACvG;AACA,eAAS,IAAE,GAAG,IAAE,IAAI,MAAM,QAAQ,KAAK;AACrC,2CAAe,QAAQ,IAAI,yBAAK,kBAAkB,IAAI,MAAM,EAAE,CAAC;AAAA,MACjE;AACA,eAAS,IAAE,GAAG,IAAE,IAAI,SAAS,QAAQ,KAAK;AACxC,2CAAe,QAAQ,IAAI,yBAAK,kBAAkB,IAAI,SAAS,EAAE,CAAC;AAAA,MACpE;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AACH,SAAS,GAAP;AACA,UAAQ,IAAI,CAAC;AACf;",
  "names": []
}
