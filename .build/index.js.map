{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["import {initServer} from './server';\nimport {DBMaintenance, connectDB, client} from './database';\nimport {supportHandler, Room} from './supportRooms'\nimport {log} from './logging';\nimport {uDB} from './consts';\nimport {WS} from './betautilities/wsHandler';\nexport let connectionSuccess = true;\nexport let DBConnectFailure:any = null;\n\ntry {\n  if (connectionSuccess)\n  connectDB().then((thing:any)=>{\n    console.log(thing)\n    if (!connectionSuccess) return;\n    initServer();\n    DBMaintenance();\n    log(\"Systems restarted\");\n    uDB.findOne({fieldName:\"ROOMS\"}).then((obj:{euphRooms:string[], rooms:string[], hidRooms:string[]})=>{\n      for (let i=0; i<obj.euphRooms.length; i++) {\n        supportHandler.addRoom(new Room(\"EUPH_ROOM\", obj.euphRooms[i]));\n        new WS(\"wss://euphoria.io/room/\" + obj.euphRooms[i] +\"/ws\", \"BetaUtilities\", obj.euphRooms[i], false)\n        log(\"Connected euph_room\")+obj.euphRooms[i];\n        console.log(\"Connected euph_room\", obj.euphRooms[i]);\n      }\n      for (let i=0; i<obj.rooms.length; i++) {\n        supportHandler.addRoom(new Room(\"ONLINE_SUPPORT\", obj.rooms[i]));\n        console.log(\"Loaded support room\", obj.rooms[i]);\n      }\n      for (let i=0; i<obj.hidRooms.length; i++) {\n        supportHandler.addRoom(new Room(\"HIDDEN_SUPPORT\", obj.hidRooms[i]));\n        console.log(\"Loaded support room\", obj.rooms[i]);\n      }\n    })\n  });\n  DBConnectFailure = setTimeout(()=>{\n    connectionSuccess=false; \n    console.log(\"Connection failed\")\n    initServer();\n  }, 1000);\n} catch (e:any) {\n  console.log(e);\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyB;AACzB,sBAA+C;AAC/C,0BAAmC;AACnC,qBAAkB;AAClB,oBAAkB;AAClB,uBAAiB;AACV,IAAI,oBAAoB;AACxB,IAAI,mBAAuB;AAElC,IAAI;AACF,MAAI;AACJ,mCAAU,EAAE,KAAK,CAAC,UAAY;AAC5B,cAAQ,IAAI,KAAK;AACjB,UAAI,CAAC;AAAmB;AACxB,oCAAW;AACX,yCAAc;AACd,8BAAI,mBAAmB;AACvB,wBAAI,QAAQ,EAAC,WAAU,QAAO,CAAC,EAAE,KAAK,CAAC,QAA8D;AACnG,iBAAS,IAAE,GAAG,IAAE,IAAI,UAAU,QAAQ,KAAK;AACzC,6CAAe,QAAQ,IAAI,yBAAK,aAAa,IAAI,UAAU,EAAE,CAAC;AAC9D,cAAI,oBAAG,4BAA4B,IAAI,UAAU,KAAI,OAAO,iBAAiB,IAAI,UAAU,IAAI,KAAK;AACpG,kCAAI,qBAAqB,IAAE,IAAI,UAAU;AACzC,kBAAQ,IAAI,uBAAuB,IAAI,UAAU,EAAE;AAAA,QACrD;AACA,iBAAS,IAAE,GAAG,IAAE,IAAI,MAAM,QAAQ,KAAK;AACrC,6CAAe,QAAQ,IAAI,yBAAK,kBAAkB,IAAI,MAAM,EAAE,CAAC;AAC/D,kBAAQ,IAAI,uBAAuB,IAAI,MAAM,EAAE;AAAA,QACjD;AACA,iBAAS,IAAE,GAAG,IAAE,IAAI,SAAS,QAAQ,KAAK;AACxC,6CAAe,QAAQ,IAAI,yBAAK,kBAAkB,IAAI,SAAS,EAAE,CAAC;AAClE,kBAAQ,IAAI,uBAAuB,IAAI,MAAM,EAAE;AAAA,QACjD;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AACD,qBAAmB,WAAW,MAAI;AAChC,wBAAkB;AAClB,YAAQ,IAAI,mBAAmB;AAC/B,kCAAW;AAAA,EACb,GAAG,GAAI;AACT,SAAS,GAAP;AACA,UAAQ,IAAI,CAAC;AACf;",
  "names": []
}
