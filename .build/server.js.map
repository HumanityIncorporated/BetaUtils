{
  "version": 3,
  "sources": ["../server.ts"],
  "sourcesContent": ["const express = require('express')\nconst app = express()\nconst crypto = require(\"crypto\");\nconst parse = require(\"co-body\");\n // for generating secure random #'s\nimport {K} from './consts';\nimport {signup, validateLogin, logout} from './validateLogin';\nimport { delAcc } from './delacc';\nimport {updateUser} from './updateUser'\nimport {userRequest} from './userRequest';\nimport {EE} from './EEHandler';\nconst bodyParser = require('body-parser');\nconst cookieParser = require('cookie-parser')\nimport {supportHandler, roomRequest, sendMsg} from './supportRooms'\nconst urlencodedParser = bodyParser.urlencoded({ extended: false }) \nvar RateLimit = require('express-rate-limit');\n\nexport async function initServer() {\n  var limiter = RateLimit({\n    windowMs: 10*1000, // 10 seconds\n    max: 50,\n    message: \"Too many requests, please try again later.\",\n    statusCode: 429, // 429 status = Too Many Requests (RFC 6585)\n  });\n  app.use(limiter);\n  app.use(new cookieParser());\n  \n  app.get('/', (req:Request, res:any) => {\n    res.sendFile(K.frontendDir+'/index.html');\n    incrRequests();\n  })\n\n  app.get('/login', (req:any, res:any) => {\n    res.sendFile(K.frontendDir+'/login.html');\n    incrRequests();\n  });\n\n  app.get('/signup', (req:any, res:any) => {\n    res.sendFile(K.frontendDir+'/signup.html');\n    incrRequests();\n  });\n\n  app.get('/config', (req:any, res:any) => {\n    res.sendFile(K.frontendDir+'/config.html');\n    incrRequests();\n  });\n\n  app.get('/account', (req:any, res:any) => {\n    res.sendFile(K.frontendDir+'/config.html');\n    incrRequests();\n  });\n\n  app.get('/admin', (req:any, res:any) => {\n    res.sendFile(K.frontendDir+'/admin.html');\n    incrRequests();\n  });\n\n  app.get('/todo', (req:any, res:any) => {\n    res.sendFile(K.frontendDir+'/todo.html');\n    incrRequests();\n  });\n\n  app.get('/status', (req:any, res:any) => {\n    res.sendFile(K.frontendDir+'/status.html');\n    incrRequests();\n  });\n  \n  app.get('/EE', (req:any, res:any) => {\n    EE(true, (_status:string, data:any, _token:string)=>{\n      res.set('Content-Type', 'text/html')\n      res.send(Buffer.from(data.data));\n    }, \"\", \"\")\n    \n    incrRequests();\n  });\n\n  app.get('/docs', (req:any, res:any) => {\n    res.sendFile(K.frontendDir+'/docs.html');\n    incrRequests();\n  });\n  \n  app.get('/EEdit', (req:any, res:any) => {\n    res.sendFile(K.frontendDir+'/EEdit.html');\n    incrRequests();\n  });\n  \n  app.get('/logout', (req:any, res:any) => {\n    res.sendFile(K.frontendDir+'/logout.html');\n    incrRequests();\n  });\n\n  app.get('/support', (req:any, res:any) => {\n    let match = req.url.match('\\\\?room=('+K.roomRegex+\")\");\n    if (match) {\n      if (!supportHandler.checkFoundQ(match[1])) {\n        console.log(\"Room not found\")\n        res.sendFile(K.frontendDir+\"/room404.html\");\n        return;\n      }\n      else res.sendFile(K.frontendDir+'/support.html');\n    }\n    else res.sendFile(K.frontendDir+'/supportIndex.html');\n    incrRequests();\n  });\n\n  app.get('/accountDel', (req:any, res:any) => {\n    res.sendFile(K.frontendDir+'/delAcc.html');\n    incrRequests();\n  });\n    \n  app.get('*/favicon.ico', (req:Request, res:any)=> {\n    res.sendFile(K.rootDir+'/favicon.ico')\n    incrRequests();\n  })\n\n  \n  app.get('/support.js', (req:any, res:any) => {\n    res.sendFile(K.frontendDir+\"support.js\");\n    incrRequests();\n  })\n  \n  app.get('/*.js*', (req:any, res:any) => {\n    res.sendFile(K.jsDir+req.url);\n    incrRequests();\n  })\n\n  \n  app.get('/*.ts', (req:any, res:any) => {\n    res.sendFile(K.jsDir+req.url);\n    incrRequests();\n  })\n\n  app.get('/*.css', (req:any, res:any) => {\n    res.sendFile(K.frontendDir+req.url);\n    incrRequests();\n  })\n\n  app.get(\"/stream\", (req:any, res:any) =>{\n    res.set({\n      'Cache-Control': 'no-cache',\n      'Content-Type': 'text/event-stream',\n      'Connection': 'keep-alive'\n    });\n    res.flushHeaders();\n    res.write(\"retry:500\\n\\n\");\n    // add the connection\n    supportHandler.addConnection(res, req.query.room, req.cookies.sessionID);\n    res.on(\"close\", () => {\n      // clear the connection\n      supportHandler.removeConnection(res, req.query.room, req.cookies.sessionID);\n      res.end();\n      // console.log(\"Removed stream\");\n    });\n  });\n\n  app.get('/*', (req:any, res:any) => {\n    res.sendFile(K.frontendDir+\"404.html\");\n    incrRequests();\n  })\n  \n  \n  app.post('/server', urlencodedParser, async (req:any, res:any) => {\n    incrRequests();\n    var body = await parse.json(req);\n    if (!body) res.end(JSON.stringify({status:\"ERROR\", data:null}));\n    // let cookiematch = req.cookies.match(\"sessionID=[0-9a-zA-Z\\\\-]\");\n    makeRequest(body.action, req.cookies.sessionID, body.data, (s:string, d:any, token:string)=>{\n      if(body.action==\"login\"||body.action == \"logout\" ||\n        body.action == \"delAcc\" || body.action == \"signup\") res.cookie('sessionID', token?token:\"\", { maxAge: 1000*60*60*24*30, httpOnly: true, secure:true, sameSite:\"Strict\"});\n      res.end(JSON.stringify({status:s, data:d}));\n    })\n  });\n  \n  app.listen(K.port, () => {\n    console.log(`BetaUtilities V2 listening on port ${K.port}`)\n  })\n}\n\nasync function incrRequests() {\n  let ct:{visitCt:number} = await K.uDB.findOne({fieldName:\"VISITS\"});\n  K.uDB.updateOne({fieldName:\"VISITS\"}, {$set:{visitCt:ct.visitCt+1}}, {upsert:true});\n}\n\nfunction makeRequest(action:string|null, token:string, data:any|null, callback: (status:string, data:any, token:string)=>any) {\n  switch (action) {\n    case 'test':\n      callback(\"SUCCESS\", {abc:\"def\", def:5}, token);\n      break;\n    case 'login': \n      // validate login-data before sending to server\n      data = data as {user:string, pass:string};\n      validateLogin(data.user, data.pass, callback, token);\n      break;\n    case 'signup':\n      data = data as {user:string, pass:string};\n      signup(data.user, data.pass, callback, token);\n      break;\n    case 'userRequest': \n      userRequest(callback, token);\n      break;\n    case 'roomRequest':\n      roomRequest(callback, token);\n      break;\n    case 'statusRequest':\n      roomRequest(callback, token, true);\n    case 'getEE':\n      EE(true, callback, token, \"\");\n      break;\n    case 'setEE':\n      data = data as {data:string}\n      EE(false, callback, token, data.data);\n      break;\n    case 'updateuser': \n      data = data as {user:string, oldPass: string, pass:string, newPermLevel:string};\n      updateUser(data.user, data.oldPass, data.pass, data.newPermLevel, callback, token);\n      break;\n    case 'delAcc':\n      data = data as {user:string, pass:string};\n      delAcc(data.user, data.pass, callback, token);\n      break;\n    case 'logout':\n      logout(callback, token);\n      break;\n    case 'logout_all':\n      logout(callback, token, true);\n      break;\n    case 'sendMsg':\n      data = data as {msg:string, room:string};\n      sendMsg(data.msg, data.room, callback, token);\n    default:\n      callback(\"ERROR\", {error: \"Unknown command string!\"}, token);\n  }\n  return; \n}\n"],
  "mappings": "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",
  "names": []
}
