{
  "version": 3,
  "sources": ["../server.ts"],
  "sourcesContent": ["const express = require('express')\nconst app = express()\nconst port = 3000\nconst rootDir = '/home/runner/BetaUtilitiesV2/';\nconst frontendDir = '/home/runner/BetaUtilitiesV2/frontend/';\nconst jsDir = '/home/runner/BetaUtilitiesV2/.build/frontend/';\nconst bodyParser = require('body-parser'); \nconst urlencodedParser = bodyParser.urlencoded({ extended: false }) \nvar RateLimit = require('express-rate-limit');\n\nexport function initServer() {\n  var limiter = RateLimit({\n    windowMs: 10*1000, // 10 seconds\n    max: 50,\n    message: \"Too many requests, please try again later.\",\n    statusCode: 429, // 429 status = Too Many Requests (RFC 6585)\n  });\n  app.use(limiter);\n  \n  app.get('/', (req:Request, res:any) => {\n    res.sendFile(rootDir+'/frontend/index.html')\n  })\n  \n  app.get('/*.js', (req:any, res:any) => {\n    res.sendFile(jsDir+req.url);\n  })\n  \n  app.post('/server', urlencodedParser, (req:any, res:any) => {\n    if (!req.body) res.end(JSON.stringify({status:\"ERROR\", data:null}));\n    makeRequest(req.body.action, req.body.token, req.body.data, (s:string, d:any)=>{res.end(JSON.stringify({status:s, data:d}))})\n  });\n  \n  app.listen(port, () => {\n    console.log(`BetaUtilities V2 listening on port ${port}`)\n  })\n}\n\nfunction makeRequest(action:string|null, token:number|null, data:any|null, callback: (status:string, data:any)=>any) {\n  switch (action) {\n    case 'test':\n      callback(\"SUCCESS\", {abc:\"def\", def:5});\n      break;\n    default:\n      callback(\"ERROR\", null);\n  }\n  return; \n}\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAM,UAAU,QAAQ,SAAS;AACjC,MAAM,MAAM,QAAQ;AACpB,MAAM,OAAO;AACb,MAAM,UAAU;AAChB,MAAM,cAAc;AACpB,MAAM,QAAQ;AACd,MAAM,aAAa,QAAQ,aAAa;AACxC,MAAM,mBAAmB,WAAW,WAAW,EAAE,UAAU,MAAM,CAAC;AAClE,IAAI,YAAY,QAAQ,oBAAoB;AAErC,SAAS,aAAa;AAC3B,MAAI,UAAU,UAAU;AAAA,IACtB,UAAU,KAAG;AAAA,IACb,KAAK;AAAA,IACL,SAAS;AAAA,IACT,YAAY;AAAA,EACd,CAAC;AACD,MAAI,IAAI,OAAO;AAEf,MAAI,IAAI,KAAK,CAAC,KAAa,QAAY;AACrC,QAAI,SAAS,UAAQ,sBAAsB;AAAA,EAC7C,CAAC;AAED,MAAI,IAAI,SAAS,CAAC,KAAS,QAAY;AACrC,QAAI,SAAS,QAAM,IAAI,GAAG;AAAA,EAC5B,CAAC;AAED,MAAI,KAAK,WAAW,kBAAkB,CAAC,KAAS,QAAY;AAC1D,QAAI,CAAC,IAAI;AAAM,UAAI,IAAI,KAAK,UAAU,EAAC,QAAO,SAAS,MAAK,KAAI,CAAC,CAAC;AAClE,gBAAY,IAAI,KAAK,QAAQ,IAAI,KAAK,OAAO,IAAI,KAAK,MAAM,CAAC,GAAU,MAAQ;AAAC,UAAI,IAAI,KAAK,UAAU,EAAC,QAAO,GAAG,MAAK,EAAC,CAAC,CAAC;AAAA,IAAC,CAAC;AAAA,EAC9H,CAAC;AAED,MAAI,OAAO,MAAM,MAAM;AACrB,YAAQ,IAAI,sCAAsC,MAAM;AAAA,EAC1D,CAAC;AACH;AAEA,SAAS,YAAY,QAAoB,OAAmB,MAAe,UAA0C;AACnH,UAAQ,QAAQ;AAAA,IACd,KAAK;AACH,eAAS,WAAW,EAAC,KAAI,OAAO,KAAI,EAAC,CAAC;AACtC;AAAA,IACF;AACE,eAAS,SAAS,IAAI;AAAA,EAC1B;AACA;AACF;",
  "names": []
}
