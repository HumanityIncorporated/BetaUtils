{
  "version": 3,
  "sources": ["../database.ts"],
  "sourcesContent": ["const { MongoClient } = require(\"mongodb\");\nimport {authDB, msgDB, uDB} from './consts';\nimport {WS} from './betautilities/wsHandler';\n\n// Replace the uri string with your connection string.\nconst uri = \n  `mongodb+srv://SystemLogin:${process.env['dbPwd']}@betaos-datacluster00.d8o7x8n.mongodb.net/?retryWrites=true&w=majority`\n  // \"mongodb://SystemLogin:\"+process.env['dbPwd']+\"@ac-rz8jdrl-shard-00-00.d8o7x8n.mongodb.net:27017,ac-rz8jdrl-shard-00-01.d8o7x8n.mongodb.net:27017,ac-rz8jdrl-shard-00-02.d8o7x8n.mongodb.net:27017/?ssl=true&replicaSet=atlas-3yyxq8-shard-0&authSource=admin&retryWrites=true&w=majority\";\n  // \"mongodb+srv://SystemLogin:\"+process.env['dbPwd']+\"@betaos-datacluster00.d8o7x8n.mongodb.net/?retryWrites=true&w=majority\";\n// console.log(\"YOUR URI IS:\", uri);\nimport {DBConnectFailure} from './index';\nexport const client = new MongoClient(uri)//, { useNewUrlParser: true, useUnifiedTopology: true });\n// const client = cli.connect();\nexport async function connectDB() {\n  try {\n    await client.connect();  \n    clearTimeout(DBConnectFailure)\n    return null;\n  }\n  catch(e:any) {\n    console.log(e);\n    return e;\n    \n  }\n}\n// export let minID = -1;\nexport const database = client.db('BetaOS-Database01');\n// export const DB = database.collection('BetaUtilities');\n\nexport async function DBMaintenance() {\n  let items:{associatedUser:string, expiry:number}[] = await authDB.find({fieldName:\"Token\"}).toArray();\n  for (let i=0; i<items.length; i++) {\n    if (!items[i].expiry || items[i].expiry < Date.now()) {\n      console.log(\"Token from \"+items[i].associatedUser + \" has expired\");\n      await authDB.deleteOne(items[i]);\n    }\n  }\n  let items2:{sender:string, expiry:number, msgID:number}[] = await msgDB.find({fieldName:\"MSG\"}).toArray();\n  for (let i=0; i<items2.length; i++) {\n    if (!items2[i].expiry || items2[i].expiry < Date.now()) {\n      console.log(\"Message from \"+items2[i].sender + \" in room \"+items2[i].room+\" has expired\");\n      await msgDB.deleteOne(items2[i]);\n      // thread parent always expires first hence the minThreadId must also be set\n      await msgDB.updateOne({fieldName:\"RoomInfo\", room:items2[i].room}, \n        {\n          $set:{\n            minCt:items2[i].msgID, \n            minThreadID:items2[i].threadID\n          }\n        });      \n      // console.log(\"New msgMin in room\",items2[i].room, \":\"+items2[i].msgID);\n    }\n  };\n  uDB.find({fieldName:\"TIMER\"}).toArray().then(\n  (objs:{expiry:number, notifyingUser:string, msg:string}[])=>{\n    for (let i=0; i<objs.length; i++) {\n      if (Date.now()>objs[i].expiry || objs[i].expiry == null) {\n        console.log(\"NOTIFYING\", objs[i]);\n        uDB.deleteOne({fieldName:\"TIMER\",expiry:objs[i].expiry})\n        \n        WS.notifRoom.socket.send(\n          WS.toSendInfo(\"!tell @\"+objs[i].notifyingUser+\" You are reminded of: \"+\n                        objs[i].msg.replaceAll(/\\\\/gm, \"\\\\\\\\\").replaceAll(/\"/gm, \"\\\\\\\"\")+\n                       \". This reminder sent by \"+(objs[i].author??\"yourself, probably.\")));\n      }\n    }\n  });\n  setTimeout(DBMaintenance, 1000);\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAiC;AACjC,uBAAiB;AAQjB,mBAA+B;AAV/B,MAAM,EAAE,YAAY,IAAI,QAAQ,SAAS;AAKzC,MAAM,MACJ,6BAA6B,QAAQ,IAAI;AAKpC,MAAM,SAAS,IAAI,YAAY,GAAG;AAEzC,eAAsB,YAAY;AAChC,MAAI;AACF,UAAM,OAAO,QAAQ;AACrB,iBAAa,6BAAgB;AAC7B,WAAO;AAAA,EACT,SACM,GAAN;AACE,YAAQ,IAAI,CAAC;AACb,WAAO;AAAA,EAET;AACF;AAEO,MAAM,WAAW,OAAO,GAAG,mBAAmB;AAGrD,eAAsB,gBAAgB;AACpC,MAAI,QAAiD,MAAM,qBAAO,KAAK,EAAC,WAAU,QAAO,CAAC,EAAE,QAAQ;AACpG,WAAS,IAAE,GAAG,IAAE,MAAM,QAAQ,KAAK;AACjC,QAAI,CAAC,MAAM,GAAG,UAAU,MAAM,GAAG,SAAS,KAAK,IAAI,GAAG;AACpD,cAAQ,IAAI,gBAAc,MAAM,GAAG,iBAAiB,cAAc;AAClE,YAAM,qBAAO,UAAU,MAAM,EAAE;AAAA,IACjC;AAAA,EACF;AACA,MAAI,SAAwD,MAAM,oBAAM,KAAK,EAAC,WAAU,MAAK,CAAC,EAAE,QAAQ;AACxG,WAAS,IAAE,GAAG,IAAE,OAAO,QAAQ,KAAK;AAClC,QAAI,CAAC,OAAO,GAAG,UAAU,OAAO,GAAG,SAAS,KAAK,IAAI,GAAG;AACtD,cAAQ,IAAI,kBAAgB,OAAO,GAAG,SAAS,cAAY,OAAO,GAAG,OAAK,cAAc;AACxF,YAAM,oBAAM,UAAU,OAAO,EAAE;AAE/B,YAAM,oBAAM;AAAA,QAAU,EAAC,WAAU,YAAY,MAAK,OAAO,GAAG,KAAI;AAAA,QAC9D;AAAA,UACE,MAAK;AAAA,YACH,OAAM,OAAO,GAAG;AAAA,YAChB,aAAY,OAAO,GAAG;AAAA,UACxB;AAAA,QACF;AAAA,MAAC;AAAA,IAEL;AAAA,EACF;AAAC;AACD,oBAAI,KAAK,EAAC,WAAU,QAAO,CAAC,EAAE,QAAQ,EAAE;AAAA,IACxC,CAAC,SAA2D;AAC1D,eAAS,IAAE,GAAG,IAAE,KAAK,QAAQ,KAAK;AAChC,YAAI,KAAK,IAAI,IAAE,KAAK,GAAG,UAAU,KAAK,GAAG,UAAU,MAAM;AACvD,kBAAQ,IAAI,aAAa,KAAK,EAAE;AAChC,4BAAI,UAAU,EAAC,WAAU,SAAQ,QAAO,KAAK,GAAG,OAAM,CAAC;AAEvD,8BAAG,UAAU,OAAO;AAAA,YAClB,oBAAG,WAAW,YAAU,KAAK,GAAG,gBAAc,2BAChC,KAAK,GAAG,IAAI,WAAW,QAAQ,MAAM,EAAE,WAAW,OAAO,KAAM,IAChE,8BAA4B,KAAK,GAAG,UAAQ,sBAAsB;AAAA,UAAC;AAAA,QACpF;AAAA,MACF;AAAA,IACF;AAAA,EAAC;AACD,aAAW,eAAe,GAAI;AAChC;",
  "names": []
}
