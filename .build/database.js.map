{
  "version": 3,
  "sources": ["../database.ts"],
  "sourcesContent": ["const { MongoClient } = require(\"mongodb\");\nimport {K} from './consts';\n\n// Replace the uri string with your connection string.\nconst uri =\n  \"mongodb://SystemLogin:\"+process.env['dbPwd']+\"@ac-rz8jdrl-shard-00-00.d8o7x8n.mongodb.net:27017,ac-rz8jdrl-shard-00-01.d8o7x8n.mongodb.net:27017,ac-rz8jdrl-shard-00-02.d8o7x8n.mongodb.net:27017/?ssl=true&replicaSet=atlas-3yyxq8-shard-0&authSource=admin&retryWrites=true&w=majority\";\n  // \"mongodb+srv://SystemLogin:\"+process.env['dbPwd']+\"@betaos-datacluster00.d8o7x8n.mongodb.net/?retryWrites=true&w=majority\";\n\nconst client = new MongoClient(uri, { useNewUrlParser: true, useUnifiedTopology: true });\n// const client = cli.connect();\nexport const database = client.db('BetaOS-Database01');\n// export const DB = database.collection('BetaUtilities');\n\nexport async function DBMaintenance() {\n  let items:{expiry:number}[] = await K.authDB.find({fieldName:\"Token\"}).toArray();\n  for (let i=0; i<items.length; i++) {\n    if (!items[i].expiry || items[i].expiry < Date.now()) {\n      console.log(\"Expired\");\n      await K.authDB.deleteOne(items[i]);\n    }\n  };\n  setTimeout(DBMaintenance, 1000);\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAgB;AADhB,MAAM,EAAE,YAAY,IAAI,QAAQ,SAAS;AAIzC,MAAM,MACJ,2BAAyB,QAAQ,IAAI,WAAS;AAGhD,MAAM,SAAS,IAAI,YAAY,KAAK,EAAE,iBAAiB,MAAM,oBAAoB,KAAK,CAAC;AAEhF,MAAM,WAAW,OAAO,GAAG,mBAAmB;AAGrD,eAAsB,gBAAgB;AACpC,MAAI,QAA0B,MAAM,gBAAE,OAAO,KAAK,EAAC,WAAU,QAAO,CAAC,EAAE,QAAQ;AAC/E,WAAS,IAAE,GAAG,IAAE,MAAM,QAAQ,KAAK;AACjC,QAAI,CAAC,MAAM,GAAG,UAAU,MAAM,GAAG,SAAS,KAAK,IAAI,GAAG;AACpD,cAAQ,IAAI,SAAS;AACrB,YAAM,gBAAE,OAAO,UAAU,MAAM,EAAE;AAAA,IACnC;AAAA,EACF;AAAC;AACD,aAAW,eAAe,GAAI;AAChC;",
  "names": []
}
