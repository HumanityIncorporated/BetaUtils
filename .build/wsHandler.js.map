{
  "version": 3,
  "sources": ["../wsHandler.ts"],
  "sourcesContent": ["// Copyright (c) 2023 BetaOS\nimport {WebSocket} from 'ws';\nimport {uDB} from './consts';\nimport {replyMessage} from './messageHandle';\nimport { updateActive } from './messageHandle';\n// import {systemLog} from './misc';\nimport {systemLog} from './logging'\nconst fs = require('fs')\n\n\n\nexport class WS \n{\n  static notifRoom:WS;\n  DATALOGGING = false;\n  static CALLTIMEOUT = 30000;\n  url:string;\n  static sockets:WS[] = [];\n  nick:string;\n  setNickQ: boolean = false;\n  socket: WebSocket;\n  pausedQ=false;\n  roomName:string;\n  static FAILSAFETIMEOUT:NodeJS.Timeout|null = null;\n  pauser:string|null = null;\n  failedQ = false;\n  callTimes:number[]=[];\n  callReset:NodeJS.Timeout|null = null;\n  callStatus=-1;\n  transferOutQ = false; // is a room that one should recommend transferring out?\n  bypass = false;\n  confirmcode = -1;\n  // static db = new Database();\n  static toSendInfo(msg: string, data:any=null) {\n    if (data) return `{\"type\":\"send\", \"data\":{\"content\":\"${msg}\",\"parent\":\"${data[\"data\"][\"id\"]}\"}}`;\n    else {\n      return `{\"type\":\"send\", \"data\":{\"content\":\"${msg}\"}}`;\n    }\n  }\n\n  incrRunCt() {\n    uDB.findOne({fieldName: \"COUNTERS\"}).then(\n    (obj: {runCt:number})=>{\n      uDB.updateOne({fieldName:\"COUNTERS\"}, \n        {\n          $set: {'runCt': obj.runCt+1},\n          $currentDate: { lastModified: true }\n        })\n    });\n  }\n  incrPingCt() {\n    uDB.findOne({fieldName: \"COUNTERS\"}).then(\n    (obj: {pingCt:number})=>{\n      uDB.updateOne({fieldName:\"COUNTERS\"}, \n        {\n          $set: {'pingCt': obj.pingCt+1},\n          $currentDate: { lastModified: true }\n        })\n    });\n  }\n\n  displayStats(data:any) {\n    uDB.findOne({fieldName: \"COUNTERS\"}).then(\n      (obj: {runCt:number, pingCt: number}) => {\n        this.delaySendMsg(\"Run count: \"+obj.runCt+\"\\\\nPing count: \"+obj.pingCt, data, 0);\n    });\n  }\n\n  bumpCallReset(data:any)\n  {\n    if (this.callReset) \n      clearTimeout(this.callReset);\n    this.callReset = setTimeout(() => {\n      this.resetCall(data); \n    }, WS.CALLTIMEOUT);\n  }\n\n  clearCallReset() {\n    if (this.callReset) clearTimeout(this.callReset);\n    this.callStatus=-1;\n  }\n\n  resetCall(this:WS, data:any) {\n    if (this.callStatus >= 0) {\n      this.sendMsg(\"[CALLEND] Disconnected from BetaOS Services\", data);\n    }\n    this.callStatus= -1;\n  }\n\n  replyMessage(msg:string, sender:string, data:any):string\n  {\n    return \"\"\n  };\n\n  delaySendMsg(msg:string, data:any, delay:number) {\n    if (delay == 0) this.sendMsg(msg, data) // instant send\n    else {\n      setTimeout(()=>{\n      this.sendMsg(msg, data)}, delay);\n    }\n    this.incrRunCt();\n  }\n\n  sendMsg(msg:string, data:any) {\n    this.socket.send(WS.toSendInfo(msg, data))\n    this.incrRunCt();\n  }\n  \n  onOpen() {\n    systemLog((\"BetaUtilities open in \"+this.socket.url));\n    WS.FAILSAFETIMEOUT =setTimeout(()=>{WS.resetTime =1000;}, 10000);\n  }\n\n  initNick() {\n    if (!this.setNickQ) this.changeNick(this.nick)\n    this.setNickQ = true;\n  }\n\n  changeNick(nick:string) {\n    this.socket.send(`{\"type\": \"nick\", \"data\": {\"name\": \"${nick}\"},\"id\": \"1\"}`);\n  }\n\n  onMessage(dat:string) {\n    \n    let data = JSON.parse(dat);\n    if (data[\"type\"] == \"ping-event\") {\n      let reply = `{\"type\": \"ping-reply\",\"data\": {\"time\":${data[\"data\"][\"time\"]}},\"id\":\"0\"}`;\n      this.socket.send(reply);\n      setTimeout(this.initNick.bind(this), 3000);\n    }\n    if (data[\"type\"] == \"send-event\") {\n      // check whether the message contents match the pattern\n      let msg = data[\"data\"][\"content\"].toLowerCase().trim();\n      let snd = data[\"data\"][\"sender\"][\"name\"];\n      if (this.DATALOGGING) {\n        console.log(\"LOG\");\n        fs.writeFileSync('./msgLog.txt', fs.readFileSync('./msgLog.txt').toString()+((`(${this.roomName})[${snd}] ${msg}\\n`)));\n      }\n      // Required methods\n      // !kill\n      if (msg == \"!kill @\" + this.nick.toLowerCase()) {\n        this.sendMsg(\"/me crashes\", data);\n        setTimeout(()=>{\n          this.socket.close(1000, \"!killed by user.\");\n        }, 100);\n      }\n        \n      // !restore\n      else if (this.pausedQ && msg == \"!restore @\" + this.nick.toLowerCase()) {\n        this.sendMsg(\"/me has been unpaused\", data);   \n        updateActive(this.roomName, true);\n        this.pauser = null;\n        this.callTimes = [];\n        this.pausedQ = false;\n      } \n        \n      // !pause\n      else if (msg == \"!pause @\" + this.nick.toLowerCase()) {\n        this.sendMsg(\"/me has been paused\", data)\n        updateActive(this.roomName, false);\n        let reply = \"Enter !kill @\"+this.nick+\" to kill this bot, \"+\n          \"or enter !restore @\"+this.nick+\" to restore it.\";\n        this.sendMsg(reply, data);\n        this.pauser = snd;\n        this.pausedQ = true;\n      } \n      // check paused and pings\n      else if (this.pausedQ &&\n        (msg.match(\"!ping @\" + this.nick.toLowerCase(), \"gmiu\") ||\n         msg.match(\"!help @\" + this.nick.toLowerCase(), \"gmiu\"))) \n      {\n        this.sendMsg(\"/me has been paused by @\"+this.pauser, data);\n        return;\n      } \n      // general unpaused ping\n      else if (msg == \"!ping\") {\n        this.sendMsg(\"Pong!\", data)\n        this.incrPingCt();\n      } \n\n      // self-specific unpaused ping\n      else if (msg.match(\"!ping @\" + this.nick.toLowerCase() + \"$\")) {\n        this.sendMsg(\":white_check_mark: BetaOS services ONLINE\", data)\n        this.incrPingCt();\n      }\n        \n      // general unpaused help\n      else if (msg == \"!help\"){\n        this.sendMsg(\"Enter !help @\"+this.nick+\" for help!\", data);\n      } \n\n      if (data[\"data\"][\"sender\"][\"id\"].match(\"bot:\")) {\n        // don't respond to the bots.\n        return;\n      }\n\n      // send to messageHandle to process messages.\n      else if (!this.pausedQ) {\n        let outStr = this.replyMessage(msg.trim(), snd, data);\n        if (this.failedQ && outStr != \"\") outStr = \"/me is rebooting.\"\n        if (outStr == \"\") return;\n        if (!this.bypass) {\n          this.callTimes.push(Date.now());\n          setTimeout(() => {this.callTimes.shift();}, 60*5*1000) // five minutes.\n        }\n        if (!this.bypass && this.callTimes.length >= 5) {\n          // if (i == 2)\n            if (this.callTimes.length < 10) {\n              outStr = this.transferOutQ?outStr+\"\\\\n[ANTISPAM] Consider moving to &bots or &test for large-scale testing. Thank you for your understanding.\"\n                : outStr+\" [ANTISPAM WARNING]\";\n            } else {\n              outStr = outStr+\"\\\\n[ANTISPAM] Automatically paused @\"+this.nick;\n              this.pausedQ = true;\n              this.pauser = \"BetaOS_ANTISPAM\";\n              this.resetCall(data);\n            }\n        }\n        this.sendMsg(outStr, data);\n      }\n    }\n  }\n\n  errorSocket() {\n    this.pausedQ = false;\n    this.pauser = null;\n    this.changeNick(this.nick + \"[Error]\")\n    this.incrRunCt();\n    this.failedQ = true;\n    setTimeout(() => {\n      this.changeNick(this.nick)\n      this.incrRunCt();\n      updateActive(this.roomName, true);\n      this.failedQ = false;\n    }, 5000);\n    updateActive(this.roomName, false);\n  } // socketclose\n\n  static resetTime = 1000;\n  onClose(event:any) {\n    WS.sockets.splice(WS.sockets.indexOf(this), 1);\n    if (WS.FAILSAFETIMEOUT) {\n      clearTimeout(WS.FAILSAFETIMEOUT);\n      WS.FAILSAFETIMEOUT = null;\n    }\n    // systemLog((\"Perished in:\"+this.roomName);\n    if (event != 1000 && event!=1006) {\n      updateActive(this.roomName, false);\n      systemLog(\"!killed in &\"+this.roomName);\n      setTimeout(() => {\n        new WS(this.url, this.nick, this.roomName, this.transferOutQ)\n        updateActive(this.roomName, true);\n      }, 1000);\n    } else {\n      updateActive(this.roomName, false);\n      if (event==1000) return;\n      WS.resetTime*=1.5;\n      if (WS.resetTime > 30000) {\n        WS.resetTime = 30000;\n        return;\n      }\n      setTimeout(()=>{\n        new WS(this.url, this.nick, this.roomName, this.transferOutQ)\n        updateActive(this.roomName, true);\n      }, WS.resetTime);\n      \n      systemLog((\"Retrying in: \"+Math.round(WS.resetTime/1000)+\" seconds\"));\n      let dateStr = (new Date()).toLocaleDateString(\"en-US\", {timeZone:\"EST\"})+\"/\"+(new Date()).toLocaleTimeString(\"en-US\", {timeZone:\"EST\"});\n      systemLog((\"[close] Connection at \"+this.url+\" was killed at \"+dateStr));\n    }\n  }\n\n  static killall() {\n    for(let i=0; i<WS.sockets.length; i++) {\n      WS.sockets[i].socket.close(1000, \"!killall-ed\");\n      updateActive(WS.sockets[i].roomName, false);\n    }\n  }\n  \n  constructor(url:string, nick:string, roomName:string, transferQ:boolean) {\n    this.nick = nick;\n    if (roomName == \"bots\") WS.notifRoom = this;\n    WS.sockets.push(this);\n    // console.log(WS.sockets);\n    this.url=url;\n    this.roomName = roomName;\n    this.socket = new WebSocket(url);\n    this.transferOutQ=transferQ;\n    this.socket.on('open', this.onOpen.bind(this));\n    this.socket.on('message', this.onMessage.bind(this));\n    this.socket.on('close', this.onClose.bind(this));\n    this.socket.on('error', (e)=>{\n      this.socket.close(1000, \"\");\n      // systemLog((\"ERROR for room-ID: \"+this.roomName)\n      updateActive(this.roomName, false);\n    })\n    this.replyMessage = replyMessage;\n    \n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAwB;AACxB,oBAAkB;AAClB,2BAA2B;AAC3B,IAAAA,wBAA6B;AAE7B,qBAAwB;AACxB,MAAM,KAAK,QAAQ,IAAI;AAIhB,MAAM,GACb;AAAA,EACE,OAAO;AAAA,EACP,cAAc;AAAA,EACd,OAAO,cAAc;AAAA,EACrB;AAAA,EACA,OAAO,UAAe,CAAC;AAAA,EACvB;AAAA,EACA,WAAoB;AAAA,EACpB;AAAA,EACA,UAAQ;AAAA,EACR;AAAA,EACA,OAAO,kBAAsC;AAAA,EAC7C,SAAqB;AAAA,EACrB,UAAU;AAAA,EACV,YAAmB,CAAC;AAAA,EACpB,YAAgC;AAAA,EAChC,aAAW;AAAA,EACX,eAAe;AAAA,EACf,SAAS;AAAA,EACT,cAAc;AAAA,EAEd,OAAO,WAAW,KAAa,OAAS,MAAM;AAC5C,QAAI;AAAM,aAAO,sCAAsC,kBAAkB,KAAK,QAAQ;AAAA,SACjF;AACH,aAAO,sCAAsC;AAAA,IAC/C;AAAA,EACF;AAAA,EAEA,YAAY;AACV,sBAAI,QAAQ,EAAC,WAAW,WAAU,CAAC,EAAE;AAAA,MACrC,CAAC,QAAsB;AACrB,0BAAI;AAAA,UAAU,EAAC,WAAU,WAAU;AAAA,UACjC;AAAA,YACE,MAAM,EAAC,SAAS,IAAI,QAAM,EAAC;AAAA,YAC3B,cAAc,EAAE,cAAc,KAAK;AAAA,UACrC;AAAA,QAAC;AAAA,MACL;AAAA,IAAC;AAAA,EACH;AAAA,EACA,aAAa;AACX,sBAAI,QAAQ,EAAC,WAAW,WAAU,CAAC,EAAE;AAAA,MACrC,CAAC,QAAuB;AACtB,0BAAI;AAAA,UAAU,EAAC,WAAU,WAAU;AAAA,UACjC;AAAA,YACE,MAAM,EAAC,UAAU,IAAI,SAAO,EAAC;AAAA,YAC7B,cAAc,EAAE,cAAc,KAAK;AAAA,UACrC;AAAA,QAAC;AAAA,MACL;AAAA,IAAC;AAAA,EACH;AAAA,EAEA,aAAa,MAAU;AACrB,sBAAI,QAAQ,EAAC,WAAW,WAAU,CAAC,EAAE;AAAA,MACnC,CAAC,QAAwC;AACvC,aAAK,aAAa,gBAAc,IAAI,QAAM,oBAAkB,IAAI,QAAQ,MAAM,CAAC;AAAA,MACnF;AAAA,IAAC;AAAA,EACH;AAAA,EAEA,cAAc,MACd;AACE,QAAI,KAAK;AACP,mBAAa,KAAK,SAAS;AAC7B,SAAK,YAAY,WAAW,MAAM;AAChC,WAAK,UAAU,IAAI;AAAA,IACrB,GAAG,GAAG,WAAW;AAAA,EACnB;AAAA,EAEA,iBAAiB;AACf,QAAI,KAAK;AAAW,mBAAa,KAAK,SAAS;AAC/C,SAAK,aAAW;AAAA,EAClB;AAAA,EAEA,UAAmB,MAAU;AAC3B,QAAI,KAAK,cAAc,GAAG;AACxB,WAAK,QAAQ,+CAA+C,IAAI;AAAA,IAClE;AACA,SAAK,aAAY;AAAA,EACnB;AAAA,EAEA,aAAa,KAAY,QAAe,MACxC;AACE,WAAO;AAAA,EACT;AAAA,EAEA,aAAa,KAAY,MAAU,OAAc;AAC/C,QAAI,SAAS;AAAG,WAAK,QAAQ,KAAK,IAAI;AAAA,SACjC;AACH,iBAAW,MAAI;AACf,aAAK,QAAQ,KAAK,IAAI;AAAA,MAAC,GAAG,KAAK;AAAA,IACjC;AACA,SAAK,UAAU;AAAA,EACjB;AAAA,EAEA,QAAQ,KAAY,MAAU;AAC5B,SAAK,OAAO,KAAK,GAAG,WAAW,KAAK,IAAI,CAAC;AACzC,SAAK,UAAU;AAAA,EACjB;AAAA,EAEA,SAAS;AACP,kCAAW,2BAAyB,KAAK,OAAO,GAAI;AACpD,OAAG,kBAAiB,WAAW,MAAI;AAAC,SAAG,YAAW;AAAA,IAAK,GAAG,GAAK;AAAA,EACjE;AAAA,EAEA,WAAW;AACT,QAAI,CAAC,KAAK;AAAU,WAAK,WAAW,KAAK,IAAI;AAC7C,SAAK,WAAW;AAAA,EAClB;AAAA,EAEA,WAAW,MAAa;AACtB,SAAK,OAAO,KAAK,sCAAsC,mBAAmB;AAAA,EAC5E;AAAA,EAEA,UAAU,KAAY;AAEpB,QAAI,OAAO,KAAK,MAAM,GAAG;AACzB,QAAI,KAAK,WAAW,cAAc;AAChC,UAAI,QAAQ,yCAAyC,KAAK,QAAQ;AAClE,WAAK,OAAO,KAAK,KAAK;AACtB,iBAAW,KAAK,SAAS,KAAK,IAAI,GAAG,GAAI;AAAA,IAC3C;AACA,QAAI,KAAK,WAAW,cAAc;AAEhC,UAAI,MAAM,KAAK,QAAQ,WAAW,YAAY,EAAE,KAAK;AACrD,UAAI,MAAM,KAAK,QAAQ,UAAU;AACjC,UAAI,KAAK,aAAa;AACpB,gBAAQ,IAAI,KAAK;AACjB,WAAG,cAAc,gBAAgB,GAAG,aAAa,cAAc,EAAE,SAAS,IAAI,IAAI,KAAK,aAAa,QAAQ;AAAA,CAAS;AAAA,MACvH;AAGA,UAAI,OAAO,YAAY,KAAK,KAAK,YAAY,GAAG;AAC9C,aAAK,QAAQ,eAAe,IAAI;AAChC,mBAAW,MAAI;AACb,eAAK,OAAO,MAAM,KAAM,kBAAkB;AAAA,QAC5C,GAAG,GAAG;AAAA,MACR,WAGS,KAAK,WAAW,OAAO,eAAe,KAAK,KAAK,YAAY,GAAG;AACtE,aAAK,QAAQ,yBAAyB,IAAI;AAC1C,gDAAa,KAAK,UAAU,IAAI;AAChC,aAAK,SAAS;AACd,aAAK,YAAY,CAAC;AAClB,aAAK,UAAU;AAAA,MACjB,WAGS,OAAO,aAAa,KAAK,KAAK,YAAY,GAAG;AACpD,aAAK,QAAQ,uBAAuB,IAAI;AACxC,gDAAa,KAAK,UAAU,KAAK;AACjC,YAAI,QAAQ,kBAAgB,KAAK,OAAK,2CACd,KAAK,OAAK;AAClC,aAAK,QAAQ,OAAO,IAAI;AACxB,aAAK,SAAS;AACd,aAAK,UAAU;AAAA,MACjB,WAES,KAAK,YACX,IAAI,MAAM,YAAY,KAAK,KAAK,YAAY,GAAG,MAAM,KACrD,IAAI,MAAM,YAAY,KAAK,KAAK,YAAY,GAAG,MAAM,IACxD;AACE,aAAK,QAAQ,6BAA2B,KAAK,QAAQ,IAAI;AACzD;AAAA,MACF,WAES,OAAO,SAAS;AACvB,aAAK,QAAQ,SAAS,IAAI;AAC1B,aAAK,WAAW;AAAA,MAClB,WAGS,IAAI,MAAM,YAAY,KAAK,KAAK,YAAY,IAAI,GAAG,GAAG;AAC7D,aAAK,QAAQ,6CAA6C,IAAI;AAC9D,aAAK,WAAW;AAAA,MAClB,WAGS,OAAO,SAAQ;AACtB,aAAK,QAAQ,kBAAgB,KAAK,OAAK,cAAc,IAAI;AAAA,MAC3D;AAEA,UAAI,KAAK,QAAQ,UAAU,MAAM,MAAM,MAAM,GAAG;AAE9C;AAAA,MACF,WAGS,CAAC,KAAK,SAAS;AACtB,YAAI,SAAS,KAAK,aAAa,IAAI,KAAK,GAAG,KAAK,IAAI;AACpD,YAAI,KAAK,WAAW,UAAU;AAAI,mBAAS;AAC3C,YAAI,UAAU;AAAI;AAClB,YAAI,CAAC,KAAK,QAAQ;AAChB,eAAK,UAAU,KAAK,KAAK,IAAI,CAAC;AAC9B,qBAAW,MAAM;AAAC,iBAAK,UAAU,MAAM;AAAA,UAAE,GAAG,KAAG,IAAE,GAAI;AAAA,QACvD;AACA,YAAI,CAAC,KAAK,UAAU,KAAK,UAAU,UAAU,GAAG;AAE5C,cAAI,KAAK,UAAU,SAAS,IAAI;AAC9B,qBAAS,KAAK,eAAa,SAAO,+GAC9B,SAAO;AAAA,UACb,OAAO;AACL,qBAAS,SAAO,yCAAuC,KAAK;AAC5D,iBAAK,UAAU;AACf,iBAAK,SAAS;AACd,iBAAK,UAAU,IAAI;AAAA,UACrB;AAAA,QACJ;AACA,aAAK,QAAQ,QAAQ,IAAI;AAAA,MAC3B;AAAA,IACF;AAAA,EACF;AAAA,EAEA,cAAc;AACZ,SAAK,UAAU;AACf,SAAK,SAAS;AACd,SAAK,WAAW,KAAK,OAAO,SAAS;AACrC,SAAK,UAAU;AACf,SAAK,UAAU;AACf,eAAW,MAAM;AACf,WAAK,WAAW,KAAK,IAAI;AACzB,WAAK,UAAU;AACf,8CAAa,KAAK,UAAU,IAAI;AAChC,WAAK,UAAU;AAAA,IACjB,GAAG,GAAI;AACP,4CAAa,KAAK,UAAU,KAAK;AAAA,EACnC;AAAA,EAEA,OAAO,YAAY;AAAA,EACnB,QAAQ,OAAW;AACjB,OAAG,QAAQ,OAAO,GAAG,QAAQ,QAAQ,IAAI,GAAG,CAAC;AAC7C,QAAI,GAAG,iBAAiB;AACtB,mBAAa,GAAG,eAAe;AAC/B,SAAG,kBAAkB;AAAA,IACvB;AAEA,QAAI,SAAS,OAAQ,SAAO,MAAM;AAChC,8CAAa,KAAK,UAAU,KAAK;AACjC,oCAAU,iBAAe,KAAK,QAAQ;AACtC,iBAAW,MAAM;AACf,YAAI,GAAG,KAAK,KAAK,KAAK,MAAM,KAAK,UAAU,KAAK,YAAY;AAC5D,gDAAa,KAAK,UAAU,IAAI;AAAA,MAClC,GAAG,GAAI;AAAA,IACT,OAAO;AACL,8CAAa,KAAK,UAAU,KAAK;AACjC,UAAI,SAAO;AAAM;AACjB,SAAG,aAAW;AACd,UAAI,GAAG,YAAY,KAAO;AACxB,WAAG,YAAY;AACf;AAAA,MACF;AACA,iBAAW,MAAI;AACb,YAAI,GAAG,KAAK,KAAK,KAAK,MAAM,KAAK,UAAU,KAAK,YAAY;AAC5D,gDAAa,KAAK,UAAU,IAAI;AAAA,MAClC,GAAG,GAAG,SAAS;AAEf,oCAAW,kBAAgB,KAAK,MAAM,GAAG,YAAU,GAAI,IAAE,UAAW;AACpE,UAAI,UAAW,IAAI,KAAK,EAAG,mBAAmB,SAAS,EAAC,UAAS,MAAK,CAAC,IAAE,MAAK,IAAI,KAAK,EAAG,mBAAmB,SAAS,EAAC,UAAS,MAAK,CAAC;AACtI,oCAAW,2BAAyB,KAAK,MAAI,oBAAkB,OAAQ;AAAA,IACzE;AAAA,EACF;AAAA,EAEA,OAAO,UAAU;AACf,aAAQ,IAAE,GAAG,IAAE,GAAG,QAAQ,QAAQ,KAAK;AACrC,SAAG,QAAQ,GAAG,OAAO,MAAM,KAAM,aAAa;AAC9C,8CAAa,GAAG,QAAQ,GAAG,UAAU,KAAK;AAAA,IAC5C;AAAA,EACF;AAAA,EAEA,YAAY,KAAY,MAAa,UAAiB,WAAmB;AACvE,SAAK,OAAO;AACZ,QAAI,YAAY;AAAQ,SAAG,YAAY;AACvC,OAAG,QAAQ,KAAK,IAAI;AAEpB,SAAK,MAAI;AACT,SAAK,WAAW;AAChB,SAAK,SAAS,IAAI,oBAAU,GAAG;AAC/B,SAAK,eAAa;AAClB,SAAK,OAAO,GAAG,QAAQ,KAAK,OAAO,KAAK,IAAI,CAAC;AAC7C,SAAK,OAAO,GAAG,WAAW,KAAK,UAAU,KAAK,IAAI,CAAC;AACnD,SAAK,OAAO,GAAG,SAAS,KAAK,QAAQ,KAAK,IAAI,CAAC;AAC/C,SAAK,OAAO,GAAG,SAAS,CAAC,MAAI;AAC3B,WAAK,OAAO,MAAM,KAAM,EAAE;AAE1B,8CAAa,KAAK,UAAU,KAAK;AAAA,IACnC,CAAC;AACD,SAAK,eAAe;AAAA,EAEtB;AACF;",
  "names": ["import_messageHandle"]
}
