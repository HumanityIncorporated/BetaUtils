{
  "version": 3,
  "sources": ["../userRequest.ts"],
  "sourcesContent": ["const argon2 = require('argon2');\n// https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html\nimport {authDB, userRegex, expiry} from './consts';\n\nexport async function userRequest(token:string, internalFlag:boolean=false) {\n  if (token == \"[SYSINTERNAL]\" && internalFlag) return {status:\"SUCCESS\", data:{user:\"BetaOS_System\", alias:\"BetaOS_System\", perms:3, expiry:9e99, tasks: [], darkQ:false}, token:\"SYSINTERNAL\"}\n  let tokenData:{associatedUser:string, expiry:number} = await authDB.findOne({fieldName:\"Token\", token:token});\n  if (!tokenData) {\n    return {status:\"ERROR\", data:{errorCode: 0, error:\"Your session could not be found!\"}, token:\"\"}\n  }\n  let userData:{permLevel:number, alias:string, darkTheme:boolean} = await authDB.findOne({fieldName:\"UserData\", user:tokenData.associatedUser});\n  if (Date.now() > tokenData.expiry) {\n    return {status:\"ERROR\", data:{errorCode: 0, error:\"Your session has expired!\"}, token:\"\"};\n  }\n  return {status:\"SUCCESS\", data: {user: tokenData.associatedUser, alias:userData.alias??userData.user, perms:userData.permLevel, expiry: tokenData.expiry, tasks:userData.tasks, darkQ:userData.darkTheme??false, lastCl:userData.lastClicked}, token:token};\n}\n\n\nexport async function extendSession(token:string) {\n  let tokenData:{associatedUser:string, expiry:number} = await authDB.findOne({fieldName:\"Token\", token:token});\n  if (!tokenData) {\n    return {status:\"ERROR\", data:{error:\"Your session could not be found!\"}, token:\"\"}\n  }\n  let userData:{permLevel:number, alias:string, darkTheme:boolean} = await authDB.findOne({fieldName:\"UserData\", user:tokenData.associatedUser});\n  if (Date.now() > tokenData.expiry) {\n    return {status:\"ERROR\", data:{error:\"Your session has expired!\"}, token:\"\"};\n  }\n  let newExpiry = expiry[userData.permLevel]+Date.now();\n  await authDB.updateOne({fieldName:\"Token\", token:token}, {$set:{expiry:newExpiry}});\n  return {status:\"SUCCESS\", data: {expiry: newExpiry}, token:token};\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,oBAAwC;AAFxC,MAAM,SAAS,QAAQ,QAAQ;AAI/B,eAAsB,YAAY,OAAc,eAAqB,OAAO;AAC1E,MAAI,SAAS,mBAAmB;AAAc,WAAO,EAAC,QAAO,WAAW,MAAK,EAAC,MAAK,iBAAiB,OAAM,iBAAiB,OAAM,GAAG,QAAO,MAAM,OAAO,CAAC,GAAG,OAAM,MAAK,GAAG,OAAM,cAAa;AAC7L,MAAI,YAAmD,MAAM,qBAAO,QAAQ,EAAC,WAAU,SAAS,MAAW,CAAC;AAC5G,MAAI,CAAC,WAAW;AACd,WAAO,EAAC,QAAO,SAAS,MAAK,EAAC,WAAW,GAAG,OAAM,mCAAkC,GAAG,OAAM,GAAE;AAAA,EACjG;AACA,MAAI,WAA+D,MAAM,qBAAO,QAAQ,EAAC,WAAU,YAAY,MAAK,UAAU,eAAc,CAAC;AAC7I,MAAI,KAAK,IAAI,IAAI,UAAU,QAAQ;AACjC,WAAO,EAAC,QAAO,SAAS,MAAK,EAAC,WAAW,GAAG,OAAM,4BAA2B,GAAG,OAAM,GAAE;AAAA,EAC1F;AACA,SAAO,EAAC,QAAO,WAAW,MAAM,EAAC,MAAM,UAAU,gBAAgB,OAAM,SAAS,SAAO,SAAS,MAAM,OAAM,SAAS,WAAW,QAAQ,UAAU,QAAQ,OAAM,SAAS,OAAO,OAAM,SAAS,aAAW,OAAO,QAAO,SAAS,YAAW,GAAG,MAAW;AAC5P;AAGA,eAAsB,cAAc,OAAc;AAChD,MAAI,YAAmD,MAAM,qBAAO,QAAQ,EAAC,WAAU,SAAS,MAAW,CAAC;AAC5G,MAAI,CAAC,WAAW;AACd,WAAO,EAAC,QAAO,SAAS,MAAK,EAAC,OAAM,mCAAkC,GAAG,OAAM,GAAE;AAAA,EACnF;AACA,MAAI,WAA+D,MAAM,qBAAO,QAAQ,EAAC,WAAU,YAAY,MAAK,UAAU,eAAc,CAAC;AAC7I,MAAI,KAAK,IAAI,IAAI,UAAU,QAAQ;AACjC,WAAO,EAAC,QAAO,SAAS,MAAK,EAAC,OAAM,4BAA2B,GAAG,OAAM,GAAE;AAAA,EAC5E;AACA,MAAI,YAAY,qBAAO,SAAS,aAAW,KAAK,IAAI;AACpD,QAAM,qBAAO,UAAU,EAAC,WAAU,SAAS,MAAW,GAAG,EAAC,MAAK,EAAC,QAAO,UAAS,EAAC,CAAC;AAClF,SAAO,EAAC,QAAO,WAAW,MAAM,EAAC,QAAQ,UAAS,GAAG,MAAW;AAClE;",
  "names": []
}
