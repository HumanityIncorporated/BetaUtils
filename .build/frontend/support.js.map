{
  "version": 3,
  "sources": ["../../frontend/support.js"],
  "sourcesContent": ["function onLoad() {\n  // send(JSON.stringify({action:\"refresh\"}), (res)=>{\n  // });\n  // send(JSON.stringify({action:\"refresh_users\"}), (res)=>{\n  // });\n  document.getElementById(\"header\").innerHTML = \"Support: #\"+\n    document.URL.match(\"\\\\?room=(.*)\")[1];\n  ROOMNAME = document.URL.match(\"\\\\?room=(.*)\")[1];\n}\n// system refresh auto!\nfunction sendMsg() {\n  let inp = document.getElementById(\"msgInp\");\n  send(JSON.stringify({action:\"sendMsg\", data:{msg:inp.value, room:ROOMNAME}}), ()=>{});\n  inp.value=\"\";\n}\nlet LOADEDQ2 = false;\nconst rmvReg = /(>|^)\\-(.+)\\([0-9]\\)>/gm;\nconst addReg = /(>|^)\\+(.+)\\([0-9]\\)>/gm;\nconst classStr = [\"error\", \"user\", \"admin\", \"superadmin\"]\nasync function initClient()\n{\n  \n  try {\n  console.log(\"Starting client.\")\n  const source = new EventSource('/stream?room='+\n                                 document.URL.match(\"\\\\?room=([0-9a-zA-Z\\\\-_]{1,20})$\")[1]);\n  source.addEventListener('message', message => {\n    console.log('Got', message);\n    ele = document.getElementById(\"userList\");\n    let modif = message.data;\n    \n\n    let removed = rmvReg.exec(modif);\n    let added = addReg.exec(modif)\n    while (removed || added) {\n      if (removed) {\n        ele.innerText= ele.innerText.replace(removed[2]+\"\\n\", \"\");\n      }\n      if (added) {\n        ele.innerText+= added[2]+\"\\n\";\n      }\n      modif = modif.replaceAll(rmvReg, \"\");\n      modif = modif.replaceAll(addReg, \"\");\n      removed = modif.match(rmvReg);\n      added = modif.match(addReg);\n    }\n    \n    ele = document.getElementById(\"msgArea\");\n    let scrDistOKQ =  (ele.scrollTop) >= (ele.scrollHeight-ele.offsetHeight - 100)\n    let msgs = modif.split(\">\");\n    for (let i=0; i<msgs.length; i++) {\n      let matches = msgs[i].match(/\\[(.+)\\]\\(([0-9])\\)(.*)/)\n      if (!matches) continue;\n      let newMsgBody = document.createElement(\"p\");\n      let newMsgSender = document.createElement(\"b\");\n      // parse things\n      newMsgSender.innerText = matches[1];\n      newMsgSender.className = classStr[matches[2]];\n      ele.appendChild(newMsgSender);\n      newMsgBody.className = classStr[matches[2]];\n      let msg = matches[3];\n      // let arr2 = msg.split(\":\");\n      // let arr3 = [];\n      // let prevColon = false;\n      // for (let j=0; j<arr2.length; j++) {\n      //   let idx;\n      //   arr3.push(false)\n      //   for (idx=0; idx<replacements.length && replacements[idx].from!=arr2[j]; idx++);\n      //   if (idx<replacements.length && i>0 && !arr3[j-1]) {\n      //     arr3[j] = true;\n      //     let replaced = document.createElement(\"span\");\n      //     replaced.className=\"material-symbols-outlined supportMsg \"+classStr[matches[2]];\n      //     replaced.innerText = replacements[idx].to;\n      //     ele.appendChild(replaced);\n      //   }\n      //   else {\n      //     msg = (!arr3[j-1]&&i>0?\":\":\"\")+arr2[j];\n      //     console.log(msg);\n      //     regex = new RegExp(\"(#[0-9a-zA-Z_\\\\-]{1,20})\", \"gmiu\");\n      //     while ((arr=regex.exec(msg))!== null) {\n      //       console.log(`Found ${arr[0]}. `, arr.index);\n      //       let fragment = document.createElement(\"span\");\n      //       fragment.className = classStr[matches[2]];\n      //       fragment.innerText = msg.slice(0, arr.index);\n      //       ele.appendChild(fragment);\n      //       let replaced = document.createElement(\"a\");\n      //       replaced.className=classStr[matches[2]];\n      //       replaced.href=\"/support?room=\"+arr[1].slice(1);\n      //       replaced.innerText = arr[1];\n      //       console.log(msg);\n      //       ele.appendChild(replaced);\n      //       msg = msg.slice(arr.index+arr[1].length);\n      //     } // link detection\n      //     let fragment = document.createElement(\"span\");\n      //     fragment.className = classStr[matches[2]];\n      //     fragment.innerText = msg;\n      //     ele.appendChild(fragment);\n      //   }\n      // }\n      \n      // do this sometime soon. \n      msg = msg.replaceAll(\"&gt;\", \">\");\n      // start replacing emojis\n      // replaceAll(msg, ele, matches);\n      newMsgBody.innerText = msg; // but of course.\n      ele.appendChild(newMsgSender);\n      ele.appendChild(newMsgBody);\n      ele.appendChild(document.createElement(\"br\"));\n      document.getElementById(\"placeholder\").style.display=\"none\";\n    } // \n    \n    if (!LOADEDQ2 || scrDistOKQ)\n    {\n      ele.scrollTop = ele.scrollHeight;\n      // console.log(\"Scrolling to bottom.\")\n      LOADEDQ2 = true;\n    }\n\n    \n  });\n  } catch (e) {\n    console.log(\"Restartng client (\"+e+\")\")\n    setTimeout(initClient, 0);\n  }\n} // initClient();\n\n\nconst replacements = [\n  {from:\"one\", to:\"looks_one\"},\n  {from:\"two\", to:\"looks_two\"},\n]\n\nfunction replaceAll(msg, ele, matches) {\n  console.log(msg, ele, matches);\n  for (let j=0; j<replacements.length; j++) {\n    let regex = new RegExp(replacements[j].from, \"gmiu\");\n    while ((arr = regex.exec(msg)) !== null) {\n      console.log(`Found ${arr[0]}. `, arr.index);\n      let fragment = document.createElement(\"span\");\n      fragment.className = classStr[matches[2]];\n      console.log(msg.slice(0, arr.index));\n      if (msg.slice(0, arr.index)) replaceAll(msg.slice(0, arr.index), ele, matches);\n      let replaced = document.createElement(\"span\");\n      replaced.className=\"material-symbols-outlined supportMsg \"+classStr[matches[2]];\n      replaced.innerText = replacements[j].to;\n      console.log(replaced);\n      ele.appendChild(replaced);\n      msg = msg.slice(arr.index+replacements[j].from.length);\n      console.log(msg);\n    }\n  } // for replacements\n}"],
  "mappings": "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",
  "names": ["ele"]
}
