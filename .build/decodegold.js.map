{
  "version": 3,
  "sources": ["../decodegold.js"],
  "sourcesContent": ["/// THIS IS NOT BetaOS CODE ///\n// but i moved some stuff around\n// maybe copyright? leet.nu\n\nconst {subtle} =  require('node:crypto').webcrypto;\n// console.log(subtle);\nconst getRandomValues = require(\"get-random-values\");\n// this is the one you want\nexport function processHeimMessage(cnt, callback) {\n  // var cnt = msg.get('content');\n  if (! maybeGold(cnt)) return;\n  descramble(cnt, function(result) {\n    if (! result) return;\n    callback(result);\n  });\n}\n\n// Tuck all variables away.\n// Where to get additional resources from.\n// var ORIGIN = 'https://euphoria.leet.nu/gold';\n// Ancillary data for encoding.\nvar CHARS = {\n  header: '\\u2029\\u2028\\u2029', footer: '\\u2029', sep: '\\u2028',\n   0: '\\u0020',  1: '\\u00a0',  2: '\\u2000',  3: '\\u2001',\n   4: '\\u2002',  5: '\\u2003',  6: '\\u2004',  7: '\\u2005',\n   8: '\\u2006',  9: '\\u2007', 10: '\\u2008', 11: '\\u2009',\n  12: '\\u200a', 13: '\\u202f', 14: '\\u205f', 15: '\\u3000'\n};\nvar BICHARS = [], REVCHARS = {}, REVBICHARS = {};\nfor (var i = 0; i < 16; i++) {\n  REVCHARS[CHARS[i]] = i;\n}\nfor (var i = 0; i < 256; i++) {\n  BICHARS.push(CHARS[i / 16 | 0] + CHARS[i % 16]);\n  REVBICHARS[BICHARS[i]] = i;\n}\n// Cryptographic keys.\nvar KEYS = [\n  'g/y/LGqUpu/gBg01wjPPWh2fUc3uRdeJJoPEeq418In6gjFffK/f8Pl9BCBlHUzI',\n  'yubJD1jCulqbRE4SHyxV9qSYJ+5dyJKqeZEC2Dh4dsKVQ6k7Isgnn1Pb5ciFCEJ2',\n  'q7iCW1SvGRiJapQKGuy8AF9X+ZgsIrDfX4hFas1JJSPpQ/tHtq8xjz3lgaftP1+b'\n];\nvar CURKEY = KEYS.length - 1;\n\n\n// Utilities:\n// Decode UTF-8 to \"binary\" (Unicode).\nfunction atob_u8(s) {\n  return decodeURIComponent(escape(s));\n}\n// Encode \"binary\" (Unicode) to UTF-8.\nfunction btoa_u8(s) {\n  return unescape(encodeURIComponent(s));\n}\n// Convert a string to a UTF-8 ArrayBuffer.\nfunction str2arr(s) {\n  var cs = btoa_u8(s);\n  var ret = new ArrayBuffer(cs.length);\n  var view = new Uint8Array(ret);\n  for (var i = 0; i < view.length; i++)\n    view[i] = cs.charCodeAt(i);\n  return ret;\n}\n// Convert a UTF-8 ArrayBuffer to a string.\nfunction arr2str(a) {\n  var cs = '';\n  var view = new Uint8Array(a);\n  for (var i = 0; i < view.length; i++)\n    cs += String.fromCharCode(view[i]);\n  return atob_u8(cs);\n}\n// Unpack a message (without decrypting).\nfunction unpackMessage(s) {\n  // Unpack an integer.\n  function unpackInt(s) {\n    if (! s.length) return null;\n    var ret = 0;\n    for (var i = 0; i < s.length; i++) {\n      var c = REVCHARS[s[i]];\n      if (c == undefined) return null;\n      ret = (ret << 4) + c;\n    }\n    return ret;\n  }\n  // Unpack a binary blob into a buffer.\n  function unpackBinary(s) {\n    if (! s.length || s.length % 2) return null;\n    var ret = new ArrayBuffer(s.length / 2);\n    var view = new Uint8Array(ret);\n    for (var i = 0; i < view.length; i++) {\n      var n = REVBICHARS[s.substr(i * 2, 2)];\n      if (n == undefined) return null;\n      view[i] = n;\n    }\n    return ret;\n  }\n  // Check headers/footers; extract payload.\n  if (s.substr(0, 3) != CHARS.header) return null;\n  if (s.substr(-1, 1) != CHARS.footer) return null;\n  var data = s.substring(3, s.length - 1).split(CHARS.sep);\n  // Layout: Variant (number) | Key (48B) | Payload (n * 16B)\n  if (data.length != 3) return null;\n  var variant = unpackInt(data[0]), key = unpackBinary(data[1]),\n      payload = unpackBinary(data[2]);\n  if (variant == null || key == null || payload == null) return null;\n  return {variant: variant, key: key, payload: payload};\n}\n// Pack a message\nfunction packMessage(message) {\n  // Pack an integer.\n  function packInt(n) {\n    var ret = '';\n    do {\n      ret = CHARS[n % 16] + ret;\n      n = n / 16 | 0;\n    } while (n);\n    return ret;\n  }\n  // Pack a binary blob.\n  function packBinary(b) {\n    var ret = '', view = new Uint8Array(b);\n    for (var i = 0; i < view.length; i++)\n      ret += BICHARS[view[i]];\n    return ret;\n  }\n  var packed = [packInt(message.variant), packBinary(message.key),\n                packBinary(message.payload)];\n  return CHARS.header + packed.join(CHARS.sep) + CHARS.footer;\n}\n// Return a Promise of a key and IV derived from (or generated in-place for)\n// the given message.\nfunction cipherParams(message) {\n  // Assign a version if necessary.\n  if (message.variant == undefined)\n    message.variant = CURKEY;\n  // Create fresh key if necessary.\n  if (! message.key) {\n    message.key = new ArrayBuffer(48);\n    getRandomValues(new Uint8Array(message.key));\n  }\n  // Convert master key if necessary.\n  var key = KEYS[message.variant];\n  if (typeof key == 'string') {\n    var deckey = atob(key);\n    key = new ArrayBuffer(deckey.length);\n    for (var i = 0; i < key.length; i++) key[i] = deckey.charCodeAt(i);\n    KEYS[message.variant] = key;\n  }\n  // Compute the HMAC-SHA384 of the message's key with the given secret key\n  // and generate a AES-256-GCM key along with an IV from that, and return\n  // a Promise wrapping the result.\n  return subtle.importKey('raw', KEYS[message.variant],\n    {name: 'HMAC', hash: {name: 'SHA-384'}}, false, ['sign']\n  ).then(function(skey) {\n    return subtle.sign({name: 'HMAC'}, skey, message.key);\n  }).then(function(array) {\n    return subtle.importKey('raw', array.slice(0, 32),\n      {name: 'AES-GCM', length: 256}, false, ['encrypt', 'decrypt']\n    ).then(function(key) {\n      let iv = array.slice(32, 48);\n      return {k: key, i: iv};\n    });\n  });\n}\n// Return a Promise of descrambling the given message.\nfunction descrambleMessage(msg) {\n  return cipherParams(msg).then(function(params) {\n    return subtle.decrypt({name: 'AES-GCM', iv: params.i},\n        params.k, msg.payload).then(function(res) {\n      return arr2str(res);\n    });\n  });\n}\n// Insert parameters into the given message as needed and return a Promise\n// of scrambling it.\nfunction scrambleMessage(msg) {\n  return cipherParams(msg).then(function(params) {\n    return subtle.encrypt({name: 'AES-GCM', iv: params.i},\n      params.k, str2arr(msg.text));\n  });\n}\n// High-level functions:\n// Decrypt the message.\nfunction descramble(data, callback) {\n  // console.log(data);\n  var msg = unpackMessage(data);\n  // console.log(msg);\n  if (! msg) {\n    if (callback) callback(null);\n    return Promise.reject(new Error('Bad message'));\n  }\n  return descrambleMessage(msg).then(function(data) {\n    if (callback) callback(data);\n    return data;\n  }).catch(function(reason) {\n    if (callback) callback(null);\n    console.log(reason);\n    return reason;\n  });\n}\n// Encrypt the message.\nexport function scramble(text, callback) {\n  var msg = {text: text};\n  return scrambleMessage(msg).then(function(res) {\n    msg.payload = res;\n    var fin = packMessage(msg);\n    if (callback) callback(fin);\n    return fin;\n  });\n}\n// Check if a message might be a Gold one.\nexport function maybeGold(text) {\n  return (text && text.substr(0, 3) == CHARS.header &&\n          text.substr(-1, 1) == CHARS.footer);\n}\n"],
  "mappings": "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",
  "names": ["s", "key", "data"]
}
