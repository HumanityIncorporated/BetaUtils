{
  "version": 3,
  "sources": ["../validateLogin.ts"],
  "sourcesContent": ["const argon2 = require('argon2');\nimport {K} from './consts';\nconst crypto = require(\"crypto\");\n\nexport async function validateLogin(user:string, pwd:string, persistQ:boolean, token:string) {\n  if (!user.match(K.userRegex)) {\n    return {status:\"ERROR\", data:{error:\"Invalid user string!\"}, token:token};\n  }\n  if (pwd.length == 0) {\n    return {status:\"ERROR\", data:{error:\"No password provided!\"}, token:token}\n  }\n  let usrInfo = await K.authDB.findOne({fieldName:\"UserData\", user:{$eq:user}}) as {pwd:string, permLevel:number};\n  if (!usrInfo) {\n    return {status:\"ERROR\", data:{error:\"No such user!\"}, token:token}; // keep the original token.\n  }\n  else if (await argon2.verify(usrInfo.pwd, pwd)) {\n    let uuid = crypto.randomUUID() // gen new token\n    let userData:{permLevel:number} = await K.authDB.findOne({fieldName:\"UserData\", user:user});\n    await K.authDB.insertOne({fieldName:\"Token\", associatedUser:user, token:uuid, expiry: persistQ?9e99:Date.now()+K.expiry[userData.permLevel]})\n    return {status:\"SUCCESS\", data:{perms: usrInfo.permLevel}, token:uuid};\n  } else {\n    return {status:\"ERROR\", data:{error:\"Password is invalid!\"}, token:token};\n  }\n}\n\nexport async function signup(user:string, pwd:string, token:string) {\n  if (!user.match(K.userRegex)) {\n    return {status:\"ERROR\", data:{error:\"Invalid user string!\"}, token:token}\n  }\n  if (pwd.length == 0) {\n    return {status:\"ERROR\", data:{error:\"No password provided!\"}, token:token}\n  }\n  let usrInfo = await K.authDB.findOne({fieldName:\"UserData\", user:user}) as {pwd:string, permLevel:number};\n  if (usrInfo) {\n    return {status:\"ERROR\", data:{error:\"User is registered\"}, token:token} // keep the original token.\n  }\n  else {\n    let hash = await argon2.hash(pwd, K.hashingOptions); \n    await K.authDB.insertOne({fieldName:\"UserData\", user:user, pwd:hash, permLevel: 1});\n    return await validateLogin(user, pwd, token);\n  }\n}\n\nexport async function logout(token:string, allaccsQ:boolean=false) {\n  if (allaccsQ) {\n    let userData:{associatedUser:string} = await K.authDB.findOne({fieldName:\"Token\", token:token});\n    if (!userData) {\n      await K.authDB.deleteOne({fieldName:\"Token\", token:token});\n      return {status:\"ERROR\", data:{error:\"Cannot find your session. Logged you out.\"}, token:token};\n    }\n    await K.authDB.deleteMany({fieldName:\"Token\", associatedUser:userData.associatedUser});\n  }\n  await K.authDB.deleteOne({fieldName:\"Token\", token:token});\n  return {status:\"SUCCESS\", data:null, token:\"\"};\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAgB;AADhB,MAAM,SAAS,QAAQ,QAAQ;AAE/B,MAAM,SAAS,QAAQ,QAAQ;AAE/B,eAAsB,cAAc,MAAa,KAAY,UAAkB,OAAc;AAC3F,MAAI,CAAC,KAAK,MAAM,gBAAE,SAAS,GAAG;AAC5B,WAAO,EAAC,QAAO,SAAS,MAAK,EAAC,OAAM,uBAAsB,GAAG,MAAW;AAAA,EAC1E;AACA,MAAI,IAAI,UAAU,GAAG;AACnB,WAAO,EAAC,QAAO,SAAS,MAAK,EAAC,OAAM,wBAAuB,GAAG,MAAW;AAAA,EAC3E;AACA,MAAI,UAAU,MAAM,gBAAE,OAAO,QAAQ,EAAC,WAAU,YAAY,MAAK,EAAC,KAAI,KAAI,EAAC,CAAC;AAC5E,MAAI,CAAC,SAAS;AACZ,WAAO,EAAC,QAAO,SAAS,MAAK,EAAC,OAAM,gBAAe,GAAG,MAAW;AAAA,EACnE,WACS,MAAM,OAAO,OAAO,QAAQ,KAAK,GAAG,GAAG;AAC9C,QAAI,OAAO,OAAO,WAAW;AAC7B,QAAI,WAA8B,MAAM,gBAAE,OAAO,QAAQ,EAAC,WAAU,YAAY,KAAS,CAAC;AAC1F,UAAM,gBAAE,OAAO,UAAU,EAAC,WAAU,SAAS,gBAAe,MAAM,OAAM,MAAM,QAAQ,WAAS,OAAK,KAAK,IAAI,IAAE,gBAAE,OAAO,SAAS,WAAU,CAAC;AAC5I,WAAO,EAAC,QAAO,WAAW,MAAK,EAAC,OAAO,QAAQ,UAAS,GAAG,OAAM,KAAI;AAAA,EACvE,OAAO;AACL,WAAO,EAAC,QAAO,SAAS,MAAK,EAAC,OAAM,uBAAsB,GAAG,MAAW;AAAA,EAC1E;AACF;AAEA,eAAsB,OAAO,MAAa,KAAY,OAAc;AAClE,MAAI,CAAC,KAAK,MAAM,gBAAE,SAAS,GAAG;AAC5B,WAAO,EAAC,QAAO,SAAS,MAAK,EAAC,OAAM,uBAAsB,GAAG,MAAW;AAAA,EAC1E;AACA,MAAI,IAAI,UAAU,GAAG;AACnB,WAAO,EAAC,QAAO,SAAS,MAAK,EAAC,OAAM,wBAAuB,GAAG,MAAW;AAAA,EAC3E;AACA,MAAI,UAAU,MAAM,gBAAE,OAAO,QAAQ,EAAC,WAAU,YAAY,KAAS,CAAC;AACtE,MAAI,SAAS;AACX,WAAO,EAAC,QAAO,SAAS,MAAK,EAAC,OAAM,qBAAoB,GAAG,MAAW;AAAA,EACxE,OACK;AACH,QAAI,OAAO,MAAM,OAAO,KAAK,KAAK,gBAAE,cAAc;AAClD,UAAM,gBAAE,OAAO,UAAU,EAAC,WAAU,YAAY,MAAW,KAAI,MAAM,WAAW,EAAC,CAAC;AAClF,WAAO,MAAM,cAAc,MAAM,KAAK,KAAK;AAAA,EAC7C;AACF;AAEA,eAAsB,OAAO,OAAc,WAAiB,OAAO;AACjE,MAAI,UAAU;AACZ,QAAI,WAAmC,MAAM,gBAAE,OAAO,QAAQ,EAAC,WAAU,SAAS,MAAW,CAAC;AAC9F,QAAI,CAAC,UAAU;AACb,YAAM,gBAAE,OAAO,UAAU,EAAC,WAAU,SAAS,MAAW,CAAC;AACzD,aAAO,EAAC,QAAO,SAAS,MAAK,EAAC,OAAM,4CAA2C,GAAG,MAAW;AAAA,IAC/F;AACA,UAAM,gBAAE,OAAO,WAAW,EAAC,WAAU,SAAS,gBAAe,SAAS,eAAc,CAAC;AAAA,EACvF;AACA,QAAM,gBAAE,OAAO,UAAU,EAAC,WAAU,SAAS,MAAW,CAAC;AACzD,SAAO,EAAC,QAAO,WAAW,MAAK,MAAM,OAAM,GAAE;AAC/C;",
  "names": []
}
