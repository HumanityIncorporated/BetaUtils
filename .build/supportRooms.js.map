{
  "version": 3,
  "sources": ["../supportRooms.ts"],
  "sourcesContent": ["import {userRequest} from './userRequest';\nimport {msgDB, authDB, uDB, roomRegex} from './consts';\nimport {log} from './logging'\nimport {minID} from  './database';\nimport { WebH } from './betautilities/webHandler';\nexport class Room {\n  type:string;\n  name:string;\n  handler: WebH|null;\n  constructor(type:string, name:string, responder:((msg:string, sender:string, data:any)=>any)|null=null, handler: WebH|null=null) {\n    this.type=type;\n    this.name=name;\n    this.handler = handler;\n  };\n\n}\n\nexport class pseudoConnection {\n  send(thing:any) {}\n  close () {}\n};\n\nexport class supportHandler {\n  static allRooms: Room[] = [];\n  static connectionCt = 0;\n  static connections: {event:any, roomName:string, tk:string, readyQ:boolean, isPseudoConnection:boolean}[] = [];\n  static addRoom(rm:Room) {\n    log(\"Room created!\" + rm)\n    let idx = this.allRooms.findIndex((r:any)=>{return r.type==rm.type && r.name==rm.name});\n    if (idx >= 0) return;\n    else this.allRooms.push(rm);\n  }\n  static deleteRoom(type:string, roomName:string) {\n    log(\"Room deleted!\" +  type+ roomName);\n    let idx = this.allRooms.findIndex((r:any)=>{return r.type==type && r.name==roomName});\n    if (idx >= 0) this.allRooms.splice(idx, 1);\n  }\n  static async addConnection(ev:any, rn:string, token:string, internalFlag:boolean=false) {\n    // send existing connections to THIS EVENT ONLY\n    this.connectionCt++;\n    if (internalFlag) \n    {\n      token = \"[SYSINTERNAL]\";\n    }\n    ev.send(JSON.stringify({action:\"RELOAD\"}));\n    for (let i=0; i<this.connections.length; i++) {\n      if (this.connections[i].roomName == rn)\n        userRequest(this.connections[i].tk, this.connections[i].isPseudoConnection).then((obj:{status:string, data:any, token:string})=>{\n          if (obj.status == \"SUCCESS\") {\n            ev.send(JSON.stringify({action:\"addUser\", data:{user:obj.data.alias, perms:obj.data.perms}}));\n          }\n          else {\n            ev.send(JSON.stringify({action:\"addUser\", data:{user:processAnon(this.connections[i].tk), perms:1}}));\n          }\n        });\n    }\n    // add NEW CONNECTION\n    let thiscn = {id:this.connectionCt, event:ev, roomName:rn, tk:token, readyQ:false, isPseudoConnection:internalFlag};\n    this.connections.push(thiscn);\n    // TELL EVERYONE ELSE ABOUT THE NEW CONNECTION\n    userRequest(token, internalFlag).then((obj:{status:string, data:any, token:string})=>{\n      if (obj.status == \"SUCCESS\") this.sendMsgTo(rn, JSON.stringify({action:\"addUser\", data:{user:obj.data.alias, perms:obj.data.perms}}));\n      else this.sendMsgTo(rn, JSON.stringify({action:\"addUser\", data:{user:processAnon(obj.token), perms:1}}));\n    });\n    // console.log(\"added connection in \"+rn);\n    let roomData = await msgDB.findOne({fieldName:\"RoomInfo\", room:{$eq:rn}});\n    let msgCt = roomData?roomData.msgCt:0;\n    // let msgs = await msgDB.find({fieldName:\"MSG\", room:{$eq:rn}, msgID:{$gt: msgCt-30}}).toArray();\n    // let threads = await msgDB.find({fieldName:\"MSG\", room:{$eq:rn}, $or:[{parent:-1}, {parent:{$exists:false}}]}).limit(20).toArray();\n    let text = \"\";\n    // let lastLoadedThread = \n    let loadedCt = 0, j=0;\n    while (loadedCt < 30) {\n      let dat = await loadThread(rn, j, true);\n      j = dat.parentID+1;\n      // console.log(dat)\n      let msgs = dat.ch;\n      if (msgs.length != 0) {\n        loadedCt++;\n        console.log(\"loaded\", msgs.length, \"in room\", rn);\n      }\n      for (let i=0; i<msgs.length; i++) {\n        ev.send(JSON.stringify({action:\"msg\", data:{id:msgs[i].msgID??-1, sender:msgs[i].sender, perms: msgs[i].permLevel, parent:msgs[i].parent??-1, content:msgs[i].data}}));\n      }\n    }\n    ev.send(JSON.stringify({action:\"CONNECTIONID\", data:{id:this.connectionCt}}));\n    // load 3 threads and all their children\n    // for (let i=0; i<threads.length; i++) {\n    //   ev.send(JSON.stringify({action:\"msg\", data:{id:threads[i].msgID??-1, sender:threads[i].sender, perms: threads[i].permLevel, parent: threads[i].parent??-1, content:threads[i].data}}));\n    // }\n    // for (let i=0; i<msgs.length; i++) {\n    //   ev.send(JSON.stringify({action:\"msg\", data:{id:msgs[i].msgID??-1, sender:msgs[i].sender, perms: msgs[i].permLevel, parent: msgs[i].parent??-1, content:msgs[i].data}}));\n    // }\n    text += \"Welcome to BetaOS Services support! Enter any message in the box below. \"+\n      \"Automated response services and utilities are provided by BetaOS System. \"+\n      \"Commands are available here: &gt;&gt;commands \\n\"+\n      \"Enter !alias @[NEWALIAS] to re-alias yourself. Thank you for using BetaOS Systems!\"\n    ev.send(JSON.stringify({action:\"msg\", data:{id:+msgCt+1, sender:\"[SYSTEM]\", perms: 3, content:text}}));\n    thiscn.readyQ = true;\n  }\n  static async removeConnection(ev:any, rn:string, token:string) {\n    let idx = this.connections.findIndex((cn:any)=>cn.event == ev);\n    if (idx >= 0) this.connections.splice(idx, 1);\n    \n    userRequest(token).then((obj:{status:string, data:any, token:string})=>{\n      if (obj.status == \"SUCCESS\") this.sendMsgTo(rn, JSON.stringify({action:\"removeUser\", data:{user:obj.data.alias, perms:obj.data.perms}}));\n      else this.sendMsgTo(rn, JSON.stringify({action:\"removeUser\", data:{user:processAnon(obj.token), perms:1}}));\n      // console.log(\"removed connection in \"+rn); \n    });\n  }\n  \n  static listRooms(euphOnlyQ:boolean, onlineOnlyQ:boolean) {\n    if(euphOnlyQ) {\n      return this.listEuphRooms();\n    }\n    else if (onlineOnlyQ) {\n      return this.listOnlineRooms();\n    }\n    else {\n      return this.listAllRooms();\n    }\n  }\n  \n  static listAllRooms() {\n    let out = [];\n    for (let i=0; i<this.allRooms.length; i++) {\n      if (this.allRooms[i].type == \"HIDDEN_SUPPORT\") continue;\n      out.push(this.getPrefix(this.allRooms[i].type)+this.allRooms[i].name);\n    }\n    return out;\n  }\n  \n  static listEuphRooms() {\n    let out = [];\n    for (let i=0; i<this.allRooms.length; i++) {\n      if (this.allRooms[i].type != \"EUPH_ROOM\") continue;\n      out.push(this.getPrefix(this.allRooms[i].type)+this.allRooms[i].name);\n    }\n    return out;\n  }\n  \n  static listOnlineRooms() {\n    let out = [];\n    for (let i=0; i<this.allRooms.length; i++) {\n      if (this.allRooms[i].type != \"ONLINE_SUPPORT\") continue;\n      out.push(this.getPrefix(this.allRooms[i].type)+this.allRooms[i].name);\n    }\n    return out;\n  }\n\n  static getPrefix(type:string) {\n    switch(type) {\n      case 'EUPH_ROOM': return \"&\";\n      case 'ONLINE_SUPPORT': return \"#\";\n      default: return \"??\";\n    }\n  }\n  \n  static checkFoundQ(roomName:string) {\n    try {\n      for (let i=0; i<this.allRooms.length; i++) {\n        if (this.allRooms[i].name == roomName && this.allRooms[i].type != \"EUPH_ROOM\") return true;\n      }\n      return false;\n    } catch (e:any) {\n    console.log(\"Error:\",e);\n    }\n  }\n\n  static mitoseable(roomName:string) {\n     for (let i=0; i<this.allRooms.length; i++) {\n      if (this.allRooms[i].name == roomName && this.allRooms[i].type == \"EUPH_ROOM\") return true;\n    }\n    return false;\n  }\n  static sendMsgTo(roomName:string, data:string) {\n    for (let i=0; i<this.connections.length; i++) {\n      if (this.connections[i].roomName == roomName) {\n        // encode '>' -- used for message-breaks (yes, it is stupid.)\n        data = data.replaceAll(\">\", \"&gt;\");\n        console.log(data);\n        this.connections[i].event.send(data);\n      }\n    }\n    \n  }\n\n  static sendMsgTo_ID(connectionID:number, data:string) {\n    for (let i=0; i<this.connections.length; i++) {\n      if (this.connections[i].id == connectionID) {\n        // encode '>' -- used for message-breaks (yes, it is stupid.)\n        data = data.replaceAll(\">\", \"&gt;\");\n        console.log(data);\n        this.connections[i].event.send(data);\n        \n      }\n    }\n  }  \n}\n\nexport function sendMsg(msg:string, room:string, parent:number, token:string, callback: (status:string, data:any, token:string)=>any) {\n  userRequest(token).then(async (obj:{status:string, data:any, token:string})=>{\n    let roomData = await msgDB.findOne({fieldName:\"RoomInfo\", room:room});\n    let msgCt = roomData?roomData.msgCt:0;\n    msg = msg.replaceAll(\"\\\\n\", \"\\n\");\n    await msgDB.insertOne({fieldName:\"MSG\", data:msg.replaceAll(\">\", \"&gt;\"), permLevel:obj.data.perms??1, \n                             sender:obj.data.alias??\"\"+processAnon(token), expiry:Date.now()+3600*1000*24*30, \n                           room:room, msgID:msgCt, parent:Number(parent)});\n    await msgDB.updateOne({room:room, fieldName:\"RoomInfo\"}, {\n      $inc: {msgCt:1}\n    }, {upsert: true});\n    if (obj.status == \"SUCCESS\") {\n      supportHandler.sendMsgTo(room, JSON.stringify({action:\"msg\", data:{id:msgCt, sender:obj.data.alias, perms:obj.data.perms, parent: parent, content:msg}}));\n    }\n    else {\n      //console.log(\"sending\")\n      supportHandler.sendMsgTo(room, JSON.stringify({action:\"msg\", data:{id:msgCt, sender:processAnon(token), perms:1, parent: parent, content:msg}}));\n    }\n    //console.log(supportHandler.allRooms);\n    for (let i=0; i<supportHandler.allRooms.length; i++) {\n      if (supportHandler.allRooms[i].name == room) {\n        // console.log(\"sending\"+msg);\n        supportHandler.allRooms[i].handler.onMessage(msg, obj.data.alias??processAnon(token))\n      }\n \n    }\n    callback(\"SUCCESS\", null, token);\n  });\n}\n\nexport async function sendMsg_B(msg:string, room:string) {\n  let roomData = await msgDB.findOne({fieldName:\"RoomInfo\", room:room});\n  let msgCt = roomData?roomData.msgCt:0;\n  let betaNick=\"\";\n  for (let i=0; i<supportHandler.allRooms.length; i++) {\n    if (supportHandler.allRooms[i].name == room) {\n      // console.log(\"sending\"+msg);\n      betaNick=supportHandler.allRooms[i].handler.displayNick??\"[BetaOS_ERROR]\";\n      break;\n    }\n\n  }\n  console.log(msg);\n  await msgDB.insertOne({fieldName:\"MSG\", data:msg.replaceAll(\"\\\\n\\\\n\", \"\\n\").replaceAll(\">\", \"&gt;\"), permLevel:3, \n                           sender:betaNick, expiry:Date.now()+3600*1000*24*30, \n                         room:room, msgID:msgCt});\n  await msgDB.updateOne({room:room, fieldName:\"RoomInfo\"}, {\n      $inc: {msgCt:1}\n    }, {upsert: true});\n  supportHandler.sendMsgTo(room, JSON.stringify({action:\"msg\", data:{id:msgCt, sender:betaNick, perms:3, content:msg.replaceAll(\"\\\\n\\\\n\", \"\\n\")}}));\n}\n\nfunction processAnon(token:string) {\n  return \"Anonymous user\";\n}\n\nexport function roomRequest(token:string, all:boolean=false) {\n  if (all) return {status: \"SUCCESS\", data:supportHandler.listAllRooms(), token:token};\n  else return {status: \"SUCCESS\", data:supportHandler.listOnlineRooms(), token:token};\n}\n\nexport async function createRoom(name:string, token:string) {\n  if (supportHandler.checkFoundQ(name)) return {status:\"ERROR\", data:{error:\"Room already exists\"}, token:token};\n  let usrData = await userRequest(token) as {status:string, data:{perms:number}};\n  if (!name.match(\"^\"+roomRegex+\"$\")) return {status:\"ERROR\", data:{error:\"Invalid roomname!\"}, token:token};\n  if (usrData.status == \"SUCCESS\") {\n    if (usrData.data.perms >= 2) {\n      \n      // supportHandler.addRoom(new Room(\"ONLINE_SUPPORT\", name));\n      new WebH(name, false);\n      let obj = await uDB.findOne({fieldName:\"ROOMS\"});\n      obj.rooms.push(name);\n      await uDB.updateOne({fieldName:\"ROOMS\"}, {\n        $set: {\n          rooms: obj.rooms\n        },\n      }, {upsert:true});\n      return {status:\"SUCCESS\", data:null, token:token}\n    }\n    else return {status:\"ERROR\", data:{error:\"Access denied!\"}, token:token};\n  }\n  else return usrData;\n}\n\nexport async function deleteRoom(name:string, token:string) {\n  if (!supportHandler.checkFoundQ(name)) return {status:\"ERROR\", data:{error:\"Room does not exist\"}, token:token};\n  let usrData = await userRequest(token) as {status:string, data:{perms:number}};\n  if (!name.match(\"^\"+roomRegex+\"$\")) return {status:\"ERROR\", data:{error:\"Invalid roomname!\"}, token:token};\n  if (usrData.status == \"SUCCESS\") {\n    if (usrData.data.perms >= 2) {\n\n      let obj = await uDB.findOne({fieldName:\"ROOMS\"})\n      await msgDB.deleteOne({fieldName:\"RoomInfo\", room:name});\n      await purge(name, token)\n      let idx = obj.rooms.indexOf(name); \n      if (idx>=0) {\n        supportHandler.deleteRoom(\"ONLINE_SUPPORT\", name);\n        obj.rooms.splice(idx, 1);\n        await uDB.updateOne({fieldName:\"ROOMS\"}, {\n          $set: {\n            rooms: obj.rooms\n          },\n        }, {upsert:true});\n        return {status:\"SUCCESS\", data:null, token:token}\n      }\n      else {\n        let idx = obj.hidRooms.indexOf(name); \n        if (idx>=0) {\n          supportHandler.deleteRoom(\"HIDDEN_SUPPORT\", name);\n          obj.hidRooms.splice(idx, 1);\n        }\n        else return {status:\"ERROR\", data:{error: \"Database inconsistency detected\"}, token:token};\n        await uDB.updateOne({fieldName:\"ROOMS\"}, {\n          $set: {\n            hidRooms: obj.hidRooms\n          },\n        }, {upsert:true});\n        return {status:\"SUCCESS\", data:null, token:token}\n      }\n    }\n    else return {status:\"ERROR\", data:{error:\"Access denied!\"}, token:token};\n  }\n  else return usrData;\n}\n\nexport function updateActive(name:string, activeQ: boolean) {\n  if (activeQ) supportHandler.addRoom(new Room(\"EUPH_ROOM\", name));\n  else supportHandler.deleteRoom(\"EUPH_ROOM\", name);\n}\n\nexport async function WHOIS(token:string, user:string) {\n  let userData = await authDB.findOne({fieldName:\"UserData\", user:user});\n  let userData2 = await authDB.find({fieldName:\"UserData\", alias:user}).toArray();\n  let out = [];\n  for (let i=0; i<userData2.length; i++) {\n    out.push({user:userData2[i].user, \n              tasks: userData2[i].tasksCompleted,\n              about:userData2[i].aboutme,\n              perms: userData2[i].permLevel})\n  }\n  return {status:\"SUCCESS\", data:{account:{\n    perms:userData?userData.permLevel:\"N/A\", \n    user:user, \n    tasks:userData?userData.tasksCompleted:\"N/A\",\n    about:userData?userData.aboutme:\"Account not found\"\n  }, users:out}, token:token};\n}\n\n//loadLogs(data.room, data.id, data.from token)\nexport async function loadLogs(rn:string, id:string, from:number, token:string) {\n  try {\n  let roomInfo = await msgDB.findOne({fieldName:\"RoomInfo\", room:{$eq:rn}});\n  from = +from;\n  console.log(\"LOADING LOGS FROM\",from-30,\"TO\",from, roomInfo.minCt);\n  if (from<minID || (roomInfo && roomInfo.minCt && from < roomInfo.minCt)) {\n    supportHandler.sendMsgTo_ID(id, JSON.stringify({action:\"LOADCOMPLETE\", data:{id:-1}}));\n    return {status:\"SUCCESS\", data:null, token:token}\n  }\n  let msgs = await msgDB.find({fieldName:\"MSG\", room:{$eq:rn}, msgID:{$gt: from-30, $lt: from}}).toArray();\n  for (let i=msgs.length-1; i>=0; i--) {\n    console.log(msgs[i].msgID);\n    let dat = JSON.stringify({action:\"msg\", data:{id:\"-\"+msgs[i].msgID, sender:msgs[i].sender, perms:msgs[i].permLevel, parent: msgs[i].parent??-1, content:msgs[i].data}});\n    // console.log(dat);\n    supportHandler.sendMsgTo_ID(id, dat);\n  }\n  console.log(\"LOADING COMPLETE, LOADED\"+msgs.length,\"MESSAGES\");\n  supportHandler.sendMsgTo_ID(id, JSON.stringify({action:\"LOADCOMPLETE\", data:{id:from-30}}));\n  return {status:\"SUCCESS\", data:null, token:token};\n  } catch (e:any) {\n    console.log(\"Error:\",e);\n  }\n} // loadLogs\n\nexport async function delMsg(id:string, room:string, token:string) {\n  try {\n  // console.log({fieldName:\"MSG\", msgID:id, room:room});\n  if (!supportHandler.checkFoundQ(room)) return {status:\"ERROR\", data:{error:\"Room does not exist\"}, token:token};\n  let usrData = await userRequest(token) as {status:string, data:{perms:number}};\n  if (usrData.status != \"SUCCESS\") return usrData;\n  if (usrData.perms < 2) return {status:\"ERROR\", data:{error:\"Insufficient permissions!\"}, token:token};\n  await msgDB.deleteOne({fieldName:\"MSG\", msgID:Number(id), room:room});\n  supportHandler.sendMsgTo(room, JSON.stringify({action:\"delMsg\", data:{id:Number(id)}}));\n  return {status:\"SUCCESS\", data:null, token:token};\n  } catch (e:any) {\n    console.log(\"Error:\",e);\n  }\n}\n\nexport async function updateDefaultLoad(name:string[], token:string) {\n  try {\n  let usrData = await userRequest(token) as {status:string, data:{perms:number}};\n  if (usrData.status != \"SUCCESS\") return usrData;\n  // console.log(usrData.data.perms);\n  if (usrData.data.perms < 3) return {status:\"ERROR\", data:{error:\"Insufficient permissions!\"}, token:token};\n  for (let i=0; i<name.length; i++) {\n    if (!name[i].match(\"^\"+roomRegex+\"$\")) return {status:\"ERROR\", data:{error:\"Invalid room-name(s)\"}, token:token}\n  }\n  await uDB.updateOne({fieldName:\"ROOMS\"}, {$set:{\n    euphRooms:name\n  }});\n  return {status:\"SUCCESS\", data:null, token:token};\n  } catch (e:any) {\n    console.log(\"Error:\",e);\n  }\n}\n\nexport async function hidRoom(name:string, token:string) {\n  try {\n  console.log(name);\n  if (supportHandler.checkFoundQ(name)) return {status:\"ERROR\", data:{error:\"Room already exists\"}, token:token};\n  let usrData = await userRequest(token) as {status:string, data:{perms:number}};\n  if (!name.match(\"^\"+roomRegex+\"$\")) return {status:\"ERROR\", data:{error:\"Invalid roomname!\"}, token:token};\n  if (usrData.status == \"SUCCESS\") {\n    if (usrData.data.perms >= 2) {\n      \n      // supportHandler.addRoom(new Room(\"ONLINE_SUPPORT\", name));\n      new WebH(name, false);\n      let obj = await uDB.findOne({fieldName:\"ROOMS\"});\n      obj.hidRooms.push(name);\n      await uDB.updateOne({fieldName:\"ROOMS\"}, {\n        $set: {\n          hidRooms: obj.hidRooms\n        },\n      }, {upsert:true});\n      return {status:\"SUCCESS\", data:null, token:token}\n    }\n    else return {status:\"ERROR\", data:{error:\"Access denied!\"}, token:token};\n  }\n  else return usrData;\n  } catch (e:any) {\n    console.log(\"Error:\",e);\n  }\n}\n\nexport async function purge(name:string, token:string) {\n  try {\n  if (!supportHandler.checkFoundQ(name)) return {status:\"ERROR\", data:{error:\"Room does not exist\"}, token:token};\n  let usrData = await userRequest(token) as {status:string, data:{perms:number}};\n  if (usrData.status != \"SUCCESS\") return usrData;\n  // console.log(usrData.data.perms);\n  if (usrData.data.perms < 3) return {status:\"ERROR\", data:{error:\"Insufficient permissions!\"}, token:token};\n\n  await msgDB.deleteMany({fieldName:\"MSG\", room:name});\n  await msgDB.updateOne({fieldName:\"RoomInfo\", room:name}, {$set:{\n    msgCt:0,\n    minCt:0\n  }})\n  supportHandler.sendMsgTo(name, JSON.stringify({action:\"RESTART\"}));\n  return {status:\"SUCCESS\", data:null, token:token};\n  } catch (e:any) {\n    console.log(\"Error:\",e);\n  }\n}\n\nexport async function updateAbout(about:string, token:string) {\n  let usrData = await userRequest(token) as {status:string, data:{perms:number}};\n  if (usrData.status != \"SUCCESS\") return usrData;\n  await authDB.updateOne({fieldName:\"UserData\", user:usrData.data.user}, {$set:{\n    aboutme: about\n  }})\n  return {status:\"SUCCESS\", data:null, token:token}\n}\n\nasync function loadThread(room:string, parentID:number, noParent:boolean=false) {\n  let thisMsg;\n  if (noParent) {\n    thisMsg = await msgDB.findOne({fieldName:\"MSG\", $or:[{parent:-1}, {parent:{$exists:false}}], msgID:{$gte:parentID}, room:room})\n    if (!thisMsg) return {ch:[], parentID:parentID};\n  }\n  let children = await msgDB.find({fieldName:\"MSG\", parent:parentID<0?thisMsg.msgID:parentID, room:room}).toArray();\n  for (let i=0; i<children.length; i++) {\n    let newChildren = (await loadThread(room, children[i].msgID)).ch;\n    for (const c of newChildren) \n      children.push(c);\n  }\n  if  (thisMsg) children.push(thisMsg);\n  return {ch:children, parentID:thisMsg?thisMsg.msgID:-1};\n}\n"],
  "mappings": "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",
  "names": ["idx"]
}
