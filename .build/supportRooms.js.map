{
  "version": 3,
  "sources": ["../supportRooms.ts"],
  "sourcesContent": ["import { userRequest } from './userRequest';\nimport { K } from './consts';\nexport class Room {\n  type:string;\n  pausedQ: boolean;\n  name:string;\n  constructor(type:string, name:string) {\n    this.type=type;\n    this.pausedQ = false;\n    this.name=name;\n  };\n\n  pause() {\n    this.pausedQ = true;\n  }\n}\n\nexport class supportHandler {\n  static allRooms: Room[] = [];\n  static connections: {event:any, roomName:string, tk:string}[] = [];\n  static addRoom(r:Room) {\n    this.allRooms.push(r);\n  }\n  static addConnection(ev:any, rn:string, token:string) {\n    // send existing connections to THIS EVENT ONLY\n    for (let i=0; i<this.connections.length; i++) {\n      if (this.connections[i].roomName == rn)\n      userRequest((status:string, data:any, _token:string)=>{\n        if (status == \"SUCCESS\") ev.write(\"data:+\"+data.alias+\"(\"+data.perms+\")>\\n\\n\");\n        else ev.write(\"data:+ANON|\"+processAnon(this.connections[i].tk)+\"(1)>\\n\\n\");\n      }, this.connections[i].tk);\n    }\n    // add NEW CONNECTION\n    this.connections.push({event:ev, roomName:rn, tk:token});\n    // TELL EVERYONE ELSE ABOUT THE NEW CONNECTION\n    userRequest((status:string, data:any, _token:string)=>{\n        if (status == \"SUCCESS\") this.sendMsgTo(rn, \"+\"+data.alias+\"(\"+data.perms+\")\");\n        else this.sendMsgTo(rn, \"+ANON|\"+processAnon(token)+\"(1)\");\n    }, token);\n    console.log(\"added connection in \"+rn);\n  }\n  static async removeConnection(ev:any, rn:string, token:string) {\n    for (let i=0; i<this.connections.length; i++) {\n      if (this.connections[i].event == ev) this.connections.splice(i, 1);\n    };\n    userRequest((status:string, data:any, _token:string)=>{\n      if (status == \"SUCCESS\") this.sendMsgTo(rn, \"-\"+data.alias+\"(\"+data.perms+\")\");\n      else this.sendMsgTo(rn, \"-ANON|\"+processAnon(token)+\"(1)\");\n    }, token);\n    console.log(\"removed connection in \"+rn);\n  }\n  static listRooms(euphOnlyQ:boolean, onlineOnlyQ:boolean) {\n    let out = [];\n    for (let i=0; i<this.allRooms.length; i++) {\n      if (euphOnlyQ && this.allRooms[i].type != \"EUPH_ROOM\") continue;\n      if (onlineOnlyQ && this.allRooms[i].type != \"ONLINE_SUPPORT\") continue;\n      if (this.allRooms[i].type == \"HIDDEN_SUPPORT\") continue;\n      out.push(this.getPrefix(this.allRooms[i].type)+this.allRooms[i].name);\n    }\n    return out;\n  }\n\n  static getPrefix(type:string) {\n    switch(type) {\n      case 'EUPH_ROOM': return \"&\";\n      case 'ONLINE_SUPPORT': return \"#\";\n      default: return \"??\";\n    }\n  }\n  \n  static checkFoundQ(roomName:string) {\n    for (let i=0; i<this.allRooms.length; i++) {\n      if (this.allRooms[i].name == roomName && this.allRooms[i].type != \"EUPH_ROOM\") return true;\n    }\n    return false;\n  }\n  static sendMsgTo(roomName:string, data:string) {\n    for (let i=0; i<this.connections.length; i++) {\n      if (this.connections[i].roomName == roomName) {\n        // encode '>' -- used for message-breaks (yes, it is stupid.)\n        data = data.replace(\">\", \"&gt;\");\n        this.connections[i].event.write(\"data:\"+data+\">\\n\\n\")\n      }\n    }\n  }  \n}\n\nexport async function sendMsg(msg:string, room:string, callback: (status:string, data:any, token:string)=>any, token:string) {\n  userRequest(async (status:string, data:any, _token:string)=>{\n    await K.msgDB.insertOne({fieldName:\"MSG\", user:data.alias});\n    if (status == \"SUCCESS\") supportHandler.sendMsgTo(room, \"[\"+data.alias+\"](\"+data.perms+\")\"+msg);\n    else supportHandler.sendMsgTo(room, \"[ANON|\"+processAnon(token)+\"](1)\"+msg);\n    callback(\"SUCCESS\", null, token);\n  }, token);\n}\n\nfunction processAnon(token:string) {\n  return token?token.slice(0, 4):\"\";\n}\n\nexport function roomRequest(callback:(status:string, data:any, token:string)=>any, token:string, all:boolean=false) {\n  if (all) callback(\"SUCCESS\", supportHandler.listRooms(false, false), token);\n  else callback(\"SUCCESS\", supportHandler.listRooms(false, true), token);\n}"],
  "mappings": "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",
  "names": []
}
