{
  "version": 3,
  "sources": ["../delacc.ts"],
  "sourcesContent": ["import {K} from './consts';\nconst argon2 = require('argon2');\n\nexport async function delAcc(user:string, pass:string, callback:(status:string, data:any, token:string)=>any, token:string) {\n  let tokenData:{associatedUser:string, expiry:number} = await K.authDB.findOne({fieldName:\"Token\", token:token});\n  if (!tokenData) {\n    callback(\"ERROR\", {error:\"Cannot update user information: Your session could not be found!\"}, \"\")\n    return;\n  }\n  if (!user.match(K.userRegex)) {\n    callback(\"ERROR\", {error:\"Invalid user string!\"}, token)\n    return;\n  }\n  \n  let usrInfo = await K.authDB.findOne({fieldName:\"UserData\", user:{$eq:user}}) as {pwd:string, permLevel:number};\n  if (!usrInfo) {\n    callback(\"ERROR\", {error:\"No such user!\"}, token);\n    return;\n  }\n  let loginInfo:{permLevel:number}= await K.authDB.findOne({fieldName:\"UserData\", user:tokenData.associatedUser});\n  if (loginInfo.permLevel>=2) { // admin override\n    await K.authDB.deleteOne({fieldName:\"Token\", token:token})\n    await K.authDB.deleteOne({fieldName:\"UserData\", user:user});\n    callback(\"SUCCESS\", null, token);\n    return;\n  }\n  if (pass.length == 0) {\n    callback(\"ERROR\", {error:\"No password provided!\"}, token)\n    return;\n  }\n  else if (await argon2.verify(usrInfo.pwd, pass)) {\n    await K.authDB.deleteOne({fieldName:\"Token\", token:token})\n    await K.authDB.deleteOne({fieldName:\"UserData\", user:user});\n    callback(\"SUCCESS\", null, \"\");\n    return;\n  } else {\n    callback(\"ERROR\", {error:\"Cannot delete account. Password is invalid!\"}, token);\n    return;\n  }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgB;AAChB,MAAM,SAAS,QAAQ,QAAQ;AAE/B,eAAsB,OAAO,MAAa,MAAa,UAAuD,OAAc;AAC1H,MAAI,YAAmD,MAAM,gBAAE,OAAO,QAAQ,EAAC,WAAU,SAAS,MAAW,CAAC;AAC9G,MAAI,CAAC,WAAW;AACd,aAAS,SAAS,EAAC,OAAM,mEAAkE,GAAG,EAAE;AAChG;AAAA,EACF;AACA,MAAI,CAAC,KAAK,MAAM,gBAAE,SAAS,GAAG;AAC5B,aAAS,SAAS,EAAC,OAAM,uBAAsB,GAAG,KAAK;AACvD;AAAA,EACF;AAEA,MAAI,UAAU,MAAM,gBAAE,OAAO,QAAQ,EAAC,WAAU,YAAY,MAAK,EAAC,KAAI,KAAI,EAAC,CAAC;AAC5E,MAAI,CAAC,SAAS;AACZ,aAAS,SAAS,EAAC,OAAM,gBAAe,GAAG,KAAK;AAChD;AAAA,EACF;AACA,MAAI,YAA8B,MAAM,gBAAE,OAAO,QAAQ,EAAC,WAAU,YAAY,MAAK,UAAU,eAAc,CAAC;AAC9G,MAAI,UAAU,aAAW,GAAG;AAC1B,UAAM,gBAAE,OAAO,UAAU,EAAC,WAAU,SAAS,MAAW,CAAC;AACzD,UAAM,gBAAE,OAAO,UAAU,EAAC,WAAU,YAAY,KAAS,CAAC;AAC1D,aAAS,WAAW,MAAM,KAAK;AAC/B;AAAA,EACF;AACA,MAAI,KAAK,UAAU,GAAG;AACpB,aAAS,SAAS,EAAC,OAAM,wBAAuB,GAAG,KAAK;AACxD;AAAA,EACF,WACS,MAAM,OAAO,OAAO,QAAQ,KAAK,IAAI,GAAG;AAC/C,UAAM,gBAAE,OAAO,UAAU,EAAC,WAAU,SAAS,MAAW,CAAC;AACzD,UAAM,gBAAE,OAAO,UAAU,EAAC,WAAU,YAAY,KAAS,CAAC;AAC1D,aAAS,WAAW,MAAM,EAAE;AAC5B;AAAA,EACF,OAAO;AACL,aAAS,SAAS,EAAC,OAAM,8CAA6C,GAAG,KAAK;AAC9E;AAAA,EACF;AACF;",
  "names": []
}
